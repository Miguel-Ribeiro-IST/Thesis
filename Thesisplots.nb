(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    529050,      10586]
NotebookOptionsPosition[    527151,      10528]
NotebookOutlinePosition[    527497,      10543]
CellTagsIndexPosition[    527454,      10540]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"OTC", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"{", 
       RowBox[{
       "542", ",", "482", ",", "553", ",", "493", ",", "551", ",", "628", ",",
         "691", ",", "710", ",", "696", ",", "635", ",", "641", ",", "648", 
        ",", "707", ",", "601", ",", "582", ",", "603", ",", "595", ",", 
        "598", ",", "673", ",", "586", ",", "507", ",", "418", ",", "373", 
        ",", "299", ",", "283", ",", "259", ",", "220", ",", "197", ",", 
        "169", ",", "142", ",", "128", ",", "111", ",", "100", ",", "96", ",",
         "94", ",", "88", ",", "81", ",", "80", ",", "72"}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198416675989428`*^9, 3.71984168823075*^9}, {
   3.719841767814763*^9, 3.7198420285344195`*^9}, {3.7198434899295454`*^9, 
   3.7198434995532627`*^9}, {3.7198440225274506`*^9, 
   3.7198440771346517`*^9}, {3.7198443669816356`*^9, 3.719844375461952*^9}, 
   3.7198448735458727`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dates", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"DateRange", "[", 
       RowBox[{
        RowBox[{"DateList", "[", "\"\<01 June 2017\>\"", "]"}], ",", 
        RowBox[{"DateList", "[", "\"\<01 May 1998\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", "\"\<Month\>\""}], "}"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198438507519855`*^9, 3.719843874634157*^9}, {
   3.7198439290602884`*^9, 3.719843970895501*^9}, {3.7198440190486293`*^9, 
   3.7198440197041454`*^9}, {3.7198440849363804`*^9, 3.719844109849433*^9}, {
   3.719844141376822*^9, 3.71984414520886*^9}, {3.719844750358923*^9, 
   3.7198448167001143`*^9}, 3.719844877382455*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"dates", ",", "OTC", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198441125451617`*^9, 3.7198441213964033`*^9}, {
  3.7198441617578115`*^9, 3.7198441754794436`*^9}, {3.719844229437518*^9, 
  3.719844230264926*^9}, {3.7198447330560265`*^9, 3.719844733752367*^9}, {
  3.719844853618023*^9, 3.7198448801033306`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img", "=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{"a", ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<$ trillion\>\"", ",", "\"\<A\>\""}], "}"}]}], ",", 
    RowBox[{"DateTicksFormat", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<MonthNameShort\>\"", ",", " ", "\"\<-\>\"", ",", " ", 
       "\"\<YearShort\>\""}], "}"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<June 1, 2001\>\"", ",", "\"\<June 1, 2005\>\"", ",", 
           "\"\<June 1, 2009\>\"", ",", "\"\<June 1, 2013\>\"", ",", 
           "\"\<June 1, 2017\>\""}], "}"}], ",", "None"}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{",", "\"\<$ Trillion\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<OTC Market Size\>\"", "}"}], ",", 
         RowBox[{"LegendFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"#", ",", 
              RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.45"}], ",", 
           RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Thickness", "[", "0.01", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7198446202696037`*^9, 3.719844636432369*^9}, 
   3.719844739636456*^9, {3.719844884855443*^9, 3.7198449645494547`*^9}, {
   3.719845063787086*^9, 3.719845086921872*^9}, {3.7198452399086323`*^9, 
   3.7198452777745066`*^9}, {3.719845308200681*^9, 3.7198454351503534`*^9}, {
   3.719845483719181*^9, 3.719845533787735*^9}, {3.7198456168954554`*^9, 
   3.7198458340200634`*^9}, {3.7198459125881853`*^9, 3.719845974802102*^9}, {
   3.71984623935226*^9, 3.7198462400755186`*^9}, 3.719846280737958*^9, {
   3.7198463391577387`*^9, 3.719846418722895*^9}, {3.7198464623713913`*^9, 
   3.7198464942670484`*^9}, {3.719846617467492*^9, 3.719846700352186*^9}, {
   3.71984676417568*^9, 3.7198467659195604`*^9}, {3.7198468652215233`*^9, 
   3.7198468900901732`*^9}, {3.7198469774734974`*^9, 3.719847200038971*^9}, {
   3.719847247922081*^9, 3.719847349881065*^9}, {3.7198473842802596`*^9, 
   3.7198474478325996`*^9}, {3.7198474897655125`*^9, 3.719847559735839*^9}, {
   3.7198544427467723`*^9, 3.7198544471334624`*^9}, {3.7212266199646435`*^9, 
   3.7212266392013674`*^9}, 3.7212269155462847`*^9, {3.7212269458958263`*^9, 
   3.7212269790618267`*^9}, {3.7212270168131833`*^9, 
   3.7212271056789484`*^9}, {3.7212271904548388`*^9, 3.72122729143129*^9}, 
   3.721228383178586*^9, 3.721325983670216*^9, 3.723832609504619*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], Thickness[0.01], LineBox[CompressedData["
1:eJw10D1Iw1AUBeAoFTp2qOgY7aAgQnQSqZBsjrGKPzikigVBqNWlVYhGrU4R
HAtVzNwpYBF0CoiQMZsVHTJZ/8A46Kq9N+cFkvc+znuXQwZWN3OFbkmShjov
rZ3HPc20tXibU+l7rQnPkeWmAavs0rMp8nmylziHrQVyavRW5ItkZaQlvES2
Zn9hb5nszKRfkefJ0c447K3wvIoOywVy3inCzjrZ9W3Y2uD+3w1YKXH/Lx92
t7h/X1t4m3zW2/MWWy+Tw6kMLO/yvKwGu/tkfc0Q5w+5v23CyWPu36yL85yn
rm7gGjv/9AC32NbjD6ywg670e2yfHf2Nwf0nZHVYh9Uq99eLcJIdVmy4dcT9
yw3Y4376pQ8rPK908QLXOPfuEx/4v3w/vBuEJw7IyqcKB3vcP23A05wHWROW
OY8m63Bkqf/I6pJM
           "]]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{
        FormBox["\"$ trillion\"", TraditionalForm], 
        FormBox["\"A\"", TraditionalForm]},
      AxesOrigin->{3.105648*^9, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"$ Trillion\"", TraditionalForm], None}, {"", None}},
      FrameStyle->Directive[FontSize -> 13],
      FrameTicks->
       FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
           (
           Charting`getDateTicks[{
            "June 1, 2001", "June 1, 2005", "June 1, 2009", "June 1, 2013", 
             "June 1, 2017"}, {"MonthNameShort", "-", "YearShort"}, 
            Map[DateList, {
              SlotSequence[1]}], None]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{
         Automatic, Automatic}, {{{3.2003424*^9, 
            FormBox["\"Jun-01\"", TraditionalForm], {0.01, 0.}}, {
           3.3265728*^9, 
            FormBox["\"Jun-05\"", TraditionalForm], {0.01, 0.}}, {
           3.4528032*^9, 
            FormBox["\"Jun-09\"", TraditionalForm], {0.01, 0.}}, {
           3.5790336*^9, 
            FormBox["\"Jun-13\"", TraditionalForm], {0.01, 0.}}, {3.705264*^9, 
            FormBox["\"Jun-17\"", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->None,
      PlotRange->{{3.105648*^9, 3.705264*^9}, {0, 710.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}], Scaled[{0.5, 0.5}], Center, Scaled[{1, 1}]], 
    InsetBox[
     TemplateBox[{"\"OTC Market Size\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{0, 0}, {0, 0}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}]& )], 
     Scaled[{0., 0.}], ImageScaled[{-0.45, -6}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"$ trillion\"", TraditionalForm], 
     FormBox["\"A\"", TraditionalForm]},
   AxesOrigin->{3.105648*^9, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"$ Trillion\"", TraditionalForm], None}, {"", None}},
   FrameStyle->Directive[FontSize -> 13],
   FrameTicks->{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[{
        "June 1, 2001", "June 1, 2005", "June 1, 2009", "June 1, 2013", 
         "June 1, 2017"}, {"MonthNameShort", "-", "YearShort"}, 
        Map[DateList, {
          SlotSequence[1]}], None]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}},
   ImagePadding->All,
   ImageSize->Medium,
   Method->{},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{None, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         Line[CompressedData["
1:eJw10D1Iw1AUBeAoFTp2qOgY7aAgQnQSqZBsjrGKPzikigVBqNWlVYhGrU4R
HAtVzNwpYBF0CoiQMZsVHTJZ/8A46Kq9N+cFkvc+znuXQwZWN3OFbkmShjov
rZ3HPc20tXibU+l7rQnPkeWmAavs0rMp8nmylziHrQVyavRW5ItkZaQlvES2
Zn9hb5nszKRfkefJ0c447K3wvIoOywVy3inCzjrZ9W3Y2uD+3w1YKXH/Lx92
t7h/X1t4m3zW2/MWWy+Tw6kMLO/yvKwGu/tkfc0Q5w+5v23CyWPu36yL85yn
rm7gGjv/9AC32NbjD6ywg670e2yfHf2Nwf0nZHVYh9Uq99eLcJIdVmy4dcT9
yw3Y4376pQ8rPK908QLXOPfuEx/4v3w/vBuEJw7IyqcKB3vcP23A05wHWROW
OY8m63Bkqf/I6pJM
          "]]}}}, {}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {3.105648*^9, 0}, 
      PlotRange -> {{3.105648*^9, 3.705264*^9}, {0, 710.}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {"$ trillion", "A"}, AxesOrigin -> {3.105648*^9, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"$ Trillion", None}, {Null, None}}, FrameStyle -> 
      Directive[FontSize -> 13], 
      FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
          (
          Charting`getDateTicks[{
           "June 1, 2001", "June 1, 2005", "June 1, 2009", "June 1, 2013", 
            "June 1, 2017"}, {"MonthNameShort", "-", "YearShort"}, 
           Map[DateList, {
             SlotSequence[1]}], None]& )[
           SlotSequence[1]], {Identity, Identity}]& , None}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
      PlotRange -> {{3.105648*^9, 3.705264*^9}, {0, 710.}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {"OTC Market Size"}, 
       LegendMarkers -> {{False, Automatic}}, Joined -> {True}, 
       LabelStyle -> {}, LegendFunction -> (Framed[#, RoundingRadius -> 0]& ),
        LegendLayout -> "Column", LegendMargins -> 0]], {{0., 
      0.}, {-0.45, -6}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7198446313003273`*^9, 3.7198446372935295`*^9}, 
   3.7198447404056687`*^9, {3.7198448334320755`*^9, 3.7198448596811523`*^9}, 
   3.7198449085165844`*^9, {3.719844949165448*^9, 3.719844965191454*^9}, {
   3.719845069054077*^9, 3.7198450874826736`*^9}, {3.719845250584588*^9, 
   3.7198452661755157`*^9}, {3.7198453579650464`*^9, 3.719845382369379*^9}, 
   3.7198454356437693`*^9, {3.7198454856676226`*^9, 3.7198455349848833`*^9}, {
   3.719845662216072*^9, 3.7198458040125675`*^9}, 3.719845834538621*^9, {
   3.7198459223477736`*^9, 3.719845953756496*^9}, 3.7198462841002197`*^9, {
   3.719846331396686*^9, 3.71984635534019*^9}, {3.7198464065963497`*^9, 
   3.71984641965071*^9}, {3.719846463327642*^9, 3.7198464953699837`*^9}, {
   3.7198466462636814`*^9, 3.719846701470033*^9}, 3.7198467667216415`*^9, {
   3.719846883846728*^9, 3.7198468907294135`*^9}, 3.7198469283665*^9, {
   3.7198469870767198`*^9, 3.719847200740263*^9}, {3.7198472504120183`*^9, 
   3.719847350582716*^9}, {3.7198473991233296`*^9, 3.719847448334257*^9}, {
   3.7198475093942003`*^9, 3.719847560283675*^9}, 3.7198550808872232`*^9, {
   3.721226622510627*^9, 3.721226639873274*^9}, 3.7212273358688107`*^9, 
   3.7212283859750795`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Miguel\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\\
OTC.eps\>\"", ",", "img", ",", "\"\<eps\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.719845881155136*^9, 3.719845882710074*^9}, {
  3.7198544516282787`*^9, 3.7198544545456114`*^9}, {3.719854822397788*^9, 
  3.7198548286280527`*^9}, {3.719854863427001*^9, 3.7198548870585556`*^9}}],

Cell[BoxData[
 RowBox[{"NotebookSave", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7198641526051674`*^9, 3.7198641579485035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "OTC", "]"}]], "Input",
 CellChangeTimes->{{3.7199330305985775`*^9, 3.719933061856498*^9}}],

Cell[BoxData["710"], "Output",
 CellChangeTimes->{3.7199330622443676`*^9, 3.7212266324022856`*^9, 
  3.721227337257536*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7212253504489365`*^9, 3.7212253530434895`*^9}, {
  3.721225412261886*^9, 3.721225414931365*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"x", "-", "K"}], ",", "0"}], "]"}], ",", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"K", "-", "x"}], ",", "0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.025", ",", "0.035"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<call\>\"", ",", "\"\<put\>\""}], "}"}], ",", 
         RowBox[{"LegendFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"#", ",", 
              RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.7"}], ",", 
           RowBox[{"-", "3.4"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<S(T)\>\"", ",", "\"\<Payoff\>\""}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"K", ",", "\"\<K\>\""}], "}"}], "}"}], ",", "None"}], 
      "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7212253347938457`*^9, 3.7212254550681753`*^9}, {
   3.7212255531934023`*^9, 3.72122559957314*^9}, {3.7212256297589426`*^9, 
   3.7212256462564545`*^9}, {3.7212256860666733`*^9, 3.721225804475669*^9}, {
   3.7212259571083994`*^9, 3.721225960245367*^9}, {3.721226043179997*^9, 
   3.721226075035633*^9}, {3.721226135905605*^9, 3.7212261420127816`*^9}, {
   3.7212262658634467`*^9, 3.72122632272884*^9}, {3.7212263649095454`*^9, 
   3.7212264096123643`*^9}, {3.7212264454828277`*^9, 3.721226584063252*^9}, {
   3.7212267124076476`*^9, 3.7212267795315576`*^9}, {3.7212268181254992`*^9, 
   3.7212268658435574`*^9}, {3.721227329984416*^9, 3.7212273316698227`*^9}, {
   3.7212280534380164`*^9, 3.721228124066445*^9}, {3.7212282024578466`*^9, 
   3.7212282030839767`*^9}, 3.7319717004811087`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], Opacity[
            1.], Dashing[{0.025, 0.035}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQ7ZX64uKBl6l2DFDA4ixVcF/SxR7GN54/Y85myRA4
3/vs9U1zJVPg/PCU73snSZbA+Xf12517JVvg/AWi/m1dklPg/EaOzeqdkkvg
/IjIhes/fNwC53P/b4xxl9sP56sGvntxuPsInF9+ztJ+xpeTcL74FsF7jIzn
4fxtj5zPnLe5BOcfyporHfnmCpz/Vc2Wf23udTif6edqAWnVW3C+2f+EbcHr
7sD5Z1pMzh3Tug/ny094/XPluwdw/uvv9+9dNXgE5y95tfsUX99jOJ9Pdvn7
J0+ewPk9mVvTFqg8g/O/Oax+klH/HM4vMTqyRezwCzj//roj3RcVX8H5v7Ou
zNaseg3nazuy/0vb/QbOd1+kmL5R/B0ivGTjlR7GvIfzkwIMwu4kIvh+zYxd
19MQfLWXiz+eLUDwr2x5cWBXC4Jv4FMUP2UNgm9vcq392C8EHwBgyJml
             "]], LineBox[CompressedData["
1:eJwd0X0w23ccB/B4OsExUnpXW5i0dvVQXE+1WPfuqakSjpRxVZHq6gzbUFtl
T5WebDgdt+ZS81RtQplNaqPV+lEzHevq0DCMZhoPo638ovWY4bvf9sfnPu/X
fe7e/3xckj8UnDVmsVgBzPy3n8zaU5XGerDY3jemZoMRvnv2gCObsTzkQbqv
CF1U/8AVS8Z54oqr3mfh986t9xysGWd8n6F2TwOv8KsqWw7j/0M2BmMeZmy5
Mk51T7m1fRGez2OtRiMYW3060v3RZbTF8O8VRTH2clCreDIc7Qg699YJPbqi
VIOVAzKc/Np7ojZejzz59O8fu8lR6GPRmHNGjyM8frf74zLM5VBhHDFz9+eq
vgmuRs0WryhCyfS1JAU3Fyqx4xU9u8egh0hr5CSJV8H0XoVqd+USjujbNwK6
7yDdt33cIvwF4hXj/ZHx3Wg8nlzTuco4gmOy0tqLlWeOtnPyl6hPGs3zuf0Q
rSeOmciClzEcybWO4gzhQqj0asvcMjZdHL54VK6Gy+OwMYV0Bfk5HqdLdv6B
gIP5sl37VzE/aStI6RvDKaeBDSP1KjLFb/5tzp/AyoNL2kzJGoY9Dhb9YqZB
makwR7BnHT4W1LwydAo7NK3XjXvW8QaV/rZZwROYfS6J8c/agKXBuCFbqwWr
QajScgxgCTqE911nkF2uusTpNmDGN+lV1/xZdHgUsO0++AefxNna8SbnYBeW
7XnRZhM82Uy8KXcek/sG1WJqE20JNTde5i7gZjX2zAi3IDp8IbSv4ykSVX52
3O0t3BW+zwvYfIY86TXJ5HfbzP+OmtyJXcQP89wKGz7ByaFAP26ZDgVVUpEm
ksA20OpnqkqHdwWLrk3RBH3KP8NPKXR4jaJuRsQRHMoVn65o0qGoJOHX4mQC
e+fbxbvu65Dq9+2SpZhgMGP/tMMLHXj59qHmdQTBbLdSGz6N7UOfWY/WE2xm
rTs2RdMYX5x+VNdI8ONEb21EHI3SuJ8SQ5oJXleltBcn0yDugnNSimA7Vjln
KaYxOVRSbaImaFM4Hzavo9H25doZ9QhBpjXdW9dIQxaY5KYYI9h7vlMQ0kwj
vNarJUhDIA9LTJVSNO7m9v8mWSDIWSq/bKKmId93oCT6OYFnQpqTYoxGlrYy
xoUm0Pb4NwRpaOzlZ/zVtUwQVTbWKVmgYWo0rCxdI2Ab1x93oWlMtQamiQwE
Xennh7uWaVBpCm+fLYLckZAkkYHGFWerFUIIvLDzKSE0/gVJrdHA
             "]]},
           Annotation[#, "Charting`Private`Tag$1965#1"]& ], 
          TagBox[
           {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.01], Opacity[
            1.], LineBox[CompressedData["
1:eJwV030w2wcYB/BE7eqmF9yUy1C0mGaOeDmOtfvG2DnVabNqO9MWqaBax5ke
e7kGzXkramhnnbdOXJl6q0xV1ybT0LUVqfc1aROSsAh+v5qqYa399sdzz33u
e9//nseZl/Y534RGowVR8/8+wDeMSOf5H3vCxri1RcI05P10DTMUaet7Ctc3
SPjWV9d0M6PQ2e3ttrJKIkI+dauWmQBf9894cwskjies3atgZiLASqgcmiLx
wqsgpJQpRLBu+fGPHSQadh7KL2ZW4UiBvNU3lkSuWfcHRUwRshXC1KT7BL6I
vt7xclmMiXFz4+/xSzDfyj0RtksCR2madYD9Ily5hOHBJRlun5W9Y/HCiKzh
QFS/egReiffLZ3nzsBVbqel0BTYqvi2UwIAebciQYt8omhhqZvXMHPpTau2i
F8dRf8A7Y6xoFqtu+y3aUqeQfy4+e2+4HibrrZZ2rkoItv2SlbGkhf9WXM+R
9ufg5yhcJptnMCT0Gx5kaXDt3mx1Tco0HMsX1luIafRr3Hfc3K3GwppGPcHW
gmXJ+SSqTgWR8e5jRpkOvazCFK3uTzAcbpB6vR76gS4nf/9JlJz5NbHBZQ4G
jys+kp4xvOa06pMFf8H6Qou/J30EmT4ysc0DA9j+pEfTyhA07bJLI85GCEOX
nt7JfojNlPGf9n6zAOuo9vJo2358GLz9beLdRTS/HrD4w6UPYT87J3XZEihX
zZbOC9vhV81wG7QnIP3Opr7Wtx1OZZt6pTMB2q6wTq62DRtfT/BMPQjExTWP
3kEb2rhFp45zCLBnU2yLN1rxHn356JtkAk8JsoGV3gJNrDQ0vI+ApclG99kY
EYaOtm07JSHAaWQNOL4rQm/Etf4MGYGc0JjJsd5GVARkcmqGCUzn//bPRzaN
+NTCfR+pJdBpLti/Y+Q6Wu9f9r1iTt0Jy6wsurQOWQ6xu2dOkHDi2otVp6vA
O8w+9jyehHRlNfC8rBKRF+nFU4kkOFcVEoZrJdzmG5fl6ZRVeU+C577HuNgg
7ROSoD0ZHTg0Ugb2wYzYqpuUX53bY1AKYS8IqbzcRTnQycuu5iK237J+WNxD
9S+MBUWezIPa9rZnrpTKrTJFyRIBSnSbb1LHKQcxTOiPziPbRu595hllWSYz
KeIrnA6v4yeoSeREqthyeTqCOjjyLw1UPnhY4tOUBDetFf3YEmWlA/G2hQer
nTo/7t+U1ROBV0/G4N8wcfLBNcpm6T94JnEBv8mCQervaKZeN6ZnQ/EfkwPS
pA==
             "]], LineBox[CompressedData["
1:eJxF0WtI02EYBfA5NadDc2sRiVabCmqaEjkzI8nCbLrIuVIql8yCMjFvHxpd
Fy515OXD0NLNVlO7jJrRFmJ/U0KCIlGbodJatXJ0UdN0Tq25CuI9DxwOv28H
Hq70tOg4nUaj7fybf/1xnEOp6dPJtP+XHjoeH8SAe6n+gUY/mH/w8cnV/jCv
ulITyIav8YoTajlwAJUzxFwDL05FevsEw4PiV4WucDh1yrjibARMVWq0C1Hw
7a6i4dlY+MIG1vZviXD0xAHmiBDuFGf0KPfDu7pTynZkwYdqY9+25cDVcb76
8nzYXk4J2DJY6+Ipha3wqpXTjL4l2Kun2RCqniE+teXJmG/6T2L9Xqn26Tzs
+B4UaG+YJTZl7fFU7Z4jvpimuGG0w9x3glGdwkG8LaFCtXbzPPGRdQOLHmbY
8bLGVix34j9eknJR2AL2W0236H2w93m5OLFkkZh2V2KwsZeIS5sMNexncPfG
Kgar6BcxS1AafTngN7ElZtAso+COluSwzxIXca6BzwpZhi8pbsot95aJ738J
aQ7IcBNXaRR51n3wMdFk+INMOJiiOoTZsLLu8POrUvgE//qMnwzmVXDSfNrh
5a3n/EfuwGOTn1636+H67Ee5qQ9hd5SoTEHBlqG6Fk8z3HnFmW9+A6uSjkbq
RuH0tk3GFCvcdab/hfwr3BATX5c5AZfY1GLuDzgio/B97xzs5THcWu+EP5iS
CvKWYKpAFxvnghvXMx1uN/wHQG4O0w==
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$1965#2"]& ], {}}, {{}, {}, {}, {}}}, {}, \
{}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"S(T)\"", TraditionalForm], 
        FormBox["\"Payoff\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->Directive[FontSize -> 13],
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->None,
      PlotRange->{{0, 2}, {0., 0.9999999591836735}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{1, 
          FormBox["\"K\"", TraditionalForm]}}, {}}], Scaled[{0.5, 0.5}], 
     Center, Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"\"call\"","\"put\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{0.225, 0.31500000000000006`}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{0.225, 0.31500000000000006`}]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{0, 0}, {0, 0}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.025`", ",", "0.035`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}]& )], 
     Scaled[{0., 0.}], ImageScaled[{-0.7, -3.4}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"S(T)\"", TraditionalForm], 
     FormBox["\"Payoff\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[FontSize -> 13],
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   ImageSize->Medium,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{1, 
       FormBox["\"K\"", TraditionalForm]}}, {}}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           Dashing[{0.025, 0.035}]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGBQBWIQ7ZX64uKBl6l2DFDA4ixVcF/SxR7GN54/Y85myRA4
3/vs9U1zJVPg/PCU73snSZbA+Xf12517JVvg/AWi/m1dklPg/EaOzeqdkkvg
/IjIhes/fNwC53P/b4xxl9sP56sGvntxuPsInF9+ztJ+xpeTcL74FsF7jIzn
4fxtj5zPnLe5BOcfyporHfnmCpz/Vc2Wf23udTif6edqAWnVW3C+2f+EbcHr
7sD5Z1pMzh3Tug/ny094/XPluwdw/uvv9+9dNXgE5y95tfsUX99jOJ9Pdvn7
J0+ewPk9mVvTFqg8g/O/Oax+klH/HM4vMTqyRezwCzj//roj3RcVX8H5v7Ou
zNaseg3nazuy/0vb/QbOd1+kmL5R/B0ivGTjlR7GvIfzkwIMwu4kIvh+zYxd
19MQfLWXiz+eLUDwr2x5cWBXC4Jv4FMUP2UNgm9vcq392C8EHwBgyJml
           "]], 
          Line[CompressedData["
1:eJwd0X0w23ccB/B4OsExUnpXW5i0dvVQXE+1WPfuqakSjpRxVZHq6gzbUFtl
T5WebDgdt+ZS81RtQplNaqPV+lEzHevq0DCMZhoPo638ovWY4bvf9sfnPu/X
fe7e/3xckj8UnDVmsVgBzPy3n8zaU5XGerDY3jemZoMRvnv2gCObsTzkQbqv
CF1U/8AVS8Z54oqr3mfh986t9xysGWd8n6F2TwOv8KsqWw7j/0M2BmMeZmy5
Mk51T7m1fRGez2OtRiMYW3060v3RZbTF8O8VRTH2clCreDIc7Qg699YJPbqi
VIOVAzKc/Np7ojZejzz59O8fu8lR6GPRmHNGjyM8frf74zLM5VBhHDFz9+eq
vgmuRs0WryhCyfS1JAU3Fyqx4xU9u8egh0hr5CSJV8H0XoVqd+USjujbNwK6
7yDdt33cIvwF4hXj/ZHx3Wg8nlzTuco4gmOy0tqLlWeOtnPyl6hPGs3zuf0Q
rSeOmciClzEcybWO4gzhQqj0asvcMjZdHL54VK6Gy+OwMYV0Bfk5HqdLdv6B
gIP5sl37VzE/aStI6RvDKaeBDSP1KjLFb/5tzp/AyoNL2kzJGoY9Dhb9YqZB
makwR7BnHT4W1LwydAo7NK3XjXvW8QaV/rZZwROYfS6J8c/agKXBuCFbqwWr
QajScgxgCTqE911nkF2uusTpNmDGN+lV1/xZdHgUsO0++AefxNna8SbnYBeW
7XnRZhM82Uy8KXcek/sG1WJqE20JNTde5i7gZjX2zAi3IDp8IbSv4ykSVX52
3O0t3BW+zwvYfIY86TXJ5HfbzP+OmtyJXcQP89wKGz7ByaFAP26ZDgVVUpEm
ksA20OpnqkqHdwWLrk3RBH3KP8NPKXR4jaJuRsQRHMoVn65o0qGoJOHX4mQC
e+fbxbvu65Dq9+2SpZhgMGP/tMMLHXj59qHmdQTBbLdSGz6N7UOfWY/WE2xm
rTs2RdMYX5x+VNdI8ONEb21EHI3SuJ8SQ5oJXleltBcn0yDugnNSimA7Vjln
KaYxOVRSbaImaFM4Hzavo9H25doZ9QhBpjXdW9dIQxaY5KYYI9h7vlMQ0kwj
vNarJUhDIA9LTJVSNO7m9v8mWSDIWSq/bKKmId93oCT6OYFnQpqTYoxGlrYy
xoUm0Pb4NwRpaOzlZ/zVtUwQVTbWKVmgYWo0rCxdI2Ab1x93oWlMtQamiQwE
Xennh7uWaVBpCm+fLYLckZAkkYHGFWerFUIIvLDzKSE0/gVJrdHA
           "]]}, "Charting`Private`Tag$1965#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[0.01]], 
          Line[CompressedData["
1:eJwV030w2wcYB/BE7eqmF9yUy1C0mGaOeDmOtfvG2DnVabNqO9MWqaBax5ke
e7kGzXkramhnnbdOXJl6q0xV1ybT0LUVqfc1aROSsAh+v5qqYa399sdzz33u
e9//nseZl/Y534RGowVR8/8+wDeMSOf5H3vCxri1RcI05P10DTMUaet7Ctc3
SPjWV9d0M6PQ2e3ttrJKIkI+dauWmQBf9894cwskjies3atgZiLASqgcmiLx
wqsgpJQpRLBu+fGPHSQadh7KL2ZW4UiBvNU3lkSuWfcHRUwRshXC1KT7BL6I
vt7xclmMiXFz4+/xSzDfyj0RtksCR2madYD9Ily5hOHBJRlun5W9Y/HCiKzh
QFS/egReiffLZ3nzsBVbqel0BTYqvi2UwIAebciQYt8omhhqZvXMHPpTau2i
F8dRf8A7Y6xoFqtu+y3aUqeQfy4+e2+4HibrrZZ2rkoItv2SlbGkhf9WXM+R
9ufg5yhcJptnMCT0Gx5kaXDt3mx1Tco0HMsX1luIafRr3Hfc3K3GwppGPcHW
gmXJ+SSqTgWR8e5jRpkOvazCFK3uTzAcbpB6vR76gS4nf/9JlJz5NbHBZQ4G
jys+kp4xvOa06pMFf8H6Qou/J30EmT4ysc0DA9j+pEfTyhA07bJLI85GCEOX
nt7JfojNlPGf9n6zAOuo9vJo2358GLz9beLdRTS/HrD4w6UPYT87J3XZEihX
zZbOC9vhV81wG7QnIP3Opr7Wtx1OZZt6pTMB2q6wTq62DRtfT/BMPQjExTWP
3kEb2rhFp45zCLBnU2yLN1rxHn356JtkAk8JsoGV3gJNrDQ0vI+ApclG99kY
EYaOtm07JSHAaWQNOL4rQm/Etf4MGYGc0JjJsd5GVARkcmqGCUzn//bPRzaN
+NTCfR+pJdBpLti/Y+Q6Wu9f9r1iTt0Jy6wsurQOWQ6xu2dOkHDi2otVp6vA
O8w+9jyehHRlNfC8rBKRF+nFU4kkOFcVEoZrJdzmG5fl6ZRVeU+C577HuNgg
7ROSoD0ZHTg0Ugb2wYzYqpuUX53bY1AKYS8IqbzcRTnQycuu5iK237J+WNxD
9S+MBUWezIPa9rZnrpTKrTJFyRIBSnSbb1LHKQcxTOiPziPbRu595hllWSYz
KeIrnA6v4yeoSeREqthyeTqCOjjyLw1UPnhY4tOUBDetFf3YEmWlA/G2hQer
nTo/7t+U1ROBV0/G4N8wcfLBNcpm6T94JnEBv8mCQervaKZeN6ZnQ/EfkwPS
pA==
           "]], 
          Line[CompressedData["
1:eJxF0WtI02EYBfA5NadDc2sRiVabCmqaEjkzI8nCbLrIuVIql8yCMjFvHxpd
Fy515OXD0NLNVlO7jJrRFmJ/U0KCIlGbodJatXJ0UdN0Tq25CuI9DxwOv28H
Hq70tOg4nUaj7fybf/1xnEOp6dPJtP+XHjoeH8SAe6n+gUY/mH/w8cnV/jCv
ulITyIav8YoTajlwAJUzxFwDL05FevsEw4PiV4WucDh1yrjibARMVWq0C1Hw
7a6i4dlY+MIG1vZviXD0xAHmiBDuFGf0KPfDu7pTynZkwYdqY9+25cDVcb76
8nzYXk4J2DJY6+Ipha3wqpXTjL4l2Kun2RCqniE+teXJmG/6T2L9Xqn26Tzs
+B4UaG+YJTZl7fFU7Z4jvpimuGG0w9x3glGdwkG8LaFCtXbzPPGRdQOLHmbY
8bLGVix34j9eknJR2AL2W0236H2w93m5OLFkkZh2V2KwsZeIS5sMNexncPfG
Kgar6BcxS1AafTngN7ElZtAso+COluSwzxIXca6BzwpZhi8pbsot95aJ738J
aQ7IcBNXaRR51n3wMdFk+INMOJiiOoTZsLLu8POrUvgE//qMnwzmVXDSfNrh
5a3n/EfuwGOTn1636+H67Ee5qQ9hd5SoTEHBlqG6Fk8z3HnFmW9+A6uSjkbq
RuH0tk3GFCvcdab/hfwr3BATX5c5AZfY1GLuDzgio/B97xzs5THcWu+EP5iS
CvKWYKpAFxvnghvXMx1uN/wHQG4O0w==
           "]]}, 
         "Charting`Private`Tag$1965#2"], {}}, {{}, {}, {}, {}}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {{{1, "K"}}, {}}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"S(T)", "Payoff"}, 
      AxesOrigin -> {0, 0}, AxesStyle -> Directive[FontSize -> 13], 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 2}, {0., 0.9999999591836735}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {{{1, "K"}}, None}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         Dashing[{0.025, 0.035}]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {"call", "put"}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendFunction -> (Framed[#, RoundingRadius -> 0]& ),
        LegendLayout -> "Column", LegendMargins -> 0]], {{0., 
     0.}, {-0.7, -3.4}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7212254036790075`*^9, 3.721225456133198*^9}, 
   3.7212255577685504`*^9, {3.7212255891632986`*^9, 3.721225600961089*^9}, {
   3.7212256377085066`*^9, 3.7212256468346043`*^9}, {3.721225696472867*^9, 
   3.721225741880918*^9}, {3.7212257855016484`*^9, 3.7212258050917826`*^9}, 
   3.7212259608000507`*^9, {3.721226062891659*^9, 3.721226075598155*^9}, 
   3.721226142642014*^9, {3.7212264608333364`*^9, 3.721226584860361*^9}, 
   3.721226632652685*^9, {3.721226744936474*^9, 3.721226780198081*^9}, {
   3.721226823513355*^9, 3.7212268281566677`*^9}, {3.7212268605611134`*^9, 
   3.7212268666194963`*^9}, 3.72122733748956*^9, {3.721228062835766*^9, 
   3.7212281248859434`*^9}, 3.7212282048645506`*^9, 3.7319717858869996`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Thesis_Text\\\\Figures\\\\Payoff.\
eps\>\"", ",", "img2", ",", "\"\<eps\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7212273194296355`*^9, 3.721227327540842*^9}, {
  3.7319717327997866`*^9, 3.731971781274919*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], " "}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "1000"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "exercise", " ", "points", " ", "per", " ", 
    "year"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "years", " ", "in", " ", "the", " ", 
    "contract"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", "0.06"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Yearly", " ", "discount", " ", "factor"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", "=", "0.05"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", " ", 
    "price"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S0", "=", "1."}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "stock", " ", "price"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dT", "=", 
    RowBox[{"1", "/", "n"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Time", " ", "step", " ", "duration"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
    RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
    "initially", " ", "assigned", " ", "0"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S1", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Set", " ", "all", " ", 
    RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
    "the", " ", "initial", " ", "stock", " ", "price"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dW", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
    " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ", 
    "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"n", "*", "T"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"S1", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"S1", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
       RowBox[{"R", "*", "dT", "*", 
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
       RowBox[{"sigma", "*", 
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
        RowBox[{"dW", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"S1", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{"i", "/", "n"}]}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
    RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
    "initially", " ", "assigned", " ", "0"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S2", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Set", " ", "all", " ", 
    RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
    "the", " ", "initial", " ", "stock", " ", "price"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dW", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
    " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ", 
    "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"n", "*", "T"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"S2", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"S2", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
       RowBox[{"R", "*", "dT", "*", 
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
       RowBox[{"sigma", "*", 
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
        RowBox[{"dW", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"S2", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{"i", "/", "n"}]}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S3", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
    RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
    "initially", " ", "assigned", " ", "0"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S3", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Set", " ", "all", " ", 
    RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
    "the", " ", "initial", " ", "stock", " ", "price"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dW", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
    " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ", 
    "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"n", "*", "T"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"S3", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"S3", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
       RowBox[{"R", "*", "dT", "*", 
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
       RowBox[{"sigma", "*", 
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
        RowBox[{"dW", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"S3", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{"i", "/", "n"}]}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"img3", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", "S1", "]"}], ",", 
      RowBox[{"Transpose", "[", "S2", "]"}], ",", 
      RowBox[{"Transpose", "[", "S3", "]"}]}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfahBVWXu+teOV6VdEkD0fE7z+RKbXzte+/5xOYhe
9TjmqhSQ1krOB9MeZ9+JyQDpC4UskiD6VF7WfY4drx0/aTeD6X0b05w5gfQD
ZwVPEN10sz7h7s7XjvLp/Fkg+orGg1wQfSGUMw9EN5yNKALRQe1SvSBaRo9j
Noiet1txMYhmKeBZDqI7fDTBtMv9RetBNI9KwkYQLeF9dDuIPmZ4FkwnODDv
B9G3c55eBdHPHfJu/d7z2jHqUB+Y3nSJf/rHva8dpa53rQbRf/qDN4Po6QIl
e0H0JSexIyB6/qsFZ0B0g51nqc++146/HdvrQHRKbV+YL5De8X9bBIh2kHkq
FwikBe45y4NoAFCcvbo=
  "]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     Thickness[0.008], LineBox[CompressedData["
1:eJxV2Xk4VO3/B3BJm0opLdr3lDa0KPT2INJeiBQlRKkksrdIiTYpS1JCi3ZE
JZXsypZ9X8bOGHOmXSr9DjOf73X9/PNcc53Tmfuc+77fr/ecZ/pe222W4mJi
Yu39xcR6//v//wT48/Bz4ca9W+CXG3toWTcj+rwHM/PWfJFvZdB94sBbh2vW
WPL7g3RLMR0/gmXZHidPfmLgJvNMp97VAXM/3F88p5LOd4Zf9Xg93Q8MXNrn
KAx+4o5/rXbTE/Po35+C2j+19pUNDFTqNl8KOnwahbuv38usouudQeqP4csn
tTFI0B0mLn/OCzkjFSf+YscrvL43zqT83KbXw2Bl3AfHxNvnsbd1i+xvCYHo
+y4i0OUl14Y9P37K2Y6t8ZcRKb7B2EGc7vcKrq1+XGEzWICbadOij1r7IdM2
M6VwqEA0nqsoSBxeOURKgKpffV8I7dEZNpP6CUTj88eNgRqP5gwQYOLimlkD
PQKwecqxiGL2+sLxBkJc2m2vxhABjC36roiZhtdHVvTQ87kOOcNT8e/Z+7sR
3PcH08nPr2Z30/3cgMnq4IcvvzGoyPup13gvBJmTj1y3aaDneRNOTsqRqhwG
shLbpRY+v4WfPP2AB+z5wvsNxZl/U/+eYcdjJLwgzupsCA8YTPcfhg2p7/it
7Pg2rPD5b09zGHYl9CSa/e95hGN6as6WLz8Z8Lb2XjEcheby6untNF8RGHx0
hKP7PwYXDrb+fvg5Avfdlz4o/8KIntcdNP7o/92E/X75c2PZW7iDmFWxPmoS
9PzuYsOAtW5S7PHs8DUvv/69i5HRkpWJA+l53oPR+6qtWezn3qc1XuI+3hRo
ZdWI0fO9jzUloa0x7POULLtzRE0yElZ61p5H/jKi5x2J828dx674zeBR7+2O
fICmOh9Ns2G0fh7AUe3l5mz236/rvdzYh9AYvOSK1i+aj4cQP9e45+BXBn2P
e9IjrMjt/qH8g+bnEbQfW48KFzDofXr5Mx6jW+/+pWHseIXz9RiPjw+Nq+5i
MG+Xb8p3uSfYvq7tmP8vmr8ncNnvHhTKY/CRvdqExU+xJ9vty4M2ms+nqE6q
y09OYmDt1+mOZc9gmVExKOw5ze8zNET05EW/YMAOjr3lKKQLFLuC2P0mnO8o
yEkvtvb8yECfXTzslCJxl1i3azXtv2hY2czaa8zO31326ZXdicb3/FP9VrD3
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
0t7gPYgdr9DzChSul5du0xKIPK/ADWN/9Udr6X1kBb5IVxeEsp+FnlfA7+do
yYNbBCLPK1AZtdFy7zqByHP2+veNVm3XoveXFYjlL9D8qysQeV6BzYZ7pyRp
CkSeV2DQ4S7+BB2ByPMKqBiqWTyGQOR5BZszzK8X2uQ5+++nVZ3bqEeeV+I/
sZLzOzaT55U4G1yXOnW9QOR5JdQ5pRpr1pLnlVgwa6dMug55XolpwxXra/4j
zytRbN9/4a5V5HklXt9XeHp+KXleiSCxyKDXquR5Jfy6CjOuryLPK7FdtazI
dDV5XonsgTMGZK8hzyshdb//iPma5HklJm/fs0BlJXleCYmkMt4mNfK8EluK
XA81ribPq6Daj69vrEqeV4E3J8a0fBl5XoXt+oEBguXkeRUmzD4uP24xeV4F
/5QDERYLyPMquNq557ouIs+rYChwRLECeV6F2PDoD12K5HkVLvtdV92oQJ5X
IS9Cd/fMZeR5FRZt80vqWkqeV8E4ui4zfCl5XgV9meooN0XyvAp2Sza4u6uT
51VY7taY3q1O/3+jCrPX2EqtZOdH6Hk19CfcHKTOPk+h59VYHufgVcauR6Hn
1cjOEh+eaECeV2OgYVbsVyOByPNqdJeuHWHJHhd6Xo0Fk8I9zhkKRJ5XI+Xx
+7o3ZuR5NeS+Wrav3EWeV2Pd7K3Ng8zI82pYPnKMbd1Fnlejy3lDZr6JQOR5
NWYoL+J6mgtEnlcj3kzCbIwheV6NHUEm5U8MyPNqXHz7/UuRKXnOjveG0WA9
Y/K8BpaZ4WvCtpHnNbht4GQjoUue16D77swQzU3keQ3kAsq4O3TI8xrk7g/W
CNhMntfgTYfFCkcd8rwG1i53ZbSVyfMaKE+L/6muRp7XoMPnIidgLXleA43I
h7u5G8jzGnyTyub8t1Eg8rwGxa+8ajTWk+c12Lg93bdLmzyvwctAHddKPfK8
BhmL43OW7iXPa5G1/vORHxbkeS36z1uYLb+XPK+FiSrfePZB8rwWZyc/qTE4
RJ7XYot2VELeUfK8Ft4SGdHp1uR5Lcz6vzBzcyDPa6Hv/D7r717yvBbSzmet
rK3I81okpOyojtwnEHlei1c7m9af20v/P7QWWso5F//sFog8r8XizNtueez8
CeO5Fq6NQ01HsetD6HktNBI/XjEzIM9rceWLovkTc/K8Dpeseqxem5HndZii
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
daK9AP8Hs+/s6w==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     Thickness[0.008], LineBox[CompressedData["
1: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
VPS6iNkvfbuF2TJ4c09B1kmP8igTIZsFnY7MevZPtzQTk+Xr/pXfSPmUCdfg
g82dW0Tov9z4LMxwTymQ1qG8ykLiiTWaB3eI0B9H27MQnR/5aNMByq8sSMx/
vUrHUISB+pCF+ukNibGnKM+yMFQvrTjLSIT+OKhh3n/+7ddFhynfsjBox5tE
eea5VX/gZOOhbL7WDmPKu2ystr0/JuekCAv6D1A2MpTXBqTso/zLxiWPZxkm
R0R4118vsuHrtsE/9yjlYTambNg3VIIZz7W+49CUjamccdU/z1A+ZmOjT5Ve
I3P9WX3beWYObAfPNDc/QXmZgzt+E0Z5nBYht2/7Hc7Bshg/0faLlJ85eBw2
uWQr8/x8f0DmwL9epWWOOeVpDqzPLfY4fUvEnOO+A5+DDq3mfye5Ur6+xQbJ
RosCHxH6hzf/LeIe1y/wvU95+xbavaIk6ccinOh/vEXQL6myUY8pf9/izANR
tliQCH3liUlYTH6mVlJyj/L4LSIC3Ew/+IvQl46m3LcYNi1l9m0PyudcDDJG
k4B5/8H+C+ZCaDjn12E3yutccEZ3854z4x3WH1C52CywN/tjS/mdC8dZTUum
WYvQtxoTo3Lx+f3S+XYWlOe5GC05nK9lL0J/uxPmwmu4fY6jFeV7HrIMdq+L
NxXhd99xW5GHqZ9Fe6UtKe/zsPP6/cvyzPWf9G1nkzywXYrrj5hR/udh+1nn
3wnM/d8yMGH42099OvMqeZCHMdqekmMvifC5bzk+5SEg8sGS66fJh3yMGTNa
Y8gxEQL7pqucj6LNL5LPHCYv8nHRJj9LldlP2v03MB8mZ1dmWBwhP/LxxLJ2
aN9+7unnIR9XT0SPXHyMPMlHO+7NuHhehLt98f4jH1auU2/mnSNfCvBWe+7z
Lczr/fGsUQDbvDSXyVfImwLEC+/OfMKMvz9eLQvgUuWlcPca+VOAWlH0HeF1
EQbirwCjT4RXnbYhjwrg6f8lOuuGaCBexApxLjEpSuIs+VTI7OuGK+rM/u8/
vmsLsV/iqKzZWfKqEG8uD9Y/wbzefzzsCzFatqb5ynHyqxA2hnbDjjP3Z2D7
FcLzdyt74n/kWSEOdl99YsG8v6pveUcUoXiVgbz4efKtCBdHSDmIMfvlRv8I
i+BzU/7nF2vyrgimNuqbjjP74d/+DViEFfYuPE9b8q8INhe+5hXfFKG4qP+B
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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     Thickness[0.008], LineBox[CompressedData["
1:eJxV2Hdcje//B/BK5qfsJIXKzAzZ44XIjigroqmsUijKLCJKRPbMyggJCdHS
3nuf2emMdI5UqPS7O+e8v4/Hr3887sc557rv676v6/V83QzsXNc6qqmoqIR2
UlHp+Pf//0nRGi7LW2W3BrmLLo5Iq61XHm/H9IV3Usub6vH36M7P+0OcMSFg
bXmLkD53g9P+gVnLftTDu3/EEvbh/Zide2SsB5++74Xy0+42X6LrcUg4clK3
Fz44/5Gb6/aUfn8cuwbf5rZdrcfs6tWBV/eexMGhiwpbn9J4frBhlx5pe16P
mGUaamP9T+P8z+pBy17T+GcgyxjiN+J+PWZGpRyMvRuA9t2vnYe9pPOdR7zR
jdurIuoRPeSU2CI6CCfP2o11ek7nD4bfu+srPwXX41ai/mt354vIXOfhuN+X
rucSrA4EfW4OqEf5H/kJsXXoHdvYc3R9l5ESW3HHPrAeuhMrh3c5cQXaC7oX
ngij6w3Fj05J/EUf6rHZQT4idO2b/g2Pp+u/hmj7xtVFzHxvXJf/4UAGxhk+
p/ncwN3tt7e6P6pHaVbzOu6jm5i68onmmBc0v1vwjMzk9wmvh476+p7jI2/D
YVah6p8nNN876Dqz3ieaGW+jYkCYBOSltz2h+d/DWaf/Wtd/rcfK6WcXbOff
g8NIq8Tt3+l+3MeA9VEvtJLqIbHoGPE+NEc2BapH0/15gE17bHWsmOs5t1vQ
Ei57AH2vVZ3rLtP9CgP79DmLIafqMdZ/ADOFMHR+u1Jd8yLdv4cIG+Bg3Hyz
Hun3F79vaHuIiOwboWEP6H4+wv1luyf0vFOPjrs1UP0xRqTeK466Qff3Mcys
SguLmd/3KA5zm9vjCbYb243VDqf7/QRn59Zf2fuwHs86ptv7KTYc7jl6+U26
/08x+u2rXhcv1GN5x3ADwnEqNt8p+Ro9j3BUl7sYnGTOJ7/des+Qzu472jeE
ns8zqB7brz+POe64ezmGz3EVx5qn3qbn9RzGupv2u12vh9GWC/GNo19Amnym
fXo4Pb8X4AfemhrLrJdUZrRBE18ivVO5VnQIPc+X8O8893gCc73OF+t8MDUC
0/iOOjd96PlGYPAQh4AvJ+rBXBwz5VeY3at9YvR5et6vENy45WXH9Voyi4d5
pOhs6eQ0+QY9/9foadvpSuHjejxk7l5x2Gvk/ZvNPnmH1sNrDP+594szM59f
bQVewpFvcEH4rlPWR1ofbzDhb2PVfWY9L5IvgDcY8afcb1MBrZc3sPcZ43c+
rx7Mw+uYECb/UA3qVEbrJxLvvpX4XP9ZD8XlRWLskE6qDaW0niKRWJ2a9Kmq
HlPkf2/hEDTv4CwZra+3OJMyh2OnKoXvtzRmBb3FxiHeV927S5Xr7S2mO6yL
b+svRT7z9Jl7gpz1WoP/MMeK9ReFxKb7/s8GSjFMPmAUdg3d6dYwQKpcj1GQ
Huz16fJ/UnjIH8A7ROz9zF/cU6pcn+/gV9BW8VdbioTG0cwTfgcD3b1rPg+V
Ktfre3Q/1DXTz1CKvooLhMfJVxcyDKTK9fse74olh+uGSyG/upT3cPUaqBfE
HCvW8wdsvm5yc8QQKSJv1z/5vuIDko4fzirRkyrX9wfoNTf+9B4shZp8wh+Y
fPS7V2ckVa73aNzMybR7M0WKtYoFg+cNUZ96MseK9R+N+PCJ/y0YL8WDjukW
RENlm7NgFPO5Yj98xJGLolkT9aX42THcxo94EJF24/kIqXJ/fETrs+iHbaOk
WNix/Ms/ooo38X3GWKlyv8Sgp1Sl+s9kKeTL1yYGs8t3DyqYJ1Xunxhs7xcz
9+siKdiHOx5IDDYYV3S+ZCpV7qdP6Cn2KVmxRIpJ8gX+CZrLZ1+WWEqV++sT
onS85nTfLMWJK6bMkvmE5ra73pbMsWK/fcaCvZ6TzjhIkWsof8A4lrL9EcdF
qtx/n9H8Sea0ylEKg470r/uMAsuJWX0PSJX78Qv2vo/wKnCVYl/H9nD7Atn4
FhttT6lyf37BkNdOwe5HpYjreLoNX3DPJ87ss7dUuV9jYXSnYa7TKSl6KzYk
Ppn6Twk4I1Xu31g8suppcfasFPLb9ycWS3vk+TQz31fs569Id+DULgyQQn55
Pl8xqfzwzfnnpMr9/RWH1A0aPgRJoXD8G/5emZBy65JUud+/IWr+cJ53iBRP
v69gdvQ3iJv8niwLJe+/IXB1vnv1FSnWMLuRWaPIntHvUuY1qTIPviG/cWlK
oL8Uvzv0SfyGOfr1omfM+RX58A1935R17nFSinuDOjZEHLrGZM6z8pMq8yIO
DxtWtoR6SLFU/oCZ4x99nJz2SZX5EYddoS9CR3lJIX3ScYFxeJ9yUoTdUmWe
xGHZpU2xC5jnd63j6tLiMLC9TWvHLqkyX+Iw8tSB+OHM+B2La5lGPAayr13t
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
BIO77rGqU7oqw/8BHE51Vg==
      "]], 
     LineBox[{{0.9191625292148528, 1.1}, {0.92, 1.0971087511140571`}, {
      0.9209524351906497, 1.1}}], 
     LineBox[{{0.9229412321914189, 1.1}, {0.923, 1.0999546407042584`}, {
      0.9230281971563352, 1.1}}], 
     LineBox[{{0.9294680048719112, 1.1}, {0.93, 1.0989815556578244`}, {0.931, 
      1.0999058739679586`}, {0.932, 1.0988155483860818`}, {0.9329294641162978,
       1.1}}], LineBox[{{0.9330399971767181, 1.1}, {0.934, 
      1.097842563700948}, {0.935, 1.099912503736588}, {0.936, 
      1.097819186258552}, {0.937, 1.0984702994880897`}, {0.938, 
      1.0985599803790127`}, {0.939, 1.098899716394097}, {0.939488473024998, 
      1.1}}], LineBox[CompressedData["
1:eJwlUg0s1GEYv93SGmZUs8pHki1lZkYZsl8ilJbF6KYj0xFHRBL5iC672SUf
m6Q6l+xIiVuaUcjMaK35aBolzNRM8n971pDF1nv/nu3du2fP9nt+H8+++PTw
BKlEInHlz/g/zRsZyngk4EGtsQjer95l9+oEHKidGrGtIFi4vtSyJgFfNzv6
vqgI8/qHAw4GAXU+wT5ORYRO+5Kls50C3vranFfcIZTVpG1X9Ql4Y8O0yRpC
vKWMQwrQXQ1PWC0meJX6x30fFbB084gmLYdgLnVRW38WIG0vDqzOIszd2Nka
PCfg3N1DkygkdPzeHM9ZFJCS59WbnEfQpC78bSYBVau5p6bTCRzMcWpdwPjx
b24uCsLh2NcnzaUMEnlEbkgcwXSi4YqfKYM2ZtNPn0SYDTMyZPjhHOUxm0IQ
5e5haHNPsGrgc5GeI0OXf1D7YiZBhHNhqKgpizxTQPAQi2HAKrzHPZ+wrcU2
WuHLEPjpcVFMCWHaaWtxdQDDRlnGjhE1wejeYChDg3p0bz73j4sdXotguF/t
abb7GkFe3r/iLGcojTVEH+V63EVABtPTdnpdKsGIpklleKJoMmlMJkytFyq7
sxik/mlBDlyvITOpcjmfweeemepPAsGYhn0Jw0+ZTibPIHByXDJDT1ei5cpN
gptIkPMrFiqrbhG2RIkJo7ZurDyb6zGym9cz9DdrPSezCTwMngiDun4j1uIS
QdX3vv5EB/fno+R2C98vEw+G4eBQ8pgJ78VzGWQoWH7Rmx5DEOMdZvDThCTO
KAliHBMMg6FBBuVFgmjfLMP+Y7sCWhMJotwFhshnbZONfP6fHkNYt4Oj6gJB
hFtj+HDZ+7o13ycR6xdmlHbP46IJ/wD+M3K4
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time(Years)\"", TraditionalForm], 
    FormBox["\"Stock Price(\[Euro])\"", TraditionalForm]},
  AxesOrigin->{0, 0.95075},
  AxesStyle->Directive[FontSize -> 13],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0.95, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.721325849735869*^9, 3.7213258540199995`*^9}, {
   3.721325902157921*^9, 3.7213259118133435`*^9}, 3.721325963875015*^9, {
   3.72132609513562*^9, 3.7213261335831313`*^9}, {3.7213261827819552`*^9, 
   3.7213262637579274`*^9}, {3.722960601008516*^9, 3.722960750780616*^9}, 
   3.723463870089324*^9, 3.723464029417633*^9, {3.723464097132531*^9, 
   3.7234641724852943`*^9}, {3.723464265272154*^9, 3.723464296745329*^9}, {
   3.7236499699726458`*^9, 3.72365003115886*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"True", ",", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\GBM.eps\>\"", ",", 
       "img3", ",", "\"\<eps\>\""}], "]"}], ","}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.721331463448429*^9, 3.721331473333743*^9}, {
  3.7229606263007927`*^9, 3.7229607076604633`*^9}, {3.7234643028195553`*^9, 
  3.723464306486808*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"True", ",", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Miguel\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\\
GBM.eps\>\"", ",", "img3", ",", "\"\<eps\>\""}], "]"}], ","}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.722960714661116*^9, 3.7229607231932564`*^9}, {
  3.723464308442469*^9, 3.723464310703356*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "1000"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "exercise", " ", "points", " ", "per", " ", 
     "year"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"T", "=", "1"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "years", " ", "in", " ", "the", " ", 
     "contract"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"R", "=", "0.06"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Yearly", " ", "discount", " ", "factor"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S0", "=", "1."}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Initial", " ", "stock", " ", "price"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"dT", "=", 
    RowBox[{"1", "/", "n"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Time", " ", "step", " ", "duration"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dW", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
    " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ", 
    "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfahBVWXu+teOV6VdEkD0fE7z+RKbXzte+/5xOYhe
9TjmqhSQ1krOB9MeZ9+JyQDpC4UskiD6VF7WfY4drx0/aTeD6X0b05w5gfQD
ZwVPEN10sz7h7s7XjvLp/Fkg+orGg1wQfSGUMw9EN5yNKALRQe1SvSBaRo9j
Noiet1txMYhmKeBZDqI7fDTBtMv9RetBNI9KwkYQLeF9dDuIPmZ4FkwnODDv
B9G3c55eBdHPHfJu/d7z2jHqUB+Y3nSJf/rHva8dpa53rQbRf/qDN4Po6QIl
e0H0JSexIyB6/qsFZ0B0lrS2u8++145O8qIrQbTDqsDtINrkHft+EH3JbukV
EB2jrXoVRKv80rPwBdKH/iSBaQAdX8T9
  "]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R", "=", "0.06"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"sigma", "=", "0.05"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", 
      " ", "price"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"S1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S1", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S1", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S1", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S1", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma", "=", "0.055"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", 
      " ", "price"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"S2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S2", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S2", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S2", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma", "=", "0.06"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", 
      " ", "price"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"S3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S3", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S3", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S3", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S3", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma", "=", "0.065"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", 
      " ", "price"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"S4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S4", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S4", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S4", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S4", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S4", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S4", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma", "=", "0.07"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", 
      " ", "price"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"S5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S5", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S5", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S5", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S5", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma", "=", "0.075"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", 
      " ", "price"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"S6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S6", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S6", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S6", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S6", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
       RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
      RowBox[{
       RowBox[{"r", "*", "S", "*", "dt"}], "+", 
       RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7236515257905226`*^9, 3.723651534479642*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"img4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S1", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S2", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S3", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S4", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S5", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S6", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S5", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S4", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S3", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S2", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72365059376237*^9, 3.7236505938065214`*^9}, 
   3.7236507453054495`*^9, {3.7236514662963705`*^9, 3.7236514720245943`*^9}, {
   3.7236518139673996`*^9, 3.7236519601982584`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"True", ",", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\GBM.eps\>\"", ",", 
       "img3", ",", "\"\<eps\>\""}], "]"}], ","}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.721331463448429*^9, 3.721331473333743*^9}, {
  3.7229606263007927`*^9, 3.7229607076604633`*^9}, {3.7234643028195553`*^9, 
  3.723464306486808*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"True", ",", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\gif_vol.gif\>\"", ",", 
      "img4", ",", "\"\<gif\>\"", ",", 
      RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", "0.15"}], ",", 
      RowBox[{"\"\<Interlaced\>\"", "\[Rule]", "True"}], ",", 
      RowBox[{"\"\<AnimationRepetitions\>\"", "\[Rule]", "3"}]}], "]"}], 
    ","}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.722960714661116*^9, 3.7229607231932564`*^9}, {
  3.723464308442469*^9, 3.723464310703356*^9}, {3.723649802641481*^9, 
  3.7236499102322235`*^9}, {3.723650080352882*^9, 3.7236501438476725`*^9}, {
  3.7236503799752607`*^9, 3.7236503801756535`*^9}, {3.7236506336236153`*^9, 
  3.723650702374324*^9}, {3.7236514975745344`*^9, 3.7236515070948353`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigma", "=", "0.05"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", " ", 
    "price"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", "0.06"}], ";", 
   RowBox[{"(*", 
    RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"S1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "all", " ", 
     RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
     "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"n", "*", "T"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"S1", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
        RowBox[{"R", "*", "dT", "*", 
         RowBox[{"S1", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
        RowBox[{"sigma", "*", 
         RowBox[{"S1", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
         RowBox[{"dW", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"S1", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", "0.065"}], ";", 
   RowBox[{"(*", 
    RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"S2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "all", " ", 
     RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
     "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"n", "*", "T"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"S2", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
        RowBox[{"R", "*", "dT", "*", 
         RowBox[{"S2", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
        RowBox[{"sigma", "*", 
         RowBox[{"S2", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
         RowBox[{"dW", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"S2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", "0.07"}], ";", 
   RowBox[{"(*", 
    RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"S3", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S3", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "all", " ", 
     RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
     "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"n", "*", "T"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"S3", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
        RowBox[{"R", "*", "dT", "*", 
         RowBox[{"S3", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
        RowBox[{"sigma", "*", 
         RowBox[{"S3", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
         RowBox[{"dW", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"S3", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", "0.075"}], ";", 
   RowBox[{"(*", 
    RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"S4", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S4", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "all", " ", 
     RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
     "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"n", "*", "T"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"S4", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"S4", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
        RowBox[{"R", "*", "dT", "*", 
         RowBox[{"S4", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
        RowBox[{"sigma", "*", 
         RowBox[{"S4", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
         RowBox[{"dW", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"S4", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", "0.08"}], ";", 
   RowBox[{"(*", 
    RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"S5", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S5", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "all", " ", 
     RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
     "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"n", "*", "T"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"S5", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
        RowBox[{"R", "*", "dT", "*", 
         RowBox[{"S5", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
        RowBox[{"sigma", "*", 
         RowBox[{"S5", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
         RowBox[{"dW", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"S5", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "0.085"}], ";", 
  RowBox[{"(*", 
   RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"S6", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", "2", ",", 
     RowBox[{
      RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
    RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
    "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"S6", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Set", " ", "all", " ", 
    RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
    "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"n", "*", "T"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"S6", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"S6", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
       RowBox[{"R", "*", "dT", "*", 
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
       RowBox[{"sigma", "*", 
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
        RowBox[{"dW", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"S6", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{"i", "/", "n"}]}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7236507639529796`*^9, 3.723650859406661*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"img5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S1", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S2", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S3", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S4", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S5", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S6", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S5", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S4", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S3", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S2", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S1", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7236508194575167`*^9, 3.7236508198004017`*^9}, {
  3.723651879613166*^9, 3.72365195434591*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"True", ",", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\gif_int.gif\>\"", ",", 
      "img5", ",", "\"\<gif\>\"", ",", 
      RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", "0.15"}], ",", 
      RowBox[{"\"\<Interlaced\>\"", "\[Rule]", "True"}]}], "]"}], ","}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.723650833352418*^9, 3.723650837335003*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"img7", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "S1", "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72365092538601*^9, 3.7236509333742404`*^9}, {
   3.7236518796562815`*^9, 3.723651954354436*^9}, 3.723659620158106*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"True", ",", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\gif_0.gif\>\"", ",", 
      "img7", ",", "\"\<gif\>\"", ",", 
      RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", "0.15"}], ",", 
      RowBox[{"\"\<Interlaced\>\"", "\[Rule]", "True"}]}], "]"}], ","}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7236509419430113`*^9, 3.7236509562620673`*^9}, {
  3.7236596232943726`*^9, 3.7236596278695903`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R", "=", "0.06"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"sigma", "=", "0.05"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", " ",
      "price"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S1", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S1", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S1", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S1", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW2"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dW2", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S2", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S2", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S2", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW2"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dW2", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S3", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S3", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S3", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S3", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW2"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dW2", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S4", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S4", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S4", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S4", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S4", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S4", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW2"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dW2", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S5", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S5", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S5", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S5", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW2"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dW2", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S6", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S6", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S6", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S6", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
       RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
      RowBox[{
       RowBox[{"r", "*", "S", "*", "dt"}], "+", 
       RowBox[{"\[Sigma]", "*", "S", "*", "dW2"}]}]}], " ", 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7236515257905226`*^9, 3.723651534479642*^9}, {
  3.723658160841773*^9, 3.723658210408534*^9}, {3.7236583582263765`*^9, 
  3.7236583630511727`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"img6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S1", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S2", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S3", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S1", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72365059376237*^9, 3.7236505938065214`*^9}, 
   3.7236507453054495`*^9, {3.7236514662963705`*^9, 3.7236514720245943`*^9}, {
   3.7236518139673996`*^9, 3.7236519601982584`*^9}, {3.723658217314859*^9, 
   3.7236583348091416`*^9}, 3.7236584553893857`*^9, {3.7236588304484935`*^9, 
   3.7236588336399775`*^9}, {3.7236590109844933`*^9, 3.7236590133427896`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"True", ",", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\gif_N.gif\>\"", ",", 
      "img6", ",", "\"\<gif\>\"", ",", 
      RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", ".7"}]}], "]"}], ","}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7236583185689545`*^9, 3.7236584180732126`*^9, {3.7236585936882415`*^9, 
   3.7236585941996*^9}, {3.7236588039924765`*^9, 3.7236588208148675`*^9}, {
   3.7236589454711256`*^9, 3.723658945798997*^9}, {3.7236590733352175`*^9, 
   3.7236592075589647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"img6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S1", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S2", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S3", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S4", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S5", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "S6", "]"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}],
          "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.96", ",", "1.09"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "=", "1000"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Number", " ", "of", " ", "exercise", " ", "points", " ", "per", " ", 
      "year"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"T", "=", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Number", " ", "of", " ", "years", " ", "in", " ", "the", " ", 
      "contract"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"R", "=", "0.06"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"sigma", "=", "0.05"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", 
      " ", "price"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"S0", "=", "1."}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dT", "=", 
     RowBox[{"1", "/", "n"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", " ", "step", " ", "duration"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S1", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S1", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S1", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S1", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S2", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S2", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S2", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
      RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
      "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S3", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S3", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S3", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S3", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S3", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S4", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S4", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S4", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S4", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S4", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S4", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S5", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S5", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S5", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S5", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S6", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S6", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S6", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S6", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S6", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S7", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S7", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S7", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S7", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S7", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S7", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S7", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S8", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S8", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S8", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S8", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S8", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S8", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S8", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S9", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S9", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S9", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S9", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S9", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S9", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S9", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S10", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S10", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S10", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S10", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S10", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S10", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S10", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S11", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S11", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S11", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S11", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S11", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S11", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S11", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S12", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S12", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S12", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S12", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S12", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S12", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S13", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S13", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S13", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S13", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S13", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S13", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S13", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S14", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S14", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S14", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S14", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S14", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S14", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S14", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S15", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S15", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S15", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S15", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S15", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S15", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S15", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S16", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S16", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S16", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S16", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S16", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S16", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S16", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S17", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S17", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S17", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S17", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S17", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S17", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S17", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S18", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S18", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S18", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S18", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S18", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S18", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S18", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S19", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S19", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S19", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S19", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S19", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S19", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S19", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S20", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{
        RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S20", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Set", " ", "all", " ", 
      RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
      "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"dW3", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
      " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ",
       "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"n", "*", "T"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"S20", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"S20", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
         RowBox[{"R", "*", "dT", "*", 
          RowBox[{"S20", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
         RowBox[{"sigma", "*", 
          RowBox[{"S20", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
          RowBox[{"dW3", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"S20", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
      RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
     RowBox[{
      RowBox[{"r", "*", "S", "*", "dt"}], "+", 
      RowBox[{"\[Sigma]", "*", "S", "*", "dW3"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7159508811719675`*^9, 3.7159513621283975`*^9}, {
   3.7177766337199244`*^9, 3.7177767035615034`*^9}, {3.717781162902791*^9, 
   3.717781163480855*^9}, {3.7177837354625587`*^9, 3.717783752138893*^9}, {
   3.720365819326024*^9, 3.7203658200991144`*^9}, {3.720366619209197*^9, 
   3.7203666650082855`*^9}, {3.7213253159953012`*^9, 3.721325392481338*^9}, {
   3.721325423004984*^9, 3.721325424291725*^9}, {3.7213254587750854`*^9, 
   3.7213256728290186`*^9}, {3.7213257842556286`*^9, 
   3.7213258490541525`*^9}, {3.721325880388674*^9, 3.721325881290592*^9}, {
   3.721325949089754*^9, 3.7213259630044003`*^9}, {3.7213260141654167`*^9, 
   3.721326014412326*^9}, {3.7213260721016083`*^9, 3.721326255169538*^9}, {
   3.7229605954454226`*^9, 3.7229605964612246`*^9}, {3.7234638644944696`*^9, 
   3.7234640283387575`*^9}, {3.723464090611326*^9, 3.723464171627025*^9}, {
   3.723464224695657*^9, 3.7234642930286403`*^9}, {3.7236499622888794`*^9, 
   3.7236500362268043`*^9}, {3.7236517644528065`*^9, 
   3.7236517817187157`*^9}, {3.7236595111596985`*^9, 3.723659564610386*^9}, {
   3.723659680207404*^9, 3.723660072108409*^9}, 3.7236602604905243`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img8", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", "S1", "]"}], ",", 
      RowBox[{"Transpose", "[", "S2", "]"}], ",", 
      RowBox[{"Transpose", "[", "S3", "]"}], ",", 
      RowBox[{"Transpose", "[", "S4", "]"}], ",", 
      RowBox[{"Transpose", "[", "S5", "]"}], ",", 
      RowBox[{"Transpose", "[", "S6", "]"}], ",", 
      RowBox[{"Transpose", "[", "S7", "]"}], ",", 
      RowBox[{"Transpose", "[", "S8", "]"}], ",", 
      RowBox[{"Transpose", "[", "S9", "]"}], ",", 
      RowBox[{"Transpose", "[", "S10", "]"}], ",", 
      RowBox[{"Transpose", "[", "S11", "]"}], ",", 
      RowBox[{"Transpose", "[", "S12", "]"}], ",", 
      RowBox[{"Transpose", "[", "S13", "]"}], ",", 
      RowBox[{"Transpose", "[", "S14", "]"}], ",", 
      RowBox[{"Transpose", "[", "S15", "]"}], ",", 
      RowBox[{"Transpose", "[", "S16", "]"}], ",", 
      RowBox[{"Transpose", "[", "S17", "]"}], ",", 
      RowBox[{"Transpose", "[", "S18", "]"}], ",", 
      RowBox[{"Transpose", "[", "S19", "]"}], ",", 
      RowBox[{"Transpose", "[", "S20", "]"}]}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.004", "]"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.723660277493746*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1:eJxV2Xc8Vf8fB3BKIRRpaBiVdmkPrVc7FaW9955UMiN7j5DRkhBKJKmUkpFN
9l6Xe3Gvy733m7bG73C9ezx+/vk+zuPezviM1/N17nfMUYOtJ/pISEjw+kpI
dP/3//9E+PXov2K9o/po+3j9VOwfYe/xYdzxedg8TyTET6uzb418TyOf7Xsx
jU+fG+LPi8rnHt+FsBgSs67R3AiZIbz+ZwX0fVMkBo1bE8t834w3YZbMk2vQ
lDmimF5O/94aFcqZH2Y3CrG4YbNHwEVbfBjjfsGrls5njwtjJgdvYY7frJfv
M9XJESpz3s45wKfzO0P2ita4Rx1CaMdnGSfdd0VnUh8ndwFdzx2/Llx5OJJ5
vgQ1B/6WBE9IZW9c9vMbXf8GrtbvPPy3rwh3P2jEXj7tDXaIVMoY5lh8Pz6I
27nDReGvEDU/ei6IZebjL23voPu7Ccn6z/eetgsxakadZn8bP1Q0TDjUzKb7
9cf4zVFjJZjx2Xu854y4M+3X2LvtdP+BuDOy0l+eK8TtWz1/OBJmLetRSc9z
G5ytwqrKbCGqPn7bxn54B2/6vf3qUUPPdxdyjoH5kvVCjJDaOXB63D189V+s
ncAT9j5vEM6/G71FoUuI3eITQt8qfYCxFM13MPSe7OpTxjyv7gKXFYebg7Fa
OEo6qQ+NxwNsC4/JqpQVoX1L9xkfYIXxsHHjFGh8QnDQKWWVmrQIbudbux79
FwKpj1U8Heb84vEKhdurR7ZcZvynOg1jHiEUgfNu16/uovELw2St2ew/zPVy
H6x52fk7DCaHj1mpM8fi8XyIZRJvEmf2F6F7tFSkwpHxfptknoyod3zDoXJ8
zqsK5v4GVIQaLh0QgfHFc9cXMp+LxzsCinl33OcoifC4+3EVI6Ge0GF6TFLU
O/6RmP+7csgz5vk3dJ9u2CMocdtOJH2h+XiE6498Lzsyxz3DPfox9uWZR8d+
p/l5DF7Er/AxzP11j17h2CisjZXEN+b64vmKwqLYT/3cmM8n7/dK/TLpCdLf
VH3Q+Enz9wQvF0kf/tUpRDZztpEzonErWGPcFOb+xPMZjeDtHkdvMeNx2rvj
GubFwDc7I/WoDK3nGHiZ7mtq+yEEc3PMIz9FPzV32WnM+IvnmzmOfP1nHHP+
7cziYaYUF52aL/ftoPUfC64vb1sTMx9hzOhVhMbCf8GKsoMDaD3EIq6m8eQj
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
eTfynPk8Lzu2yJ4858KuSbdhri15zsVUi93jPF3Jcx5GHLp1O8qZPOfBS3H+
9uUu5DkPVd+O1vT/937Owyktnz4NbuQ5DzvO/7ATOJPnPCgULV/w04k852Go
1ueS6dfJcx5cV91eHGhLnvNwWy3oWLAzec6DW+etPU8tyHPm+gOW6s9yIM95
aFJ+7/7KiTznYeXHa9EfzMhzHpKX3n/Uco0858G70+J8lAN5zoNcrOZapX/v
5zzYcH41lfiR5zzIqE5UVvQnz3nQ9tMO0fvnOQ+XZwjKuB7kOQ/Vz74v7vIk
z3lIfTr9TL4/ec7DhYG/sqNukOc8ZDkIIv44kuc8/PHaE/HNgjzn4UH415Ob
TMlz5v5afWLGXyXPedi0xXJN9++lYs95mMlZonvUjTznoUBR3+K5B3nOw7KN
T78UeJLnbVhjvPbmA2/yvA1tx5akVfuS521wDS+QK7pBnrehPOn7zTIX8rwN
WzaXL79nT563wTRHYpm1LXnehgEuxexvjuR5G/bFXFAfaU+et0EUOSqzzoU8
b4N/8T75TB/yvA2L9666EuhPnrdh3qEJc9/9+323DaNlP5zSuUmetyGLZyMZ
fYs8b0ONS8swiXvkeRsu/lhpEHqHPG/DBLfyVJtg8rwNj0tGRA8LJM/bcHRF
2eQgX/K8DTNikir+upPnbdDZ9Sllrh153oaTEsMU1lmR520wCzO+oGtLnjPH
I98Hq9uQ522I+VSs0OBMnrehMiEhI9eFPGfmI/Fpp/UN8rwN0dHvwxe4kedt
yIiYbPvehTxvw/KHj/p1OpLnbRA2u3TK2ZHnfOzIYLtuNybP+ZC2VfovzYY8
5+Pgr8axeVbkOR8bl//Hk7Ygz/l4yfIfWW9BnvOxb9bK6ff+ec5H4449rl+s
yHM+PjcsdD9nR57zsfpDfMdtW/KcD0v1VeNmOZPnfHg7X+u3+Tp5zkeTlO+W
elfynI/FVrt8zJ3Jcz6WftdpC7Unz/mw+9J3Y/fv4WLP+Qgr2HT/pj95zkeZ
9LYrsv9+/2bul73GdNNt8pz5PLRwm3Egec7HqUWKN+75k+d8LMp+dWOqJ3nO
3J86q98rV/KcD4/BB59425DnfKzPCZHWsSXP+eC/cGNpm5LnfBj3OSf514w8
5+PhI5UBBVfJcz7inVKra23Icz5k5uHwcHfynA//ideHvHciz/kY6P7nbpcz
ed6OtVrznIycyfN2qExVKlL1Ic/bcfi0uyjejzxvh9Pxh365N8jzdizvmxuh
d5M8b0fycq1zP7zI83aMP6pjMsyVPG+HbOWzmC/W5Hk7+i+SiPztQp63Y/W6
9qNKvuR5O05/HWZ90p08b0f1NgXON2/yvB03l/dLXuJLnrdDWsNp6zk38rwd
kWe3se+6kOft0GjSFFW5kuft8Isv3xXiRZ63I8kiWt3MkzxvxyhVz5UqN8jz
dmjlG6dV+ZDn7dCzuxVg7Uiet0N16omiox7keTusT0m1urmR5+0QSpxT3frP
83YYB1p/0f3neTtm3fUbfuEaed6O95z7tSdsyHPm+c0Vf3fvf7Hn7ZCPKdBO
cyDP2xFlva3c9Bp53g6pKbs959mQ5+140RA2JOU6ed4B2UXjmtb/87wDH84t
DE27SZ53IGabouznB+R5B6JzYu9k3SfPO3BmSspLVgh53oHgHV33t0WS5x0Y
4L96/ZXH5HkH9qZp/rn07/f2DhxIVws/HkKed2DefIst3f9/SOx5B2Rab8Lv
DnnegQerZr8Ouk+eM+dPHlk1PZI878Ci3feba8PI8w68/HW/aEAEed6BLXmh
edbh5HkHlidrh5QFkucd8Br40oFzmzzvwPAK/u+xPuR5B6aPrgyLCyDPO9C8
8NaWLUHkeQce12dWBgSS5x0YIRG7efxt8py5nxiuzZ0A8rwDH31XnfP0J887
kJs/2THLkzzvwKXDb0su+ZDnHYj8FXDI4xZ53oET97q0HQLI8w4cyknk/L1J
nncgKsFm8CIH8lwAVz9L1wvXyXMB9BreC0eakOcCmGo+j/G4TJ4LcEv+1DqH
c+S5AOaRFivCz5PnAmgkJL6aa06eC/Bq6LGxU63JcwFCVSXs+/7zXIDSTWd2
6DmS5wIElifcSLxOnjPH+y9bBNuQ58z9VL2bFuJIngsQ169sbKsteS7A57u5
K2LMyXMB7rmsVEu/Tp4LIFfqlOhoQZ4z/37HRokZ18lzAZxUDgdMsSPPBTg6
E7oaduS5AH5vnYrtXMlzARo/GI+ovE6eC7B3T5R/gjV5LoC2g8pAljV5LsCm
CxVR+VbkuQCzDhzfrWZJngtwdcMU7Rlm5LkA5TFbj203I88FqPU9N3mKOXku
wM32jp8zzchzAQ6esX0Ec/JcgN0rLzmsMiPPhTiXcGXO/GvkuRBG9xojHCzJ
cyGCjQXHhpqQ50JIrpTZKGlFngthcmPc2O7viz0X4kBAQ8hZS/JcCMtGo+P5
xuS5EFpFw1vzzpPnQuiUPbdtPE+eM9cfLPlz3lnyXAhp6UOzj54mz4U4tnNv
tc+/93Mhcvw2dMkZkOdC1KlNyh5qSp4z97Nq3O4Ec/JcCO/hS3zH25PnzPXs
c7x1nMlzIXYJsyyynclzIYYPiIqO8CbPhRiza5GhbhB5LoRD2fkBIcHkOXO9
05s8c0LJcyESfsz1Tn5EnjPP2ypb4hBFnjPXW/82RxBDngsxze6Ev0YIeS5E
vkvE/QkPyXMh1j4dkF9+mzxnvl+qZPYpiDwXQn9y7EPjSPJciKymnx0n75Pn
TE44ru9awOTb/wCWGRoX
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
FJ5tufOePvlQgt99bKot2fsL9WAJntddODt4nEL0ogROd6qSYtnzhPqwBC/P
5DleYfcT/CgBv+Ff/1vsulAvlqDOtZ3LuYkK0ZMSrPoV2hhvrBDrxxLk3V3o
1jicfClBztLg/l/Y+Aj1ZAmO3Rvgv5u9j+BNCT4Oapl2jV0X6ssStN2p5bhn
GPlTguj48LdHWf8I9WYJzjossX0+hDwqQW/tOt8qNj+E+rMEWZ9DnE9qkk+s
/x5aBmiy9SzUoyX408PIIUSPvCrBEJfvbulsvgrLowQrC7W8lZTJrxJkev0b
+orllVCvlsDc18tlZk/yrARTOg2vn8rmr1C/SrE5vvvYOyzvBN+k4K7/yldn
812oZ6XYsnHHyJD/eSfF9hNTix2Z50J9K8WInTEntiqRf1L0TCm78JDdT6h3
pZj1ziv0bT/yUIrvs4b/sGLvL9S/Uuz68vP1HzXyUYqIdS/1fvVXiPWwFL5V
F4d2GEheSuH484TrTA2FWB9LUTZhXtGWgeSnFOdPLfb/xfpbqJelGBVpa6nF
+lfwVArnVXdcX7H1I9TPUhS/iEt7pUO+SvFH+Y2/JZsPQj0txX9uYQZh42j/
LEX/Y0eMT7H5I9TXUrhpRRYc1iV/pRha0X3R9AEKsd6W4miYeeUUbfJYiqp/
D2fmsfYJ9bcUttM9Jz3Tp/22FGOXr393iuWrUI9LkbY/80cfA9p/S9lz7htE
sucJ9bkUd7Z2rulvSPtxKcZdWfU+mX1fqNel+NJxvvw3yx/B81J0Ur9t7MLa
J3heComG2X4d1v+C56WY2Ov3zK/ss+B5Kcq23uztzD4LnpfC9ZqP5SJ18rwU
4Q+GFTgOJs9L8Ty/5Y1c1j7B81JMiC0YUc18FDwvxeDGdutHsfkreF6KyNvD
R8vYfBU8Z8+L22xTy+ar4HkpWlQdPZ+gTf+fqxSTFL07z2T9I3hein2x+WrP
dMjzUmQXfJROHUyel6L22K+0G33J81IoLezo1akfec7au9JKd4wGeV6KJ+13
LrUYSJ6XomH53orlvcjzUqi2v2DXvhd5XoqYXg61rj3J81KERP7QzO1Jnpfi
Re/Rc/L1yPNS8Pt/XNDWJs9Lcb8hOOSXPnleis2D10lL9MnzUpzXsrMPHkqe
l8Kq5V1vx0HkeSmKgx5/GahJnrP+c0i6lteHPC9FXJcUe18V8rwMN50tlsR1
I8/LcGRYt3FxfcjzMqReaTf9tip5XobCZXkre/Qjz8vgP6LQwUKXPC9DvX62
leFI8rwMvesld3P1yfMyuLX8fl/HkDwvgyzSf1CgHnlehokLenp0NyLPy5DX
d5OyqT55XobYVnpR3weT52XwOq+ScFKfPC/DyFn73+81Is/L0Pbp3OUBQ8nz
MrRw2WG4WJc8L8OqBRMdjwwlz8tw5snEAbojyfMyuHyJieBGkedlSPlXrdFr
PHleBvtXsw5NGUmel8Hgy2/rkyPI8zI4v29s5zGWPC9DsnmHOydMyPMyjLl7
xOmnIXleBovEOZtlY8hz1n/Xohb5TSLPy+BzyXWo61jyvAxGCz+sGGBMnpfh
xce+vy1Gkudl2DB5saLImDyXYf+p7j+PjCHPZVhwI2z0pgnkuQw+wz4smDue
PJdhiM3q/NzJ5LkMQb1mLfYGeS7DLzeLOjML8lyGT0Na7igxI89lyD1fe0TJ
jDyXoYWT/YMVU8lzGbyD1xx+Ppk8lyFjjo+t6wTyXAbDLgf+rjUhz2V476Qz
wnIaeS5Duf6mkJAp5LkM7jtvfCyYSZ7L8CdxzQ3JVPJcBtdMg5L7c8hzGSKt
trUfakGey3DpV9vxUy3Icxle26uodJxKnssQgDurl5iR5zL4bb36sMKKPJeh
Y1/FzF9W5LkMNhayH9MWkucyPNW4umntfPJcBpnTVY0yC/JchsmLVV3WWZHn
MrSB3hvbBeS5DDMv56e2NyfPZSi++GjShLnkuQwlh67FBk0iz8uh0/ldhfNY
8rwch5beMnAbR56X478ta6eHjCLPy+FecWLMMmPyvBwDsye/itIlz8sx37dq
ktlw8pxdd7iuNV2HPGf3z1i+Ycwg8rwcj2P9Hf7pkufluJ5mfGmQKnlejqEm
8zes702el2Ntoq5S1x7keTnmNizWdO9Anpdj27RR/g3tyfNyfPgRrzmrNXle
jkAvn3HBSuR5OTa9OZ1f3JM8L8e/YSHHDnQmz8uRnNbGspsyeV6O1X2urX7U
lTwvx7dBDr5RncjzcljK0laca0eel8PUfEmbgg7keTm6mzsO2dSDPC/HCc/c
UC9N8rwcxZMW6xWqkeflCMqvSYruS56Xwzvka4N6X/K8HDdL7qS5K5Pn5dg6
XmX1bmXyvBxxG00TrLqQ5xXYEl3SYVVn8rwChpr5Z6+1J88rMNWma8PgruR5
BWZYduw6sht5XoGNmvGBXj3J8wo8GG+yaEE/8rwC96ssE9oZkecV6B2R2uqt
DnlegaM6n+xVdcnzCkhX2TuWjiLPK3Dw+ry7TsPJ8woEZda6apqS5xU43jab
5wzI8wq8K+n4duso8rwCTiYBPk33EzyvwIT9LaWho8nzCsiNHIdtnE6eV+BH
mzcrCqeT5xV4HLg6Y8008rwC5qctN58ZR56z9x8dOyNtBHlegfycX234EeR5
BSKclz5dYkSeV+DXZJPNTfWW4HkFDhzv+WLNcPK8qT9N3/UcTZ5XwGb/ltFn
jcjzCvjJyiw3GJHnFYi/Oc2sbgh5XoEN3Eenv4PI8wrsblE4bZYueV4Bxxj3
RW11yfNKHLih9WmWKXleCZei+E3HTcnzSpz/et159wTyvBLWuvaBgePJ80qo
d5ibPc2UPK/E4ZX1HsoTyPNKLJ0Q4BJoQp5Xom7Y+4v148jzSvC1tTkVU8jz
SsS+X2c1axx5Xomk2Ut7S0aT55VYfd5wgedw8rwS01tXLNAcRZ5X4ly43fPc
keR5JX7tX6bZeiJ5XgnvXkUVByeR55VYpDnx1shR5Hkl5lRPqdsznjyvhG7X
IXPMxpPnlRh/+LDJzjHkeSWMtw9PVJ9CnlcieUTwEz0z8rwS156rfEyyIc/Z
77cakm9vQ55XIkPqtFTDljyvRG3dltYG88nzSrzbvbf872LyvBI/Xt0oXTiP
PK/EoJ6VT3yWk+eVmHDLMf27LXleiYYRj75+W0aeV6HX4Yz73VaS51UYd9e3
ZM5K8rwKfpd0O8tXkOdVmGwyPCBhHXlehemXU9RNt5PnVXC/ejTXbQd5XoXP
CTuO120hz9nzfmlfWLWePK/CGsPQjjnLyfMqdPJZPc1nCXlehYgRK7z8ZpDn
VXjuONVigil5XoV/7Xd+MDMhz6vg4/L2Xv5o8rwKAcu2n785nDyvwjB/kzcx
/9ufs+fF2mu9GU6eV4HzdO/t9L/9eRWWbjnou0+PPK/Cs3PSEMch5HkVbpxS
H2Q0hDxn96/3CnTWIM+r8G31YckAdfK8Cg9epJxcpk6eV+Fv0nePGWrkeRUy
ft+4tVmNPK9Cyo34R93bk+dVOGT2XWb1m/5eXIWvE6L+0/xHf0+qgtX4idy/
luR5FdRrovm9Xcjzavx4m6yn2Zs8r8bNd22Xn+1JnlfjyyyLCQ6a5Hk13v7X
7vGUAeR5NTYHvvXaOYw8r0al3+LvA3XI82qMtP+X6W5AnlcjICk9JEWfPK/G
qfPLpwdrkefVWH530YFbOuR5NVR7cRZ7tcnzarQfEaHgB5Hn1fA5ezMgaSh5
Xo2oCVM1W2mT59XQXP3Mbeog8rwaGlP7yRX9yPNqTDSxnpukRZ5Xo21w0MmN
Q8nzauz2OPNBMpI8r8aIrTHeK8aR59Uo2Wj8cfoE8rwaJ0y/BniOJ8+r4R55
8c6M0eQ5a79SUvSgceQ56885WvOcp5Hn1ZhXPUWWN508r0Ze97czR04hz6th
lFsR1346eV6NTue/vVCdTZ5XY/qsDZP+mJHn1fiO2jHac8nzGnQplPI+luR5
DUw/uHidXESe1yB/b6131ELyvAZhcy/dUbUlz2tgfOfO5ynW5HkNXrdMGcrZ
kOc1cLTov3DAPPK8BrZ+fY8lzSPPazBMbt6oP5c8r8GutUkDRk8lz9n91oV9
XTWJPK/BtszbJp6TyfMarDLfMKr3AvKc/X6r3yH7zMjzGpy0WLoS08hzdr8D
jzUwmzyvgbmFc/epM8nzGtjFFFsGzSbPa2C/oPHyoLnkeQ0aa2a0WjKTPK9B
Rmv5xdPm5Dl7nzWHTu60Is9r8Le6rV28JXleg7rxp9VuzSPPa7DxycWYobbk
eQ1snnbYeno+eV6DDeOi3dvNI89r0Mf2c/oXM/Kcvc/FLq3vWZHnNXBImbjp
/GLyvAbVb+1y0peQ5zV4mei66PxS8lwOs11zd/jbkudyzPB9Oyp1BXkux4d5
16a7riDP5Wizrn5qgA15LsfPFINOoQvJczlOGV46LV9JnsvR48buwHGryXM5
uAunL1pvJM/l6IqysWEO5LkcLulRyTc3kedyyJPTK7xWkOdyPNOeoHHUmjyX
Y6/dKo2AZeQ5a9+xR/0HLCHP5Xivf8b89yLyXA7jtQ0dpy0iz+VwWrV3ufNS
8lyOTNvHx2yWkedyhF+ZZqO7ijyXYwl3KOKkI3kuh9/NkYOa/BI8l2OENKlg
/0byXI7Latee5DuQ53JsCdN0GupAnrP+VtG29t5MnstR5TL2T5EjeS5HyJ0j
/kudyHM5OjnFt771H3kuh+1oXSOz3eS5HA9sTaTqB8hzOboXX3nG7SfPOfi/
azyw/gh5zmG67MyrVYfJcw6Wd9Jf+pwhzzlkK5/ju5wmzzlcT9F7q+dFnnOI
6Xk1Q/UMec4hPN13vpMnec5h9ZJa/YsnyXMOhvltA4+eIs85yGLuPPxykjzn
cO3Xeaw9S55zMDterjXcizznoNY7b2MrT/Kc3b/6xeUUD/KcQxsvswGTvclz
DvFab/ymHifPORzRNBn07zJ5zmFGzur79Z7kOYf5UY0hPt7kOXv/Yxt/nTxL
njf9P9K7H/ftI885dJ3sntf/NHnO4WnV+pcnzpLnHJIuls++6k6es/a3vKK8
z4U8Z/21/sEux53kOYfvl/7b1cuBPOcQqv0xEw60P+dQOb+LytmNtD/ncDx7
WUWv7eQ5h8d6Okv37CTPmfthc6V+28hzHsZuF0JX7iDPeRSUXwpy3k6e83g+
oGXc8W3kOY/BMfFlW3aR5zy+yufP1t5BnvNw7G/AKXaQ5zzG6QZf+ORInvNY
se/t8j8byXMe+1r+6fzVnjznsVZitcBhHXnOw2Xe8e5568hzHroxQbmb1pHn
PDLmtEz/u5Y857F4SHSj1Ik853H9dbuyi1vIcx6//s4a/MaePOehsiz4Zror
ec6j9Xwrqep+8pzHgkvOSWdPkuc8nhj7XzS4QJ7ziPFquyfFizznkTvu6+UL
F8lzHhrX96sFXybPeUyfNCLU7yJ5zuPFQI+9Cy6Q5zw6TL99u9qbPOeBqPSZ
ZqfIcx4LvWeOCjhLnvOQrxxll3qcPGf9q5HYuPw0ea5A3LNp11zPK/B/vyr6
rw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1:eJxV2XlYjO3fBvAkSZaUIq2KKImyxaOcFUrZlb0IkT0hImSpLJFQlrKTRHYp
FCVp3/e9mWaa1lnsibx3zf39Hcfrn+eYY5p7u67r/JzX/eit81i8QVZGRqap
p4xM13///z8x/kRJCuatWwi5D4GL7/4WsZ9doT53crtCTzF+H94Sv+fiJgQ+
cn8YrUh/vxMbRjpaigeI4aP6xI5zYA9erjbsEd2H/t4bUzUSvrxSF2N/00gz
heiDUBluFdhfhX5/BIf3e2r7dogwrXbB2cs7juGIkbWG93cRezw/OHB7dvYU
ivDWvp+s8YkAPCzbIY7iiNjjn8Tdrcvs0rNEmPoqbe/7m6fxR/xL8WK6iD3f
Gbglf32VViVCnI5/y6K4IKxcwT24gEP3F4zTVa8nhteIcO3TsGe7Np3H9d7a
hvsr6XouoIcWT+05T4TK9u4TQkcnw6YXl64vBHbNfZ605YmgOa56hPzRULhr
+eSv5dL1XsKNON3ImXUirHTrPiLKJuW5qHDp+q+gt8XfKF++CGFXu//h76DT
LqEiup8wCJID+kR3ilCe89OxPiIc79+2Br/upPu7hgfGD413yIkxVG7pAJMX
13F+9BWBpLeYvd8beF80IDXmnwjLpQfEnLjK5pI/dP+3MNP7+LRPP0SYa37K
2pV/C0WFNfpGEnoet2Hgp5eg1ipC66KuI95GsYdNu/k3ej53kPzW2PwNM36B
2wQdUZI7KN0YpXaqiZ7XXUT2QcCERhGMTwxmbuEuEqY1Zp8W0PO7hzH2loMV
mfvPvD3r9de/96DaW883r4GeZwT0xlv8Ocgcr+tpqcvdxyUP89D/vtLzvY8L
Swb3z2LOr1h6d6elYiQQ0vfY7Qp63pFYVrDYZWORCA+7bnfgA1hf1Xg2uoie
/wMcz74353i5CA5dhxscBWfboX/0qmk8ovDwoI2ZDDP/uh+31kP0lhfJDhLQ
+DzERaPYYO4XEbqeXp7+I3zR+fMuVEzj9Qh/L4/iXGPWl5HzuY/fDaPxNuRW
jG4/Wg/RcNppqyanLEY6czSNcY9RUO+vc3Ywjedj+EYnpM4dKsam820HMekJ
XHoWxy3RpvF9Au0au719mO+Zi2Nu+SmeO8RJtquJ2fF+ihmbJEtUdcVwYiYP
M6TQ1fDsZTec1t8zJKSW/nXUE+Me8/RK7z6DbXBl8jfme+l8eIa1bdvUBw0T
49vfIu+mkc9hFdVfcmaUmJ0fz/H3j7wowkiMmd0T4DmO7j1/7j5zPul8eY6s
+2Eb4g3FYAav64YQ3zI43d1UzM6fF1g9bfPA38ZiSC/vBXyuh6c0jxWz8+kF
zv5eUh/NnH9C97+XaDp/tmwtc7/S+fUSM4+O+RHInP94YgYzg15CSbBFk8t8
ls63l4gx/pXaOE6MQmb0mWeCW2mTXF0mU169Qr/a4dtbposxvPuArxBSE3JK
e66YnY+vcNitaOuoRWLs7h6AGFiHvdzWY4mYnZ8x0H0+cZyA+fvk74bMCMfA
Y5FP5kpHMTtfX6PC+umPUGcxVKQXiPNhKpOi14rZ+fsay6JSLIZsEqP76tJe
o+3ZxKVxbmJ2PsdC9umQ70WrxHhxXRT5eU4sEkeMvXtqg5id37E4OVHpzqjV
Ysh233AsXBM/+Gxkrk863+MQcCbo+p+FYiyWThgUuUwWxM+mfI7D0x1fDO44
iHGn63aL4mDov7068z8xux7eILFk1VFdKzG+dB1u+RsM+6XeY7iNmF0fb/DQ
PUU+cZYYNl3Tv/INZG/0lTnJPE/penkLO/lQJbOpYnRP39Vv4ZmSeU7XVsyu
n7cQpqT/F8dcD+dA14C8hdVrl+83meuRrqd3mJayzGsocz9m3RP8HV6bCqNm
rBCz6+sdYl8cvlWzTIyjoTOYKfMOT64cNT/lQustHkYfdAYpzhcjX797gGFp
eVOs5kjrLx4mN00MZjDn0+tK/7Z4HBw84dHo+bQeE+BwXdP4z3IxPLuWx84E
/FIWPVRdROszAYtroh2/zBEjqWt0vyZgze+xlcELaL2+x63JxwPeOIkxULog
4bvywPVJK2n9vodwcdlIZeb6ux9f+3t81y2YYbeC1vMH8JomX7Bmxrf78g5+
gHnC2fzN62l9f0Dyj0OWq5jjSR1PhM/bufwLi2m9J6Lp3NulfZjxefB5DrOi
E+E2U93m+ixa/4kI/IIbE5jPC5nVyMxRGKYMlps8h/IgEa9M/C4mMeP1q0uf
T4mQfRuSWDeH8iER73k2v/oyz/OWRteCSIL8Sn2fScspL5JQ8Cf6v13M85rd
PcBJONrnZHvkPMqPJDxJGznFkPm9OLLrApMQ1L4srdqO8iQJ5pIQX1fm+q50
XV1GEs581Nw51pbyJQnx54fW2M8Qo2ty2ff7iFlBC9VXWlDefIRsSqvyZWa9
d6VJwbyPWB3Pjx0/hfLnI4b8y2m0NBOja7YwUwbRY3/tPmlAefQRFRm31iaM
FqP7dvM+QmBecT9Ej/LpI+LzoiqGDBGj+3AqyThg08NRT4fyKhl3nxcVxo4Q
ozuOHJMx0rKCe1+f8isZNnb/5uYyeSWtD8m4H2Qq529IeZaM3Q/WfMph8rY7
DkqT4RF5avUAPcq3ZOx6oTLks6YYvt2B8wn341/1v61LefcJ0y+PftqH8WJU
9wL6BM3I/S+Nh1P+fcKFAbJmG5l8ze2uF5/wn91/oV46lIefEOy92/klc/x9
Xcuh+hO0Dade8dWmfPyE9cqjOhcx3+t2TWedFHi9vvnz+FDKyxQsGyluDtQQ
I7Vr+rmmYHvEni8VupSfKVh46l/RNibvPboDMgXLr3XMjxpDeZqCbPHXEcrM
+AzpXvApSH6p0llvSvn6Ga/nrNq5gxmf7ssb8RnK0x0Vok0obz8jaqJKWjrz
/Dd2//uMwP6dHv3GUf5+Rm6P9sZfzPPtKk9MwkLzYE81axPK48+wT+00+8b8
visdvZs+497jZwsWGVI+p+JcS5njW2b8VncfMBVXOnjrZw+jvE6F74CU6ce1
xJDvDqhUlPYMuWStR/mdigPfFritZ55H12ioPklFXsD6OfIGlOepyMq9n8lj
xqO73YlSEVbeZt8xkvI9DTY9YrT6Mn/f2bXczNLwtS6B88OI8j4NMkKsv8lc
7/2u6byL+TyhuOc9dcr/NAhKTdTOM+M1X3rDQNjiLbFDyIM0JJX5f3vOXP+P
ruH4ngaVLMciX33yIR3Oh3IyK5jz3+i6XfN0nByaeXbgaPIiHbLmKVkmzGfb
7geYjtG73AOcRpEf6ajix8V7M+Mt7OaB+f2z7Xf6DSdP0hEYcT+gN9NnLnXF
e0c6pn/ctiZci3zJwNp1b5zSmc/d8WyZgW1lH0M3qZI3GdCwOVevwNxvd7we
zsCx4a5v5qmQPxkY0LxiVSizn5HGXwbOmExrO69CHmXgsGvSOm/m993xIpuJ
i1VTO420yKdMnAv496MHc//dy3dGJmZNGXIpbBh5lYlG7RFnvJn50708/DOx
8+mxieOMyK9M3ObHXLdjxlM6/TIxduvUn2OMyLNM7HLQ3LyB+b64a3gVsjDu
0cR5WuPJtywIK4bGNDBeH+q+wiwcTD2U8Gg6eZcFWUm25yomLw26J2AWXCbL
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
pk/NJM/5WMuN7r/yA3nOR4tRT5156eQ5H2kpKjdPJpPnfOgu8enNTSXP+XAY
vU1lZTJ53oB3gff0b8ST5w1I5O/SSn5PnjfAVql+T3Iyec58vszbk/WaPG+A
qXnDlRMJ5HkDCjRubOiMJ88bcFdsdrUgiTxvwBmjgP6LMsjzBmgmPawq+kSe
N2Dbkcdav9LI8wbMaN/nHpNNnjcwOfhWdV0Ged6AHV55376nk+fM9b8cZFme
Sp43YPnjnL+W6eQ58/t3uZ9d0sjzBnCG2nx7/ok8b8Cs8SU5Xp/J8wbYnTms
1fMTed6AYIH5+3PvyfMGTJA7maWVQp43wNjf3G5QKnnegI0yv0tt88nzBvxz
2bjDopg8b8Br9Y7S8znkeQPaclbwdxeS5w1QVr2mYVtAnjeg37o9HhezyfMG
7Du+++WHDPK8AdPvlbb/yiLPG6AfVoqYIvJcgHMTLDWMishzAXZXVo+0zSXP
BZipoqzmlUmeCzBc5VuBfz55LkDiiL9LTqaR5wJcSCw1Ds8hzwXYqu90YFkh
eS7A3qP8kf0LyHMBDB1eXMrKI88FaLtjusqhiDwXYMvxytPWleS5AM8mZAR/
zSLPBZjTnxnaIvJcAJl5Mpr3y8lzAY7VzBodzCXPBYwLWRsceOS5ACcMTffl
CchzAeY57VRWqCLPBbizeyMPFeS5AP6Gg6dMryPPBXg5d1iVQgN5LsCSQ1td
horIcwFct3ye19FCngsgmHlpng2fPBdgwxf13gI+eS5AjofxlnIxeS4A5+KI
qpHfyXMBvNI07UOE5LkAKsLhvjtlJaznAhzVuuol6SlhPRfg6Wpnr0fyEtbz
RmgvMkyN0JCwnjfCoOPu/NdaEtbzRlg8V5bnqkpYzxtxIpx/+OxwCet5Iwxv
Lyi7bCJhPW9E7b0PjxbaSFjPG+Fv+txg+jgJ63kjTI1KDdpGSFjPG5H/2+bG
EDMJ63kjFG2Gtw0YL2E9bwRWrNmiM0XCet6I9Y2BjkILCet5I7J3b3621VTC
et6IiY+zVbKY30s9b8ThuHvpwUYS1vNGeIUt7D1dV8J63oi9IcaOPZnrkXrO
3G+O/Jg1zGep540wm2aVeVpfwnreiJV9on7sZn4v9bwR3mVJ464bSljPmefZ
8+aEAuZ+pZ4zz3O7fEDIRAnreSPUf3jt4zHXJ/W8ETpBvVbdmyxhPWeut+ba
XZepEtbzRnR47m9fzTxPqeeNMK5qt/s7Q8J63ogXm7TmBEHCet6Ip/u4dlnW
EtbzRjT5yQVtZp6X1PNGLLg+jZ/BnF/qeRNK7ssW5I6WsJ43Ydin0Fk7mc9S
z5sw+MGJjmTmfqSeNyFVk1cFZvylnjfB6nbOuSg9Ces5c7xxN+VqRkpYz5tw
hRvBeck8P6nnTVDYeGOdwygJ63kTig60+ykw80/qeRM8mo8dyBosYT1vglb2
JN3JAyWs502QVKn9rGK+l3rehKfOfe+qq0lYz5sQdTD/9quhEtbzJjRN9N30
lJnPUs+bwBGNcHiqLGE9b4Jzg+MEi34S1vMmDLlaH9VbRcJ63oQe6ooLJgyT
sJ43YfGAfqu+Mp+lnjehOm5oyEkDCet5E6aYb1lwjplvUs+bcN36bBKY5yf1
vAkmejeSXJnnI/W8Ca/f2q5TYu5f6nkThNrWJ8yZ40s9b8IZVwv+UuZ+pJ43
4cS1Ibd/Mvcv9bwJd7f+s/dg7kfqeRMe2g2+OF9JwnreBIR486MVJaznzUBG
BE+WuV9p4DdD8vXBu3AmD6SeNyPqbC9DBQUJ63kztsy5es2nv4T1vBkPli8M
c2Y+Sz1vxsGk+Eof5vxSz5sRePCD9eh/5HkzfJKerFL6Tp434/ir91GdzeR5
M75tWnLnPo88b0bB+iiVUU3keTOsVvou1Gshz5sh7PkmZVwjed6MTY98/4YV
k+fN2BzX0eZfSp43I1LBMPtTNXnejOH/RRq01JLnzbCwtTv+upQ8b4aX/vjh
lcXkOfP7/kp3ovLIc+b7Sln73+XkeTM6OJdrfCrI82ac+ntaP/N/njPXY/Ar
wymPPG9G3scNX8Ul5Hkz+p2euPl5DXnejJaV59K/NpLnzfCNaAgyryPPm6Fq
niVzqZE8b8an6U4NL7+R581Yqli9dOFP8rwFoZE19Znt5HkLBKG7j43/Rp63
QKZeUq/4jzxvQXLJiD1KHeR5C4oDVcurxOR5Czwe5/899Zc8b0Gsgf4z/V/k
eQu+jrl33+4ved6C5eviTW78I89bEK+jttqXmZ9Sz1vwNHWBY8EACet5C/pM
thO1M99LPW9BVNt7lbuDJKznLchX1z1Sx8xnqect2PplvPwsZj5LPW+BTknv
Cg/ms9Rz5voNrl92Yj5LPW+BvuXACFsZCet5C9z+nPru00met+BH4D67vsz3
Us9boOJ/IeA9M7+lnrcgcqu611pmPUo9b8GX2wHjJjOfpZ634OCoipRATQnr
eQvCtNN25zLrWep5C6w3mgbMYta/1PMWeM6/+oLP+CX1vAW5H3a6f2TyV+p5
C+KG3XH+Ook8b0F1iIGt8D/ynLn+MKX01knkeSuGLfTbrmtJnrdCJ29qzzs2
5HkrJn88EidvR563YsvKKybGM8jzVtj71x8RTSXPW7Fe2cmN/x953grv9Kfx
sZbkeStCM0qXOVuR561wKnnhaTCVPG/FZu2wywMtyPNWzLF9sjTif563wmaf
zwidqeR5K5b8itn43Yw8b0XS+Of2cpPI81Y4C2rHqv3P81aUhwYHyRuT563Q
nIPYiabkeSvS9n7Zs9qUPG/F+x09RmtNJc9bcWnQ5NxrluR5K0p0729Knk6e
t2K01xeh9wzyvBUST1OdBFvyvBWXlW6Gh9qT561o5Vb8MHQkz1sR0/ckz3Au
ed6K+s7ga2/XkufM55nZi9I3kuetOHvh+jMfZ/K8FQPb98e9X0Set6J9w66b
6ovJ81akpzbGie3I8zY4C1/WjZ9FnrfB4Xio7Hxr8rwNTw1D5ALMyPM2rFrg
Kgk1J8/bkKOw8+opU/K8Da4Wv9JujyPP26D65l5Q4VjyvA0BDbl3zceR523Q
Tph7Xnkyed6Glrh7bdMnkedtOJWjHNNpTJ634dcdTkfkKPK8DRlXXk6dPIo8
b4OTb+KszpHkeRvs5Hut1TIhz9sw1md5pvZ48rwNNwxffxowlTxnfq+7+bir
GXneBsuxrj3DjcnzNlinvXxyyoQ8Z87/LGTTUSPyvA23/eRCm0aR521oa2hb
pTqKPG/Df7a9jbMMyfM2KI36lyYaQ563odZp4qKJRuR5GwYFFx2bqEeet+HR
obSvPw3J8zZwn1u3fJtInrchrf+cEdeMyfM2zIgb39/QjDwXYsSza50rDchz
IeaWzPsn0SXPhXDLaSzzG0KeC/F5tZbTzqHkuRDf5mtkVw4hz4XYMCY3aOZQ
8lyIQxOu+C9g+pfUcyG0c0eFHeklYT0XQt483sGG6Q9Sz4Xo0QGHMXIS1nMh
3o6NsYjsI2E9F2J/w/NDS5i/l3ouRGRSncXPvhLWcyFS9ByXfGf6nNRzIRbm
/74xhuljUs+FaPfT68hh8ljquRDcz5yCK9oS1nMhih9O9t/F9FOp50LctrGt
tGbmp9RzIWZGzFNTYea71HMh5rn7rz/PrA+p50LM39vjtT6TV1LPhTBZ47Sh
nVn/Us+FGLYs7cQwJh+knguR/9z5iQeTf1LPmfGY8MTBb5qE9VyIBrkx5RZM
vkg9F8KlU8lIjvle6rkQig32FQ7M+aSeC6G/0sXvBJO3Us+Zv9+m27Cb+V7q
uQgzg63GrWf6vtRzESwfyIm2MJ+lnouwVM/zkSGz/qWei+A5bozj/tkS1nMR
dn6N+LxvoYT1XITpac+OjVgmYT0XgfOf9wO7dRLWcxHy7w88mr5GwnouAs72
H9BznoT1XIQk/Yyju5zIcxGEYp8D/rPIcxGeVU8uKHIkz0W4c1B5retK8lyE
fRlKRkuWkecixDo8vsxfSJ6LEON0yC/YnjwXIaXhbGmgI3kugsnTfJVh68lz
EUJGjDl8damE9VwEdz3b3WudyXMRtnlJ5uetJ89FOKLp3PDciTwXIetb2EgP
F/JcBH375zaaa8lzEaLTt/XQdSfPRRhRqRPo6UqeixD149DT8FXkuQhXns3a
5+tMnotwceDJxTc3kecinG34Z9W6izwXYdeyiws0vMlzMQ48dS9JOCTB/wH1
JpJ2
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1:eJxV2nc8le//B3C0pPqkvbWVhGhavSiEllBZDRUpMqJSUiHRHhqkYZWGlhIt
I0pG9p7nOOfYzn2K9vrdnPP+Ph6//ulxPxz3ucd1vZ6v66rJW9zMHWSkpKRa
eklJdf/9//+I8Pvup6KVW8wQ55lic7wfHW/G96rdw4v6ivDz0M7XXiFOGLkk
dN7SP4zk5+7gfT50qllaBJ/hD5dxD3jB5+rXeJv+9HlvVHx8puLXR4T9LYrq
snEHITV/htbd/53/CPKXf/3syR5r168+fcXVH/vczNdM/8ZIzncUsk/7my5u
ZPDSZKCMctAxmHYZr7D5zEjOH4xVjPOhcez1az77sDf55gnYzlj8Qo79ffH3
nYJxxlDbUwNFSFIIbFuTdAa1TxuEswbS959Dspx03Hp5Ea5lTHq82+k8PI/9
nbL9P7qeCxhXOGFi+xARqn/0fCGGXQ535CnQ/V6EBvd3+9cpIoxTq53W1+8S
pqd7/vJXFEmu9zKuG1SWNquKYLOt54zYc6Nq7TE1ej6h+DH+vMhdWYSrYT1/
sOxD8765anQ/VyG/Smr9bCURKvO+WfBuhWPirr07fObR87yGM6kXstaz3z+m
97r/VOKvQzEsXjZsCt3vDVh5an5qniqClfiEmFCyrvdwVbr/CJxZNFNhDXu8
YuFx/c0C9ri+qctWlZ5HJO6vLeLGzBShfU33GSMxpvxS9eSF9HyioPfd/3yS
rggnXZp+3f0UBUfPpbseaNPzioajnuuBfQYiKAeNZG8hGjbmsT/CNen5xWB/
8lZ9Rfb3cyINn3f+icHjF9emtRvR87yFgmNVZ4tXi9D9tEb3vo1hnzf5nrWj
53sb1R8vj7m1XgS58mh3XblYnP1k6Jq5np53LP74JAT0MxXhXvftyt+BssdV
vz9G9PzvwEP9i2AIRDDtPt3Iu1AfuvLmMtD7uIt+/PYjXeznex73+HvQSd+n
+sWE3s89lOt7FESz5+9+egVT7uN40sPqPEN6X/fx/PpNvWj280p2Z99+mRmH
r6lNpUPW0/uLg9uTQ+OyLETIYs82Vu0B4gd6ezVZ0Pt8gMn9JjwvtRTB6XzH
Qcx/iMbFHwPPrqL3+xAX+iWYPF0rAntx7C0/Qop7SHW5Hb3vRziQmKzQyD4/
S3bwsK8U/276yD6yoPf/GL0TVhrvY49j2KdXHv0YLc9+Km9bS+PhMVJfh+VP
YI+7/pR4tyg+wQr3Ro9SYxofT3CxKDjlh54IBj0D4AlkQzt7DdSj8fIEfK2b
A5J1RGBfXvcNIWfqsS+qmjR+4mEQlz9htoYI4suLx5g3J59/0KHxFI9g3Ybp
2gtEmNvz5ymg0jZBNJ/G11O8sQkxus3+fkBqNjuCnsJjpMbTcg0ab08xXm3v
uiEqIhSzb599JujINa7RU6fx9wztm0UL7rHzb2rPCZ+hX8kMKecZNB6fYRmz
bfoK9vc9e15AArzaXn0Zr07jMwEFep0Hk9j5kv5lJvuGE7D5ULFNiRKN1+dY
dyla7wg7/4aKLxDX9u/oM3cGjd/naBkkv+k8O197ru7Dc8xLPI8rM2k8J8Lt
ruuiQPZ88deZ2PfLEzHQP9Tn6VQa34loLJg0VYM9lum54UTU9BL26jOVxnsS
7jqFGKZNF8FcPGDAZ34fjVSm8Z8EX6dn4y+w54/qvt2SJEQIlj3aNYPmwwt8
WTpnlsI0ET53n87qBQ5sPN+VoUDz4wVkvI67VI8XYUn38K9+gbryUy98FGi+
vET96bszj80SoWf4bnyJuWOjIqxm0fx5ifaqO/4L2fNzD3S/kJd4+p9mn6ip
NJ9eQXO86unB7M/Vewb4KySq33w/YBrNr1foVeipeoK9P79LS9kh8wohpVtU
omfTfHsNz+m/L25jjwun9LxgrD/o8be3Cs2/17D4A/3b7Pub3J3+Ha8RZiic
gfk0H99grWEe14sdfx7d08P9DdzW/ZD6Mp/m5xtMTnvb24TNw7Tut9v5BhuP
RNr2WUzzNRlleqGJjux8kBdPSAxVKitT16b5mwwl1eAOETueeh7fj2Qkl0vd
KJ9H8zkF+5j8P9fZ7++5vIMpiFpts2mzNs3vFKzz2dFbjj2/2PFUZA7p+8Vu
Cc33VPwx2/jwDfv5O++XszM6Ff8xge7mujT/UzF2Z/bgBPb6zdjZyI5R3KtU
DEpbSnmQinGnGn+XLxPhe7c+Gan4W60TvX8F5UMqfmkZXs5j8yBibPeESIOU
/Aj35+aUF2nIWb7v+k82X4x7XnAafvA+jBloTfmRhnA/OWWerQii2O4LTMMl
mXTlTGvKkzQsOXR90go2f0K7ry47Dat+7u7rZkn5kgZOhMzKVWyedg8uk4Fv
0XdE5Nuh1pQ3b/GtKyZ8/0YRutOkaOVbrBpvpjfPhfLnLZQTL/dRcxOhe7Sw
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
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
DK5JR3/kupMeRWPYxvrubvcYdD5uRjQuBM3X3H2J9Cka838arPnFHndernsM
mndf67PoJulVDLiBF5Pnsd/vlKM1MfB/pXL2jDPpVwyW/lO0dPBDBjL7EIPB
bQ2bcn1Iz2LwR+zx6jFbb51ykBeDqBjzNU5BpG8xsD48qt6OrQ+7TsGJRdKq
kv1LokjvYtEq2pmwKpLBiM4NFItgp4HuL8NI/2JRN+eoljZ7nN5pL2LBjejS
vjWW9DAW/S+URL5lr3e6YzuUxGLIp/aygDTSx1icuFsmXZ/EYFBHOQ+Mg4GW
5f3KcNLLOHAWaYfcYa+f0FF+2+Nw8EBm6Oh40s842DzKaJ/Pjs+qUyDj8MRG
X8M4jvQ0DklzwxbYJjPo3bnh2evdGrQ4lkP6Go9Ts2f6Ds5h0Dm8YfH4Oq8+
Wj2W9DYevz4Our6X3U97O//iUZKhsrvUlfQ3HgPCNybvYPWzwzyxCotrqxru
9QggPY5Hj71lezLY9elQxzOCePjbM6MVnpI+J2D/9Zob9S4MtnZeMAGq+4O7
l/qQXicgU3Jzt/QZA+VOgUrAh/sTUnbeJ/1OQKP5qwDHKww6VqPHuwRsK9vg
tuQ86XkCbropFfOOM+h0d0wCHB/w/XOOk74nwuXgyJGcMwx+d2y38YkIiez1
2/Ue6X0igicoOg1j9du7o5yPJ+LpMWmjiQPpfyJuRncvsmXvt1z2wDgfUjLC
2JJ4kAi/6Qee+LDHTR3L8SMRX97ao/AU8SEJ0/Jfjlp6gIF7x+NOScLEUMe6
3geIF0k4u+Vkk/YWBqadE5iEI3ZDODEbiB9JsDIpv+6zmoGkEw9JWGf9Y5Wl
BfEkCX1DB3i0WDFw7ZD3X0kIMn74degR4ksySoeMEhix4+mU51nJqDXIuuVh
Q7xJxs7WxT0HsfutU15tk+Hfa/PZ/9yJP8mw8TxmUs3yRCZ/yTBRWd/S7Q3x
KBne2r6eqqw/7JQXpe/Y+zZzZYYP8ek7MooXFDxi9ahz+87/jq2vwk+3RBCv
vuOKJOjdC1a/OreH43ccdJ1Y8OI18es7Pj621fZm60NWft/h/mOi+evnxLPv
qNE5UGXE7v+cjuVVTUFL7I8eaX7EtxR4f1l9ZTNbnxc6R5iC8i4bM6uciXcp
SHtQfVzA1vvwzgJMQfdLA5uLzxH/UtDNJsQ+iK2n1JTOP4j6Hnqge5h4mILW
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
do90ZrH69D8KG2al
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
PT/kIf96sb32SDne57X/4aeXltH6sXKlh3nYs2WOtBd7PdvbA/U9itI+rM4a
Klf6+B57wl1ezmKPh7Qv6PdYdfZKraOWXOnle5xNOBawlh2PjPbHq/eI8Zrd
aacmPa+8h6GNp7Yq+7zj3R7Q7xEdoXM0sJ9c6el7WOi+O7mZPW6Pq/750GhZ
ID7MHnO+5kPPVPKv9TA52uPANh+G/vmDbdnx4bzNx+Xoy+88R8nBPX7lw2X8
+JqIwfR8lI9vzfc/+AyQoye34SB75tXSgb0ezuN8vMiNks5k57d9uQwqwK/5
RWml7PMf5zN7fF9/20XW5/bpcCjA8ON9ffeKyesC7D2e0jiPPeYezwogPjQk
/3Yd+V2AAU7CVXpCBu2nqy/AxQkX3nVuJs8Lobds5jnrBtrvhcg4OXK1yv98
L8SBQ/PvrS6n/V+IhJ72n/MayftCHLYtN1ATUx4UYnzqsSXyr+R/IepvXAgz
YSgfCpE0b9nCYULqA4VYuyXk8C0x5UUh1ILs5Qt+Uj8oxK9ODR8d2P3D5Uch
fj5aXtUqp75QiLNxvHNz/1KeFGKJ+8hn02TUHwpRHdBi29pK+VKITYN2nFrx
lfpEEQKHa5+//b+8KULNXOmjlCLqF0Uw+tKrdHAZ5U8R9v28PetYOfWNIoQs
Oi4+WkF5VASbaH+tNY3UP9jXM2O+3JBRPhXB/Wytd6mU+kgRAsL8Ruyvpbwq
wiqTXzr35NRPijAx6oNadC3lVxGitiRes8ilvlIE17F9zM8mUj9mv/+fFAeP
TOovRXhrXvy7me2/XL4VIUWk+/3nL+ozxdiS0bip4SflXTHWVbjn3WDzh+s3
xTh1s8uzzz3lyvwrRmlI+ptd3eXKvlOMxW5VYufOcmUessezuxb+o0K/bxTj
4swHExn2mMvHYhQO6hFe+pH6UDFGoqdThgrlZTE6pesHyH5RPypGgV39nip2
/Lj8LMaAQ96mbb8XcNNbjJwDs/4JbaB+Xwwr19kKdTH1p2KEqCZ+3sb2Py5f
S7CwKUSvdyP1qRL46Gj3Pymj54ESjPmdIfX6Qv2qBMYz1g9RZ8eHy98StKyf
6HqLvV6ub5UgZmq8atv1cnlcgimjTOxFX6h/lWCu6UF5UHfK5xK8uXo38Ki6
XNnHSrDzsolnrhrldQmSfz6292Hfz/WzEhzoKeKN6Ez5XYJPqw8s6Mb6wfW1
EpzOeLg1piPlOXt/R1JXH2HPx/W3Etj7CYe97U75XoqZmVPET9hjrs+VwmLG
mTMRGpT3pVhQfmBKOXvM9btSLCy/UezZi/K/FGmq84Utg+TKvlcKqbf9lsFD
yINS9HnivG+GNv1+VYpnjbe0a7XIh1JknHk0uDfrE9cHS/HBt+eknv3IC/b6
CvyK3rJecf2wFNFBHbdUDiQ/SjE8f3JC2+9fXF8sxYVVGps8epMnpdhaOPDJ
IdYDrj+W4uIyx5MmA8mXMuxZX9X3G5uvXJ8sw724C/Pa7o/zpgwC3Yu/T7Ie
c/2yDCe2VH13ViN/ysDv4pB5jx0/rm+WYfYeFd+7quRRGYLvGE25oUa/15Xh
wViBiYUG+VSGRxMD9MzY8eP6aBmmrT/Rum0oeVWG/JH/zuvJesn10zJsSwjW
qRpPfpXhxbkf6Xuny5V9tQxGto9t5FPIszJ0mOhpbzNTruyv5dDrp+bOm0q+
lcPvslPFFWO5ss+W49pU43GZU8m7coyzkro0sp5z/bYcgeq5PxaOIf/KUXvH
ZeQJdn64vluOAi2Jv+YQ8rAc2R0+bJYMpt8ny+Fb3j/efCj5WA4Uacf1Ye+f
68PluOLl4/xWi7wsR2bv44d92f7A1cVyxBu9j7QdRX6WY8UG4wdVbP/g+nI5
/OeLhClTyNNy2BruzOw+Qa7szxWIv6299flo8rUCkZmRo4ZMkiv7dAVqdMK+
NkwnbyuAqAKRwQy5sl9XYEBrWf5NQ7nS3wr8HJ4dkc6+n+vbFXjsXvqhkP0+
zuMKaBmnxd3Spd9jKzDGf0VUIvt+zucKpMcveX5BX67s4xUwMMg128Cen/O6
AsndvD2dp8mV/bwCNuadXO6w88P5XYHRFhaKZnY9cH29Ah89OjwXsPfPeV6J
UJ3Shi7s+znPKyHVqpvQkX2d87wSZxdf9zwzWa70vBJGvGFreOwx53kl6nv7
xnZgr4/zvBLed9aVek6j37MrcT/P96WcPT/neSUCjt0t+cJ+nvO8EnLbUeNv
mdDvz5UwU4mQKZbKlZ5XwiBg2E3bueR5Jb5MWSgtXyhXel4JtZsqqpoWcqXn
lYCXympPG7nS80qkpcUWrlkrV3peCfu1N6YucpIrPa9Ck6XD+Cv2cqXnVRid
bvfbmv0853kVjOrO33u9Wq70vAqnc6suBayXKz2vwpNUs1yho1zpeRViO0wz
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
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
0voihBVG9UQV+F3OVw/GCfo8r8Lj+AbD+0+pvqhCq8yimLnh5HkVbtbdSr4d
QfVGFYYUnVXVDBb0eV6FXfISjdfvUv1RBTXD+N+yL6nfUAXJ1271YulUj1Qh
QyvFfF4K9R+qEPIgssEhm+oT5vtW0mOsS6gfUYX1/q/OTWgiz6ugk3K57GQt
eV6NiUsGbrWrofqlGneCziaiXdDneTV8/oxO9vlK9Uw1lm8M7Rg/kDyvRnA/
o8fbxcnzauxvUCiQlyPPq6FZddDUWJo8r8YR+7naA+TI82rcFQpzrcaQ59XY
njYsU28SeV4Nk4DHblby5Hk1btQ2dqybTJ5Xw9NyZ0L6JPK8GqrfFZRlFcnz
akS7j09bNZk8r8FMY+3lqpPI8xos8Jj7cOw08rwGk4+Uj6tTJc9rsGqNRgxm
kOc1KH206vDOOeR5De7v3SlnrEqe16A7r8n58jzyvAY/D3g8ZE8jz2ugvqTL
aqcSeV4D7QGqPwymkuc16FLVu9nTbxN5XoMJLfuG/phGntcgbnO9jJ0GeV4D
s2nc4MRZ5HkNhqt6hpfPIs9r8MP4sqWUCnlei7b9NbOD5pPntRg7WOlapyZ5
XsvEaS2xrVrkeS1iXwRVsZaR57XQODztQpY6eV6LWS3Xwizmkue1+CD9Z1HW
IvK8FnHhHzbcXEKe12LU0Rsfk3TI81pkKtr69fRbRZ7XYm3sNzV1Her31GKF
zcjZFxYL+zyvhcSta1fqFlH/pxZTjA7bYCH1S2th8CDLzkqD+kG14IhPnmvC
XIs8r4O31fymWC3qD9UhAmHSqWuov1qHxbWmnyLWUr+oDst31vVL2yDs87wO
JydumjVkG/WP6nCiob/Shq3Uj63D5ISE07yN1E+qg2W8V/jvTVRv1kH7Lve7
pgn1l+qYevGq1atdVH/W4VP5KVPJg9RvqsO5xJCwqMNUj9aBZTWFW7eX+k/M
eOZs7YrfQf3eOvyJtm47tov6UfXY/iGiIJW5FnlejzX6kesrzKk/VY8uj9OL
lA5Tf7ge7tW/NfofpX5VPfwlO5JqrIR9ntfjgp3y7g8nqX9Vj4oPzXO7T1I/
uR5NT7Sem5tRP6se6o+O3o09JOzzvB5XJ7CXvDpM/a16SJ2c0f/CYap/62Ff
Vxf/woL6XfVwnrDrwffdwj7P63FN8o181U7qf9WDE7xyWNQW6lfXY1/shLBd
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
yPNWrJE43y3eQJ63QqD0ONK5kTxn5if6QOWIAvK8FZILzys65pLnrQi49rPi
diZ53grdIt/ggEzyvBW5g5JPymeR563wKzuz7Gwmed6KXdJTTb9mk+et6F52
8ZxtBnneiqh/Bjlh6eQ5sz4tEQtks8lz5vecdNZvLiXPW1Hzafi8UyXkeSvW
V+zp2pFPnvPQ/0JzTX4Oec7DoOV/9+ckkOc86DvqL5nwljzn4eKwrIVIIM95
2Ohcs/DkU/KcB0X/YfovoslzHhwiZnHHRpLnPMy3bm1a9YA852HXbft34sHk
OfP5Y1k3rvqT5zyUF+YEbQwgz3nM+bMXngogz3kI/yi1OPMBec7DkkVLut8/
Ic95yJp52FPtEXnOw77fUcGyweQ5D9vEO//sv0+e82BiX2o6+wF5zkPirNRV
G26Q5zz4a5zyKvEjz3l4lNThfiiYPOfBnSX7SekGec7Dm5SdeYpXyXMenkQN
Nxl/gzzn4XCU5ou/XuQ5Dw+tHd1/nifPeZj7dbPCQBfynIfdNtqhG66Q5zxk
yLCM77uS5zx4nOf5/HQhz3lI1xmTIeVCnrdBSVpuVq0Led4Gi6ebTbo8yfM2
BLXui/TxJc/bkBpb12XvRZ63QfrTzeZvl8jzNrS9zL8/7QJ53oZprtUBpi7k
eRs0r0lG1d8gz9sgez9rb6kfed4GX8HWgbs8yfM2NDTXBIS4kedtuO75MjHX
mTxvg5637XbZK+Q58/sfWtMkbpPnbbisFTXF34c8b4PjgmXSajfI8za4rzKR
+HyXPG+Dk8rZ2SNuk+dt4Pxbo90QQJ63YaL1o9RxgeR5G/KfZ2Y7B5Lnbdjy
/cbgwiDyvA3fBDtfVIWR58z8HbKYuj+KPG9DXsZiseAY8rwNm+Wu1Dq/IM/b
MEvp1C+xN+R5G/iv4+//fUaetyGp8m+t9RPyvA27jr9vTo4iz9sQmjHryukw
8rwdl7nKYcODyfN2bB0RNkLzAXnejnXDZNbE3CbP2+GyXUO2K4g8b8cumyCr
dQ/I83YkN/kzoYg8b8cNOfGxlmHkeTsSHk1zrA4mz9sRtq9oSO598rwdL+fb
mln5kuftiBljXvnbmzxvx6049hUvD/K8HVMf3Duw9yJ53g79VLl2EwfyvB27
F9SXap0lz9uZ34nW3G1PnrfD0nJ76Ch78rwdXqeNxo13J8/bkX8Sf695kOft
CL+FRlUv8rwd5fnXm/v5kOftmGD3rGa7K3nOvL/y8kfpbuR5O0KOs67oXSDP
23E45xP/0kXyvB1Dz9ziqTuQ5+0oXqSntf8Ued4O0yaJMtWT5Hk7ki7EmStb
k+ftcAio2plwjjxvR4pZnv/ti+R5B0Z9qh/104M878A229YoG2/ynLnfLzKy
yJc878D3dS3WlVfJc+b6rUVEiQd53oFWj1UuqZfJ8w5osSXUL10mzztw43Pu
0VdXyPMOfLyXL3bqGnnegVDJ7vYaZ/K8A2Mutvq/ciXPmeuPZ8b7/Ndv78BA
u6WHpC6R5x34daTKztCLPO/ALJ2U+rxL5HkHmivaAi7bkOcdqE9e7rDWijzv
QMnU6MTUU+Q58zz1q6+SncjzDhTozSvp6e+KPO9AmLTbogB78rwD/v+s5hY6
kecdWDs14+yO8+R5BwInJi15f44878BlzVlRkY7keQeMQroGLLhInndAfF3w
pmw38rwDLrxC7UgX8rwDy6YoDM9yI8874Pd4hlD/LHnegb8HsrnTz5PnHfhs
XWG+w4k870TEi3Qbu/PkeSes5bT3rHAmzzvx5Kxl5HQv8rwTtp9azpVeIs87
EbwrvU7hKnneifub9ihPvk6ed2KZ12O7L//V550olSzI/HmBPO9ExXFZg+OO
5HknhiaHxn53Js87Me5Wm2KkB3neCQ2Lc/xTzuR5JwYfiDyk5UGed+JnRnXw
WG/yvBOro+uVTrmT552It6t7sN2bPO/EMJ9M8xhv8rwTsad2zU3zIs87IfFI
fJWeL3neCak70cZRt8jzTriKFRx66kueM9dLMz6G+pLnnZBJcl/c9F+/vRNn
2crakrfI8060qOnP3u9LnnfCSSu8WcaNPO9Ewr8Qoy5X8pyZPzlD+UpX8rwT
4lZ75a5fIc+Z+xsN3CR8yfNONIyb7d3tR57zceRE5s1rfuQ5Hzdn5+fXBJLn
fCivyw48cYs85+ORfZllxhXynA/jsAuJY26S53xc+Wq4MeMyec6Ht5TOoXUe
5Dkf9U3ZQlVH8pyPf/U3Q5PtyHM+7GzLxIZeIs/52PJYd7iPC3nOR0Jr558t
V8hzPoYem7jfyYU852OU7In3tRfJcz7G5h1ZbHaePOdj0Efj8nO25DkfC2pn
Jhnaked8NDz7HKxoR57z8fh4eVu4LXnOR4ZptlWAK3nOh9VdP1uHi+Q5H79b
1CIFLuQ5H55uN89EupHnfDgf0q9efY0858NMYoGZ7y3ynPn+P3HJQXfJcz70
1B5zlK+S53xo/lu+2+wWec7Hs0rVfCUP8pyPRT/jlN94ked8fOcZhhi4kucC
GGyVvfbXhjwXYOBsN89B1uS5ANX6VZo9f28ReS7AWJ/8trHm5LkAkx+KB97f
T54LkDvHuWiBCXkuwOsZihYZluS5ADsFymUB5uS5ACrSktoPzMhzAdqyS+aH
HSHPBdj0+XjlVHPyXIAuXJ7hdJw8F0CzRFl8jwN5LsDd01M1K06S5wKEXns7
ao05eS5A1P33UvPMyHMBmnaqdvmbkucCDLJV2WKwnzwX4ITOuK6lu8lzAbam
hA7320ueC/BbZaJikyF5zszfyilun9aT5wJ8SnL6rbCZPBegeKHsIM0N5LkA
usoLPQ+sJs8FSFnLna6oS54z9z8WDzm/hjxn5uORtMKt//rtApzMfL0xbyl5
LkDRjumZ61eQ5wIc0014vGcNeS5E8xM7z/HM+/0PD0Hvbg==
      "]]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], Thickness[0.004], 
     LineBox[CompressedData["
1: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
jhLVeUl5F6qHlGP74d0Pj2vT81I5zrfKSFumQfWRcnQv+9TEri09P5Vjsfml
LWH6VC8pB9eiyPFUb3qeKofiuI7b9+FUPylHcEzlZZP/6PmqHGPelDf7z4Tq
KeVYnm+uNXA6PW+x8X2ys+M/U6qvsPH9N8Xx3AR6/irH/izb1U8nUb2lHC17
TrEpmUv11XIcDrs9S2VC9ZdyxL4Om3bDkOqt5Rj/Pak+ZTbVY8rRSU1tx425
VH+twMPqe3/a2FN9pgK6Iwc1tbememwF+pjc73J5G9VrKrBWZ/Le0TupPluB
8vzOl4N2Uv2mAi8DjmUW7KF6bQWG+/rWqe+jek4FIvb3nVR0lOq3FTjY+aBD
zjWq71Tgyq1X+dPuUj23Aj0djLYm/u//byqw8Zteizv3qb5bgVZ9zUI2+VD9
pwKJ9R8OzA6lem8Fmm5ONHn2gupBFXCtCd146R7Vfytw/2rT1AJfqg9VwHPd
AKdQL6oHV6DFxtQLc99RvagCO3+WXlwfSfXhCiR9aXn/ZjnVjypw+2M77e6f
qV5cgUMvPvb/8YvqSRXIOyxb5FZI9eMKBLz4E3z4f/9fVIE/AStskzKpnlyB
Aat95hrmUL2JjXf0v1ahpVRfrsDShBy1ABXVnyrAb9CMjuWo3lyB2rq9h35V
UD1KDr9zGwcGllP9WQ5P19fDtGupPiXHQws5Z5tG9Wg5RgSN7jUvhepVcjx7
/2a1RjLVp+X4VxlUN6aM6ldyfFW1CRoRT/VqOWZpvupfkUH1LDl2l3Kf2mZR
/VqOK6EbXcblUX1LjqzOj4I2pFE9Ww5p9r/ti+Op3iVH89Ozdq9KoPq2HH2P
a8Q65VL9S47zkjn6HSqp3i3H29txZiO/Uj1MjvUPSrQ3Kqn+LUfY1HxNoyYq
0XM5qpuX17n9pXo469/+JMfU5vQ+qxzQHbysZzOV6Lkckz1v/Mv5S/UzOTSN
B2tMaknvn8ox/9nLX+3bqUTP5XBYqRnRTkslei7Htyk2VvGdVKLncmS+7jLS
vYNK9FyOMxGXd0xi9xO6y46julcdVVeJnsvh8WLKlMp6qr/J0UHt8JjdP6ne
Xol+XUt9zFVUj6uESa+/V9u0oveBK5H/rKP/urYq0fNKnHU01TygTu/LVkKv
2L/H+Rb0/m4lmsbKzzn8o/p8JZr1tipQ8FS/q8RYr4OvdT5Tvb4SLf84Px/4
g+p5lZCc0Guu+EXP55XYPCY48qWM6nuV8F3ZuWRGCdXzKzHX9Oj2qi9U76uE
54evLnG/qb5fie12Nzd0qaf6XyXkr7pWtmfzJXheif9Su928zdoveF6JAY9N
86FG7z9X4ohaTu+HbH4EzyvhPdwwsLcOvQ9ciVsZUR9ru9L7ypUo8Sp0cu2p
Ej2vxIZTB5ad0KP3Zyvxc+6SVzbDVaLnlTg8wDo1aJxK9LwSc7K6DO42XiV6
XokXLZSV10arRM9Z+xc8GvpnNL1/XIni981/dpmiEj2vRP/UKRHB7HqC55VI
9mv1+t8Eel+3Ela3WxybMEkleq7AwkdBg3ez7wueK5ARtOxS8Qh631uBUMuX
nbxHqUTPFQjraGP+uxe976zApRWnn9d1o/ezFeirxk8611cleq7A35iXvQb1
o/eDFWhptD3Fq4tK9FyBFfdaByvY+AieK/Cm0nrYvz4q0XMFKl5sNvFm9xM8
V8CtdlD32Xr0frUCeu3fWr3voRI9V6DXr4O7v7DrC54rcM1iV7zBIHofmX2f
H1Dba6BK9FyB5ZfCLzmx8RY8V6B9G0dbn6H0frsC6Y4dZk7WV4meKzDmn9Hv
hvefBc8VuB6VNL+iA72PrsCFqYuyhumqRM8VqK1aqhjKjgXP2efvdlc10VaJ
nitQtgG+Gt1VoucKSALr6vaz8RM8V2DX4OHKVaz/gucKyK8MkmX2pffHFfDt
0j5llYFK9FwBk7xzS01Z+wXPFcidtejPJAN637oKo9VwNJn1Xwj4VQi7sLnr
ZDbfgudV2F4UtiV8Ir3PX4Wez7UCA9ix4HkV4mNCf76ZSe+rV2HgnqFnYgzp
/fsqyO8qN4dOVYmeV6Ht7hdV56erRM+rcOvBg62RbL0JnlfhyXS7N4Xs+oLn
VehatKqzNVu/gudV0HHgTxkZqUTPqzDBZ1Doc2N6P74K7y3jH8ewY8HzKtjd
Pzxo7CKV6HkV7o2bVjd+Nv0eogpFnXIdlsxTiZ5X4XhaSY8R7FjwvAp7fJ6M
S7Cg3y9U4eDqznfjzVWi51Ww0X9muXURvY9fhcFrZQZ3zej3Bmy8eis3FZqq
RM+rkDUltzJosUr0vArbzPTXma5QiZ5XIbP/ePUBa1Wi51Xo9Tus6cWtKtHz
Khi/P9Qsf71K9LwKXRZGud9eRe//V+G/JkkSy9Uq0XM2n6/aqFmx9gieV4Nb
HD6v/3z6/Uc1vv4KitzIzgueV6NH0JaqlwtVoufV7HlmhcdPM/q9RjXydn3e
7MPuL3heDYN2g2OfrqHfG1Qj48PoPUtX0O8rqmFp1yWqyFolel6Nb8e4V+7L
VaLn1Xg53vdpoZVK9LwawS47b4xdqRI9r0bAngLzw0tUoufVOOl4p2faMpXo
eTX03CJffLGi3zdUY9CKBe+02fwInlejiYVP6Aw2n4Ln1RiTV6XKN6bfu7D7
6TzP/jCDPK9G+upk/Wh2XvC8GgvCO3yUziPPq2E23+7C+9nkeTWKAs++aTWb
fk9RjbpPYw9IZpHn1WiWq2t2YiZ5Xg2dZY+n500jz6uRsuG/Gdvmk+fVsItb
FP12CXlejaXLN7fttZg8r4Z7k7UT3liR59VIdkyYk7OUfr9RDfnbfReL2PgI
ntfgcpPz4UZsfQqe1+D5y0iXAHPyvAZHzT9UfVtOntfgplEfyVVr8rwG5//8
aTphNXleg8Fq5l9+svUmeF6D9ab1mavW0+9FavC9x2TDE+xY8LwGveNmvT9l
pxI9r4Gzcqj/kE0q0XP2+UftTxg7qkTPa3B4+oHJV3fR721qMGN7cafYQyrR
8xps/29W7Yq9KtHzGijXqoyc9tPvU2qwonr/mtqt5HkNnswf0fHsGvK8BpGr
Bq4wtCTPaxC1PunoxdXkeQ2a3/eyq1pPntfAf+dwkzJb8rwGY+85THZZSZ7X
IPq7RtnfVeR5DUZ0UbQIW0ue18AzJrxioC15XgO3J2fUdDeQ5zXQd9R4arGc
PK+B3s9ZlpdtyfMadHX+ovNwJ3leg/HNCz+d2k6e12CK5fiVjnvI8xr0n/vq
r409ea7EgPZTls3eTZ4rsfFKpkmbfeS5En1/l+wI3U6eK6Gv93zvx93kuRLx
75pb3Lcnz5V4ulxj4qI95LkSM7pfmW9xlDxXYvbZXiYJx8lzJeq1Uo6uPUqe
K1FwzvXS3oPkuRKYUCc5cYw8V+L4rWnv+JPkuRLWE245NblEnisxvuuUR7oX
yXMltAfpuuy4Rp4rcXBND1X9ffJcCa/J+0+3uEOeK1H1Oj/a7w55rkSQzfWP
JrfIcyXc89uc0fYgz5VY51a2as4j8lyJMv36Vwsek+dKtOhTWLX6IXnO2lNx
IHCkF3muxN6f+sqO3uS5EssmDv5hEkSeK+HwYMDuVw/IcyUuzKsOtPEiz5XQ
2ukweLQ3ea6ELPWgTycP8lyJ3UOCTff7k+ccetv/mFXtR55z6NIsd8K2QPKc
Q226yqkwhDzn8MMgXrblHXnOoUb7XrxHJHnOwc3ir170S/KcQ2Wi/7E/z8lz
Di/bTws49pQ85yB9pu+6K4A859DZCt+jvclzDvVXNDcvDCLPOfRUHx5U8Ig8
5xCdbnA8wJ885zCv7SlDd2/ynMO+x89eqXuT5xwcXD4aBj8kzzksGdHt0HIP
8pzDdNfxuu4u5DmHJIXngjYXyHMOrofVvMaeJ885NFfMkd25Qp5zuJh6b0C4
C3nOYVduuqOrO3nOYbntneQfl8hzDuETM1Z3vUyec5jlkta0pyt5zsH64OX8
snvkOeuPpb1W5/vkOQe/9I0Psr3Icw6ZBtoPS33Icw4jXVfUTwghz3ms2erp
dCiUPOcx/fa+vx2DyXP23DPExKnKlzznsePHxb3PnpHnPO5PXH0g7Bl5zqN6
r+PE00HkOY+Fg9LuH/Qhz3mYnpvs0uwxec7jxeLbI5veIc952M2afWenN3nO
46jU+OvRQPKch9+Qb9npIeQ5jzMfLx0a8IQ858G5v1bbH0Ce8/i09vTb9r7k
OY/0PZanZ/iR5zxeVwYaBHuR5zyWPP2x9JMfec5j3IPu1d38yXMeXQeF1Mnv
kefsObON5Y2ZD8hzHuGePjppd8lzHhtb/u4b40aes2OLqgk9r5LnPEb0PbHZ
6Rp5zuNvZMDdaHfynMe6UjNj7jJ5zuNu77af/S+R5+w5turvgl+u5DkPi9Ja
S63T5DmPpBHjlVePkufMvae/zySz+Pl//UA/IA==
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
77V9hzH1RwjRL9zJZ72RSs0fIcJWJxY9+vd+TQjBk65mW7vT+1AhWhfVjere
VaWOP4Vw9XjpEzlYpeaTEKfSLggwjN7HCdHVrWv+u0EqNa/Y+ME9+nLs+7x7
COF38rLDp24qNb/Y+gZ103Y2pfd3QmgpFMaCnio1z4SYFWtY6cm+z8evIti0
qzq7zJj6S0SYH+bai2tH7/tEuCla8MShg0rNOxFMF0oS5htSP4gI1zK0ZF6d
VGr+iXDareBdQCt6PygCZ9c/JaWZSs1DEYQu3tsyOapniRDm132kgZz4KEJx
wdmN6UVU3xJh3zB5VqCUeClCRfOC04JsqneJsGkCarNziJ8i/ClIHNRcRPUv
EUaFxErvVxJPRZh2TNW15jvFzyLcutWh2lGT+mlECLT8Kglk8+XjaRGaFvYu
CGDnz/NWhN4d7mtcaUH9LyK4Kt7UXmPXPH9FcNaed7qhv4uPt0WYGqmh8NOn
fhURzu3Q69rQj8TH3yIMWvJgpbk+9Tew8xh/d39DfxQfj4sQUrPx7K62KjWv
RdC8V7bpNpsPH5+LMHdV32u92P/z/BahdHTR0mH61I8kQqLpq+/anVVqnovR
M/y535E+KjXPxTgj3el8fyD1U4jR6nDikj29VWqei3Et/XrxcmZPPM/FuGx2
P9F5IPX7iPGzfY8TJ8xVap6z/9f7IXk2VKXmuRhGLToMc2TP43kuRsyWsJXa
/VVqnouR+EVamNFXpea5GPvc0qTV7D7PczFcN5RNPzuY+rnY+AWFJhP7qdQ8
F2Pazq8aRl1Uap6L0d68V9SJPtR/JYZ2kVhbh43H81yMzueiKlax7/M8F2NH
3xh71/7ULyVGG7O90t3MX3iei7F6z9IxW8xUap6Lod/a0j5lIPU3iREYtb/J
AOavPM/FcJhm9smYjc/zXIyrQTGttzH/53kuRoCkrJkTmy/PczEMzPZyf9h+
8zwXI2l+7a7mbL95notR02fvitVG1L8mxkxJwfFm7aifQ4wbxsXlfsw+eJ6L
EbfgSK+EVtRvJsbUST2eP29H/QvlCHKKbv6a+TvP83Iky09Ete9K/TDl0D5x
6K6WiUrN83K4jDtwL6gn9TuUI3rzkGlubal/pBwbJ+cmvmH2yPO8HOHN3I8c
Zc/neV6OiKIeJTnNqT+iHF+w79sWA5Wa5+Xw+HKlm7sB9d+Uo+xriv9U5h88
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
YPJWZj88z9l4wjZTOWZfPM+VECZt+PBARTxXQvLEJPWOhHiuRNAgTvnrG/Fc
iccf6ldHKYjnSkyLnzSibR3xXAmdB1fk7wXEcyVMevUzqasknitRUFC2KqmQ
eK5EtH4Xq4sq4rkSBm3vu8m+E8+VeOKYtsPoG/Gc7c+fI/NDK4jnShT+fT9q
TRrxXIn7D0vLvFOJ50ps8ZmUnv6VeK6E/h6Hxas1qN6uRIzXjO0Hm1K9XYmT
yc4hXlpUb1cidfKQV+21qd6uRP+tNnszDKnerkScRe/w6A5Ub1dinzjLvIMJ
1duVuOjpZtO5M9XbOTjOWaQf8+/3nBxC8/S7v9emejvT5VKnkw3+xvOcQ1bp
9dpvrajezjhd/qLkrAHV2zkEPXVefqgT1ds5nO7htzZRn+rtTNdfaB1+yPyR
5zmLE67syTrSnfJzDn2lJenrh1N+zuFSzbtD28dRfs4hx8U05cIcys8ZR8Y2
nYDVlJ8zu21ttlF7J+Xn7NowQfvhdsrPmV2taZHVay/l5xxsNx8sHLmd8nMO
8h4Lp4fbUX7Oof/5cKNvhyg/51AVvn112B7KzzkkjOs1uXAX5eccFocY5d/e
Svk50wWfE+Iemyg/57D8+JW24VspP+dgKTrb77od5eccRvU99NJlP+XnTBeG
XOR67aP8nENNiLXG/AOUn3M42e2uqWon5ecc1hku6dVxO+XnHOZnztf03UX5
uQqRirZPQ3ao8D+NxEzQ
      "]]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
uhC/m/09l99ZmNJR/k6NmZTva1n4nZ/k6Wct5fM8C1/2t+y7yNaX629ZEJQ0
TQrYJeXzPRtK6oscMvZK+T6Xjc7PUx+J2fpzeZ+Nha7qhV7smut32RAIluTo
svfh8j8b01fn95u7T8r3vWy829mh1fuglPcgG3EFYVfTHKV8/8vG9UkLP0Y4
SXkfsnHgrPa05SekfB/MRo8XT/vPYOvDeZGNpz7F5nLsmuuH2fh503Gpu6uU
9yMbkw8On37CXcr3xWykeI8JH+sh5T3JxseecrEtbD25/pgNF9+hoj/sfThf
clDWPLUmhz2P65M5SBnp+nnyISnvTQ785/8Z1ZWNn+uXObC1jl2rzq45f3Kw
JiFsvjN7X65v5mBb6phP/7Hxch7l4NeLp+OfsP3B9c8cDL9n3HSLzRfnUw4W
XRj9cBebT66P5kAhxzwrkK0v51UOSp0qukxn+4XrpzkQOQ/84sfWi/MrB9pD
9ynfZPub66s5eJts5D2GvQ/nWQ7WBWqGubHzyfXXXKyqcjnzjZ0nzrdcVCkP
tStj543rs7nYrpSiv/SilPcuF0XN7wa89ZXy/TYXYV2+JPj6SXn/cpHi2WUj
2PpxfTcXwicGdUfYeeQ8zEVhy9Kstmuu/+ZixpBl4j7HpLyPuVh7OXSTC8sL
rg/nwvxrlY4mGx/nZS66Kw6O/cLuc3WRje9hp/NXLkh5P3OxQXuYl+sVKd+X
c/FPr2/HSH8p72ku7qkPzLEJkPL9OQ8bsvINz7O84XzNwzmHg447T0n5Ps2u
iw3KJ7F84bzNQ2vm8gFW7P25fp2Hzkte2jdflfL+5qHw+IOGCvZ8rm/nQXHf
oIVxwVLe4zxMWRKlNoGNj+vfeRC4X5Wf7iXlfc5D4NHooCHnpXwfz8OLNx+t
xrL357zOw7bnu5U3svzh6kIeZB75Ejm23pzfefiZ8/j7c7a+XF/Pg3UXtxwr
th6c5/lwjYqY3czmn/M8H+GjVbdvYPnIeZ4P6VEb5dnsvHCe5+NjauPWCWy+
Oc/zYXFC2WAoGy/neT46rGrxes/mj/M8Hz2f73rs5Ume5yP0xpDox97keT4u
5/12EPmT5/nYrfxbMjCAPM/HspFKWQdukuf5SBkTNyDjOnmej/t9FTfXXiPP
8yE3vCWony95ng9VY538W17keT6UVx+pf+VBnhfgnuO1z4ou5HkB8jfeWr/Q
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
xN6f87wWS4L3rljO3o/zvBZau+e+b2XryXlei/UrBAdtB8t4z2vh4+/z5CN7
Pud5LXrqGHwfxt6X87wWxxY+hQnLJ87zWtSP+drwr7+M97wW/4q2rdjFns95
XguVowa+m9n8cJ7X4t2ruqyB7Dxxntdi2cQf8/zY93Oe10Lnws/gUWz/cZ7X
Yqm983kjtj85z2vx6dwV+ZiJMt7zWkRsHbB38WQZ73ktfkfbB/Vi+5HzvBZr
hIEJUrbenOe1WJdQmjt1uoz3vBYzLjx+pj1VxnteB5ugB9rhLE84z+ugENDP
6yLLN87zOpTt7rrmKZtPzvM6LLsrynZgecl5Xoe/wTK1A+z7Oc/r8N/hTa5T
2PdxntfBukfq+wts/JzndbBXGehnwr6P87wOQ+VsMvaw53Oes/s1Ux70YNec
53VYviYmf/owGe95Ha6ttYveys4353kdzKK7uDix9eI8r0PEiP/qhSzPOM/r
sK7/awSy9eU8r8PmTdFTktl6cJ7XocrqbOhatv84z+tQpCg9OoutL+d5Hc7N
XSkGez7neR1WKtpLtNj+4zyvg9bJr+uus/XjPK/D3WVVfb+z9+U8Z+NdtnKp
N5sfzvM6aL+115/B7nOe18Fwn8IkVfa+nOd1cDpkW+nHfOI8r0M3QUajHPs+
zvM6TLf/GhPH3p/zvA4j5ESNa9j54zyvg+fKTeoz2TXneR1Gf7Kc58Del/O8
HrYdr+uOZc/jAr8eEwWju+qz/cp5Xo/py98+ymSf5zyvh4ey3qvcP/T7vB4r
5/TtqtdKv8/rYTqnV3nHFvp9Xo/OBT+ef+hAnrPnhxT4FHciz+uh5hKyS2EQ
eV4PdeXBkf2VyPN6WJos0vmnRJ7XQ2a2PLn//zyvx/p5/vcujCXP6xEwfEG/
OSPI83rcRIWW6jDyvB5hviOvxAwiz+sRcqBrxD9F8rwe0y6/Xz60H3lej80N
I7ffHUKe18Op8wclzwHkeT1eDxd+0+tDntej27dpUq2h5Hk93AX3tX+NJM/Z
/DWWKQcOJM/Z+BY/vrNRkTyvx8xa3d4DlMjzegz7NHmI42jyvB67V+uWiCeS
5/UYKPb+7axKntcj6eVgX1UV8rweJ7ovGn14FnkuQtKGgq0DFpLnInzJ13yh
tYg8F6Hn4L4KAfPJcxGyOh3JjlIjz0VwEclfvLFcxnsuwlutf6ldNWW85yIs
Gj4tcNxm8lyEU9nLsHwTeS6C2/lIldqN5LmI5fGvbsc2k+ci1K4LHXZElzwX
4e72mK9Rm8hzEa5mRyad0CPPRTh4blbwKiPynI3/ZYdH8/XJcxF2zO0Z/30j
eS6C8KyyrsYK8lwEPz/9e11Xk+ciVPccumb8SvJchK1PvR3XapLnIgyOCsuW
qpHnIij2GZ9jvYo8F2FCtx0tDiDPRQjY9it/pSZ5LkLMiw1z65eQ5yIkLjsc
0H8leS6Cpl6rk3Q+eS5CwqRPpyepkeciOHd+cmzGLPKcja9gx3jlReQ5m9+U
90uaVcjzBiRvt7YWjSXPGzDy0GjRiGHkeQNSPrhdfjOMPG9AfmTtwc7K5HkD
psobmweNJM/Z83bE2v6nQJ6zz5/9cdVtEHnegB1+3WafH06eN8B2d5Kn7zDy
vAEXp9ns36VMnjdg9wnVkvdjyPMGeOw7PX7TePK8AQ9Xx+6JUCXPG+A7sUll
3zzyvAHzR9cvuDCXPG/Arq0XVVMXkecN2HBzQuyJJeR5Ax5b204auoY8b0CO
wpiEqcbkeQOqDgRa/jMgzxug+Gln2PGd5HkDrgu8p1lYkefsfbve6nR2F3ne
AIuVl37F6ZHn7P7kfUt0NpDnDSgZdGugmg553oB3KpcyF2wmzxvQ+6nlzsFG
5HkDRq0e+TTQjDxvQGXvWfE+RuR5A1Q2mHUuNiPPG7Bi8ZT+M6zJ80YkaS5w
/WNBnjci3ip87cCd5HkjHBVWx521I88bsctwcKj+DvK8EUMid08qNSfPG5G8
ZYeKmTl53ggvecVYBzPyvBF9g8tEHU3J80bMfju7eq8ped4I/UAf+Z725Hkj
vt+aNUfuIHneiDpvOeMyN/KcPe/ZoF1R3uR5IyZula5a60eeN0KwbsfQrYHk
eSOylJdfjb9InjfC06nTaC0f8pxdu8fsGnKLPG9EufstRe2b5HkjYv6udbK9
QZ43QjW7k1z2dfK8EZLnXl6OoeR5IzSd4x6Kr5Dn7PlfC37rh5DnjfgROntD
ZTh53oiZv67O2fqAPG9EiOXtDqOek+eNUOqXJtR+S5434siq5s8Jz8jzRqzX
8FT7FUGeN6LCp8NA4W3yvAl6ZgrP+4SQ501QUSw+1u8+ec6uN/RLjr5Hnjfh
U+0xT70Q+n3ehMTuHXrsCaff500oLU4ZoPCEfp83IeNWgsnlEPK8CXGWUa0O
l8nzJij+i88uuEieN2HH2fU3+/qR502YklDj1HCDPG/CpdsZVuGXyPMm2LQE
Rgl9yfMmxP/bJYEved4EZ93zrQ2nyfMmHDzWcM49gDxvwmSdh14at8nzJqwo
dzTtfoc8b8Ks3Y9GXPInz5uQ9Leyg9M18rwJMi0DBYeb5DkbzwXfYZtuk+dN
GNcS+uR+AHneBMOKmcHhnuQ5m48ZOkv9fcnzJuxSSLSd5k+eN+FM3/MzQ4LJ
8yYcWWx83OIGed6EFpvX1p9CyXM2n9HBC1aGkufs8z+Gxo65Rp6LsdsOj0eG
kediTL419W5OEHkuRvRzx6MJt8lzMXrs6BfT/Rp5LsYyM+tBJbfJczEavkyc
cTKMPBcj07nvHOdH5LkY15os+uVEk+di5L/9M/Z2HHkuxhuDkQ1zEshzMV7f
2pBzJ5U8F8N+4jR1/RTynD0/ZPDhZxnkuRinxEtHe+eS52LcGfXQ4HQOeS7G
8pLW8ke55LkYp/fGd3LNJs/Z962e1ftoHnkuxqCeB5/pVZLnYpTIzzv0vIw8
FyNSQbQ/QkieixFU0qEgSkies/koc96gXkSeiyFb1G+zTSF5LsaY0/Ve8tnk
uRgBkrLllWnkuRg7pyQ/mZdMnovRc1i+45Vk8lyMk5mdtL4nkedidDY6Z5Wa
TJ6LMVr3jHK3D+S5BEuErw/Fsvv/B+fE4z0=
      "]]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1:eJxV2XdYjf//B/CstJBSGSWS9h6i5Cmh0CAiIyMrq2w+sskMkVUKDWRkZWdU
2nvveapTp3PqnKMQhd9d57y+1/XrH9d93ee+z33f7/f7+Xjex3gvX7f1/SUk
JDgDJCR6//3/fwL0PBQWOHvNxyp2EevdP754ezU0njtM8mG2fx/e/HF3kDee
L300eesg+vx2jB7r5TV7iAB+I5461B/YjcWrJz/6Ji0Qf34/mrNXKV+TEeA/
jpap1JODOMiFqkCajj+KLXrbfrgz329T63rhhs9x7HGVGhPB44vPdxJawtxM
s3Y+PsyR669/+hQac0t877TS9ZyBwtiNI6+28THlVdrez3fOIV0/+XI4sy36
vgAs6+h5+4nNx7ux/twF7y7Cwn/dzh+FdH+B+HSk4FRKFh+hSeOe7/S+jE7n
8d8qmP2i67mCAI+2y8OK+aj81feFKHV5cm9oHF3fVaibOJ5uSOBjjHG1puSx
a5g8/Y66exJd73XIPIhwsHnEx7J1fWfEscP7WblhdP03Ibk7/qVnDB8hwX1/
+CQfpzH7E91PCJ5/rnr/8wMf5Tk/FzbcuwVeo8nLrAd0f6FgKURNHRfCx6iB
i4cavgyDukWhfmUI3e9tOOaUDLl3jQ8P0QmhsP/iy7f+dP93Mb5FUXn2ZT6c
rM7arW66C+8hD+yaLtLzCEfXbu/OMUf54C3oPWM4OrTD5N3P0vOJwEnjF7mv
L/Fxfmtz90NhBErChztI3KTnFYkNDzPj3a7zoX9ambmFSOhMn/NQL5SeXxRS
btfcbI/mIzN81puOP1HYXsLZxn5Bz/MeTnqZKs9+ykfv0xo58D5SfR/Y1UfR
872PcycrHoQyz1OmNHK7rcwDZGl+jPsRQs/7ASI6G9xnXODjUe/tykcjO3hW
wHc/ev7RuJ32MzbvJB9ze0+n/BDta25HK26j8XiI3B+Brl//46Pvcas+wlvd
jz+PbKLxeQSHM4tU5q/lo/fp5Wk8xrCry5yvrKXxegylCVu3713Kh+6KS4nf
dZ7A3tnmzDBvGr8nmB631Pr+dj7SmbONNo7BxpC0PB9fGs8YSHrFz3Zgjve+
3HYQlk+xsfKT7MhNNL5PEbMvM3rdHj6Yi2Nu+RnGt9qub/Gn8X4GD+OHHV/O
87GImTzMkKJ77PXS7AAa/+eQuXf6mByzHcU8vdLI5yi1Ma26f5Dmw3N4eX6T
VbvBR+efov0crRfwCYvT0nxI8+MFEia8nHnuLh8z+ybACzieMjI+FUHz5QUc
Yi0sepj5ygxe7w3hS97b5rxkmj8vsefjkVEqBXyILu8ljp5hp2uzaT69xM4/
yq3HG/gw7/uLRbDFy87vXJpfsWi9aXH4IXP8ifgMZgbFgh2QZLG4leZbLAyy
lAd6dvBRyIw+80zQ4dB/QtI3mn+vsC1f1U1roAAT+k74CiqJBwxDmHwTzcdX
mPMz25rF5NeuvgF4Da/IyrtqygLx/HyNi/x16K8pwNfvOswIv0bqN41R2uMF
4vn6BlrJrz9vZvYriC4Q1Zvnho81Fojn7xvIFZmPf8ps911d2hu0zvqp9MBA
IJ7Pb1F17Ovyf0YCvAzjP0iZ9xYbz3omupsIxPP7Lb5ugbWeoQD9+274Labo
DzaU0RaI5/s7hISnqe3TFcBNNGGwMOfVLlcjyud3kA8qn3ZeT4CI3tstegeX
AxtSBzH7RevhPR6cGMuxZc7/rfd0Hu+xS+fToigzgXh9vEfhpXmvzpsLMKN3
+le+R2excc9ZCMTr5QO++YySmmorQN/0XfkBwln3n0+YKRCvnw8IGqMi6HEU
oP5A74B8QI3KwZy5cwXi9RSHLyqDb8yZJ4Bp3wSPw8U30guXuArE6ysOt98M
Vvo0X4Bj1+yZKROHG+nrVOUXCMTr7SOMM5P0Ly4WIF+jb4Cx3OLxVn138ugj
cp7lrtNcLsD43vRv+4gq2fMB35lt0Xr8hLP1spK2ngLs6F0e2z9h6vppyfLM
ftH6/IQJrtZYvUyAhN7R7fgEiwvtE0YtFYjX62ekXe8UfGCuR160IGGatltq
M3O9ouH4DPl94T93OAnQ9/h+fUbocT3wmc+L1vMXWE5c+Wol83z6Lu/gF1i1
H/Tm2QvE6/sL5PRiDs5jno/I8XhMcYow2st8XrTe42HEXxf0nnne0SnzmBUd
j9kZn9T+OpK/8Si5YnvRldk/n1mNzBzFt5zOEYeY/aI8iIffoJmlUXME6OrV
JykePjMkA97MEojzIR5u0UXeD5jP3x3duyAS4LvE++lf5vpEeZGAzbu8JHVn
CODYN8AJOBo8w1eL2S/KjwQEqS+/+c1aAMGD3gtMQIiu2fU3kwTiPElAuNNu
/dHM/pu9V5eRgFw5Lcs7VgJxviRgX+Bju+t2AvROrjlyiZBeN3PmPub7RHmT
iHal3C/fmPnUmyYFzonYfaFm9Pa51DcSwYrcab/KRYDe2cJMGUwZZ/WxiBkf
UR4lQhBVvs6ZGc++281LxOMzecNXMtuifErEAAdJuVkeAvSdTuErZnn+rVNa
KRDn1Ve8d8zgHWW2++Jo4Vd8lk7YN4bZFuXXV6iajKm54S2AqD58hf35Nds2
bBKI8+wr8s5wPg7ZJkBfHJR+xam7F+Y6bhGI8+0rrnq/KD/J7D/SFzhJOCQV
ktC4QyDOuyQcX7PhfqyfANp9CygJ3Wa7Lv/aT30tCXF7v30+9Z8AuX31Igkp
gw33vTlEeZiECQ3HHqsy2/t6l0N1EuoTw+y8D1E+JmGey3zh2QMCqPdO57HJ
MFiRree2j/IyGY9O+Sov2CpAau/0W50MaZl+09hrKD+TYZrokOe/QQDfvoBM
hk5k1T7hWsrTZJz7JWURzzwvlb4FnwxzzXd+GuspX1MQWjLzsgNzvr7L00zB
RyteUfJSytsURDl4FxYwx2/o+0vBB6vS9ZKrKX9ToKZlXryMOb63PDEJi9qT
gy6u8qQ8TsHUfScl5jDH96bjfk4K9I4mZJYuoXxOxZaWO4+2MXmwsu+Eqbh1
UGeFvSfldSpmHftyoZnZluwLqFQY74t8unI15XcqPA3UknOZ8/eOxoinqUi+
PU6atZzyPBUbek4nVTD309fu+Kk40DFluasH5XsajrUtjUll5u/f3uVmmoZx
5zbOWjqX8j4NOlDk72Xy5H7vdN6ZhoDomON33Cj/09BqOjDIcZEALqIbhn7p
yOLE+eRBGuYEdlq4M8f/6B2O72lwrwuosHEhH9Lh7rTq9w8mv2733q5VOnqe
6F82dScv0qFetMbmAXP+2X0PMB3JcY1aEYvJj3SkVR4JNWTup72Ph3Swbx51
m+lBnqTjxYuRmwYsFOB6b7x3pyN2sbvSJmfyJQNLH5p0sJn76Ytn2ww8/lZl
PWIReZOB2R6HR79mPt8Xr4czYFKoP66/B/mTgQW1KrN7x0MUfxmo/9DvX8c6
8igDnypfmixZJRDFS/9MeE7m6desIp8yEfxeakfLZgH6lq99JpS31UzcsYO8
ykSE+z1rDrPe+paHfyYC8+Z9vXyA/MrEM8tNS/yZ9SmafpmQys62OHiAPMvE
gjpjL3dmPRX3Dq9UFnarKRSnHyLfsgCHZ/5vDgpwqO8KszB5jc6vdYfJuywE
1TxLXndcgIl9EzALA085CbSOk39ZGPvK4nrMWQGys/r+oNZxNb1/AHmYhf0f
VvnMY/bv6QvUbMTtXKuzMoB8zIYPJy3I76IAan0TOhuW/3bpDDtHXmaj9uG6
i/7nBUjue73KxrJCt4+/LpGf2Vg8IEKZfV2AbX0BnY01D98PHXGFPM3GJA+9
j2uZz/fF1YgcXCzPaI67Rr7moOVcx4eiUAH64mBxDk5f7ZY9EULe5qBiWPKF
HTcEEL1+5WDXX6Ux966Qvzm4EOXT/oi5PznRgkPgqq3G/S+QxzlQHtTs0M5s
902X0bnQ1i2LSDpHPudi0MJVOdeY++sbjhW52A/tdBwhr3MxtaswaBWTr6LX
s1y0H7bvp3iQ/M7FpV8lDbuZ/X2nq81ForfX3dQT5Hkent0OOKB1ntZ7HrpD
A7/6nibf8zAwdO4bxXO0/vPQtUbBQe0ceZ+Hpi+tx70vUR7kIadxoY7+KfI/
D5ZrT3tnBVA+5CE/usZ+eRD1gTxYXQ1dPucG5UUeIhW0Qodep36Qh6kj59t1
XKX8yIPrsFV7665RX8jDgnhP7qxrlCd5mJQbNebEFeoPeQgL+FQ08zLlSx7M
nqhG8m5Tn8iHkmREx/Qwypt8JN78dfLtHeoX+Th/pk1t8n3Kn3wEv4qR/xVD
fSMf5V6RMn/uUR7lY01Jg7L0Peof+Vj5mDU2IpjyKR/9PmrvartDfSQfCrkn
mr6GU17l4+nh4c9HBlM/yYdqc0LU+buUX/ngNY11sb9FfSUfjgNfLpe9QXmW
D1ufcU/drlJ/yYdassPupGDKt3z0T3U7nXOL+kwBM++/zPobRnlXAIUK+3Wy
j6jfFCDB8vKnUw8o/woglWXeZnmX+k4BHi+xKeKGUx4WwDOw/I5DGPWfAhx8
72k18hblYwH6vf/S8PcG9aECdFyp/TIrnPKyAB7H/JLi71E/KkBnVsTZqHuU
nwUIUO+RC4+kvlSAG0+UnZVCKU8LYH8/7rVlCPWnAlTkHeGfCKN8LUTq3sT6
kEjqU4XIsQ07f+IZ5W0h5mic1siOpn5ViJK/6aevPaT8LcTC3POTah5S3ypE
93TVkPxnlMeFiF1X2Ln2LfWvQugt3K9v8pHyuRAr/S9dzkigPlYIeRf5lM0f
KK8L0XOS/SY+kfpZIfgjCm7W51J+F8J1lHr9nTzqa4VQTMj8t6mU8rwQJ2VL
Sx0KqL8VQpUbv8OmgPK9CF+GRLu8KaY+V4SSkQ92LCihvC/CVs0r666WU78r
wvST/R+cKqL8L0JcZssehWLqe0UYy3K/NK+QPChC+Dhe1YB86n9FePK7xUYm
h3woQtfFWBWDJOqDRThxY4yHSxp5UQSNcdOUfiZQPyyCSlX3VeMk8qMICXa+
ph451BeLcNekxGNvOXlShKQ/a6+aFlN/LIJhkpOSax75UowRxuXc4Ezqk8W4
v+lziUEueVOMTFW5uMFF1C+LEX9+a+XNfPKnGJ6zh/udqqS+WYzF7yc+/11H
HhUjLHZ8tWQ99c9iaM749vJcDflUjFmtOaba1dRHi9Gh9S2CX0NeFeOxu228
P4v6aTFs+g3rDqsmv4pxefbHyJmF1FeL0fN0W6BdFXlWjJUs7T8SVdRfS/An
RdfZsYZ8K8HptqCJn6qpz5ZA5rH+5oll5F0JHjV9LthdTP22BNGDX+V6V5F/
JYjcuO93SB713RJslJdgjc8jD0twvyz02NoS6r/M9pYXR+JLyccSPPa75b2l
mPpwCYzj54d35ZGXJZDsOj3Fsor6cQlYtm9cOkrJzxJsibkpdbOI+nIJfpwf
WeRUSZ6WIPBJws7iWurPpXDkVftmFJGvpRjA/91woYb6dClqXaSzF1eRt6Uo
Ly25e6aC+nUpZg6ZyZ5eRP6W4onjffVNRdS3SzHtfLTCoSryuBSGC6KXzqqj
/l2Kd3bf5PawyOdSqM84PZldQn28FE62HZ8P1JLXpVA0HqEsXUL9vBQvTmYG
bs4jv0uxqdU/2raA+nopDp2tLF2YR56XYdncp2dvfiXPy/B5VrVnZgp5Xob5
J3N9crLI8zIs2bpI9kcFeV6GAxXfvz4oI8/LIDOpK/5DCXlehuOvJ6oqVJDn
ZchRmP5Nspk8L8OmC2MWvm0hz8vQ/nHM/u8s8rwMdVeVRu0TkOdlMLfwnHe0
nTwvQ8/ZqT8mt5PnZbi+Rf+mawt5zlxfZ66zVTN5XgaUS6WkcMjzckw4WPVw
XRt5Xo7FOZIjFZrI83LMu7f+0zcOeV6O5dbViSFC8rwcxd/tCzf1kOfl+G4k
o2rXTyj2vBw11+qSE6SEYs/LcUNvT5n8UKHY83IMXfzwW9EIodjzcvDuWy+2
UxGKPS9H14Kah3fHCMWel8N2ssaEceOFYs/LseqA+7M0daHY83L0VyqxdlET
ij1nrqfqQmSEjlDseTmia/ZJlZgIxZ5XIIpnaXPMWCj2vAKc+7I5LaZCsecV
iLb28lVj9os8r4BGo+zLcuZ4kecVOPqfQ4IT83mR58x2kK2sJPN5kecVOBD3
JUt9klDseQVOjdaWaLASij2vgMLT7bH7mW2R5xXY+/DvpVwLodjzCvTTVdiU
wuwXeV4BlxXfMiXshGLPKyAf+1QudoZQ7HkFdN5rGY6cIxR7XoHB/VtCA5yE
Ys8rIXlC9lOZuVDseSXk9KcnCMyEYs8rkTMwX8fFUij2vBIbfv2RDWfuT+R5
JULydszeYSAUe14JyyG31xdMFIo9r8SBAxMmpTPbIs8rEWt+w+2allDseSWu
LDxodldbKPa8ElMnNX3/oCEUe14JD5snh3yZ8RN5XokZgWt71jLjLfK8Eg6V
a2MDNYVizyvRqZkwbz6zLfK8Em1DF+0yZD4v8rwSyQZ2k37oCsWeV2Hx3Ki2
N8z3izyvgvyJ3YlRzPwSeV6FsXNeXaoeJxR7XoW9rjss+jHzR+R5FQy8U1/0
Y75P5HkVqpcviZzGHC/yvAq5wV+PJzHzV+R5FW75D9XvUhaKPa+Chd78fjEy
QrHnVWiteqqYKSkUe16F/M3FMXPlhGLPq3Djy5U7h5nPizyvwvmzVjbOzPlE
nlehOUVxlre0UOx5FRwtvIMcmPUl8rwK2yoj2BeZ40WeV2NHEuv0DOb8Is+r
sWZOgtQtVaHY82oMtLz3M5VZjyLPq9EvQEPlmJJQ7Hk12NxdU2Yx4yPyvBrC
wQt1nzHPR+R5NXJ7rmy1Yp63yPNqDDhWvLYfM74iz6vx9tT5+b7M/BB5Xg3H
sT8KDJj1IvK8GrEdHjunM8eLPK/GX2en+ZeYz4s8r0bqkefHQpnPizyvhtY+
+dlCI6HY82pEBebW3Wbmp8jzGshNCfn3kRlPkec1CNnu36XBzA+R5zV4vyIr
ajZzfSLPa9CjGJDdn5kfIs9r0PJx6o94PaHY8xoMn/fhpi+zX+R5DQbuCh7b
zewXeV4Dhe7BN3XGCsWe18D0xcEXdkw+iTxnvl8n6WgKs1/keQ0Uq4ZuzGTm
k8jzGox2PzdgF/N8RZ7XoEBaplOa2RbFcw32svqxFzDnE3leg6VBoTbzmONF
ntcgucxubz/meYk8r0Xj+uKh/sz6E3lei/ID0mYxhkKx57U4sfAY9z2z/kWe
1+IlL2ZnG/P8RJ7XYvus7p5K5v5Entfix6bR7mmjhWLPazHxmFXTd1mh2PNa
fGoqmPqImW8iz2vxbnj9ge2MByLPa+HitzRhEeOByPNaLGxPW+ozQCj2vBbz
PXb9/dRDntdif9WhqLKBQrHntbDZNSI4iZnfIs9rUX947psQBaHY8zpEBkhc
1h5G670OpalJ1fHM/BX5XodJh2Jazw+i9V+HZ91mdY8HC8Xe12Hi0Rljl8hT
HtTB7sAu593MehP5X4eT5iFV++QpH+oQAW7ADeb8oj5QB+GwWL+roykv6rC2
+8xjJ2b+ifpBHfYMu5wxRZ/yow7n3ivelGfGR9QX6rAkd1dBpx7lCXN82qSA
Kcx4ifpDHRbrvu5O16V8qcMKK08pRSafRX2iDoajFf1MLShv6iAd/XddHOOV
qF/UwaZTXU5hCuVPHbj5LzYkThOK+0Yd3vim2kXYUx7VYersCRmvrYXi/lGH
0GPrF2fMpHyqg0TJbKctjkJxH6nD+008mzM2lFd1EOT+bbnEHC/qJ3UYXnSu
fZw95VcdnBwV9tgwx4v6Sh1anR6nz3egPKtDQ2yPnzqzLeovdfBdHLmr3pny
rQ4y12M3b2auR9Rn6qFq8Hz+XyfKu3oEx10KHMkcL+o39XjZz5M7353yrx5d
Ntpv7BcLxX2nHgGDPmeFLqA8rMeOSztGazPfJ+o/9ej2MBv6fhHlYz22c2Oy
Kz2E4j5Uj+GLCx85L6O8rMc8d/frmSuE4n5Uj7YpCTs3rKD8rEezzKxN1l7U
l+rhlqI923w95Snzfd7rCwxXUH+qR+z7lHyFVZSv9RhVrJKy0pP6VD1OzXXx
qnSmvK3HQunIoG5X6lf1KJ2Skj7XkfK3HloupX4D3alv1WPzmUg9zZWUx/W4
7D3MSms59a96jNjx0qfai/K5HvL+pzbLbqQ+Vg8772I9482U18z2kB61Jxuo
n9VjoNWehfGbKL/rYbZwZJf3Rupr9fiwfsZ8nw2U5/UY98zZz3QN9bd65v2q
tl17MeU7C9dm5mfkr6A+x4K+/KF9r9wp71kw33le4tky6ncstFYuNchZSPnP
wgLp74sNHKnvsaDrya3wnk0esDDIMdYjaSb1Pxb4WncsNO3JBxZ6vlv+cLCm
PsjCSZXnrhkzyAsWXr7ZU5k5mfohCxp5jeaZRuQHC9d5vww0xlFfZCEu/IjE
+uHkCQvjLxSHlg+m/sjC5ZqnuSkDyBcWSmb8sNz6h34fYqHDljVlaTe9P7Kg
+NIn4VA/6pcsfC1aEh0+iPxhYYfm3QXF0tQ3WahIwaY1w8gjFv4L9xxxRZL6
JwtPDieFvvpF75vM9TZ/F/7+Qb8vseDwZF5VlwR5xRzPC2q4IEH9lIXyZ/fP
+/yi91EW1IyKHC900+9PLCzaP/fPs256P2Wh2ND3v7c99HtUAySPrzy3oIfe
VxtwqLRzkIEk9dkGcCzsvjlJk3cNkHmwYNIGaeq3DTDM3V4+Ror8awAqpyp7
DqW+2wBPt8Plq+TIwwYsdktRSFei/tuALp/Owu0q5CNzPTUm7Jjh1Icb0GBz
eL7WEPKyAf2dPKcGKlA/boB8ogZnqhL52YDvyey2HAXqyw1Q/ZMW7K9Gnjag
bKhrm9FY6s8NmPr0aL9/BuRrA7x+ub130qQ+3YA5X8dI83TI2wbYF3oUu0+h
ft2AFXuqFaZakL/M8Q9PnbW2pL7dgMCau7N9TcnjBgxs/u4bPoX6dwNGCJeY
HGY8EfncgKGXBoVa6lMfb0CAIZoPm5PXDVjZznoxzpz6eQMeTfTdct2Y/G7A
rDWCwjX61NcboHOsJnq6HnneiPfK4Z+y/tffG3Fk2W45D13yvBE3PmwxXz+K
PG/EqUU79AaPJs8bcS3syZjHo8jzRty+Wvvtmyp53oi2zhddmmPJ80bMWOBT
0bseRZ43wnz8nonLlcjzRsh9mbXtkyJ53gi/HoMv9fLkeSNasID/XZI8bwQ3
rkP27QjyvBGnZ2WMWKZKnjei2uKf2gNV8rwRNkF33qROJM+Z+z1z5tkEHfK8
Eaw9rgeWa5Pnjch/Ej1tsiZ53oiukvVe+RPJc+b6g3yP6RiQ543ofy+b3apN
njfCc5Sbn4kRed6I5bKWwXxd8rwRa/zLbxzRJ88bUf/h5ttr5uR5I0xcO/rd
MCLPG/F9E/v0TAPyvBG5y9U2zTMnzxvBWWGxqMeaPG/ErSEPn3VPI88b0fPZ
YU2CNXnehEPqyot+TiHPm+B5oE32nyl53gQju61K/fXJ8yZY/mjXvG1Injeh
rqDi37DJ5HkTLv1ocFxjQZ43IbfzbkyQOXnOfJ9ZeuI7I/K8CTr2B1V8jcjz
JvgpsdZsNCbPm+Dbb+KVCiPyvAnjvJ0CDEzI8yZUTG+0szAjz5vQpRb0T92I
PG/CtitLVgfrkOdNiJvYHHxcnzxvws5yefXv5uR5E9w/dAsHTCLPm6DQs6ch
VJc8b8Le0jMhw3XJ8ybkrJn866cGed6EyM5AK8ux5HkTsicvK5FVJc+bwH06
46XzRPKcud9N0drluuR5Ex6pS54z0yHPm3D90sJdeRbkeRMGl260SjEnz5tw
bFHBsEfTyPMmGFrf5TrYkOdNmKafkb14JnnOhruBwIQzkzxnY+PaCG78bPKc
jZtv35qp2ZPnbOicWDFs7VTynI3g5e62qZbkORuzUjc8KTUhz9nQVild9v1/
v+ewUXaSXaqlQ56zMbI94HrpOPKcDatRV98eGUOes8G+l//sxgTynI2//fWD
HUeT52x4oqLMV4k8Z6M0qWHU/YnkORvlkxWyDczIczY2cRNaIozIczYufZzb
pGtKvw+xMb1xwZzdevT+yMbQ6W4xnZrkORsqcRn5Ew3JczZ2GWgs0tUiz9mY
NPj6YbMJ5DkbLw5Mzr9jQp6z4f0ie/gtc3rfZMNVy5U3xJR+X2LjhsUl7602
5Dkbcob9AqStyXM29MZq+0+eQu+jbKgvuq2hO4t+f2IjMWhlZbMlvZ+yoRq+
e5K5Cf0e1QzrntKnDqb0vtqM7sKon7f1yPNmRGYa7Fv0v/fXZhhNVwy8rEee
N0Nr6cfNmrbkObNfP+j2ITPyvJl5//KZ5G9KnjeDlWZk+cuWPG9G07Imw/PT
yXPm++8fXPtoCnneDE2z7uS6KeQ5cz0hGlOrZpDnzeh/pzrX1ow8b0agymrz
YD3yvBk71CKkpA3J82bIvEs6UqRHnjfDIlU3QkGLPG/GsK6Xf3lq5HkzCrax
ZkwdSZ43I/0ujI+NJs+bkTViGP+zGnnejFiZdbteKZLnzXh3qbBDSY08b8bC
xAket1XI82aErDPsejOQPGeeR+M2OzcJ8rwZ8dtsxs0YQp43w9Ax3FNdhTxv
xuXhjw7+ViHPm6FeFfR6xTjyvBl6Fd5/pVTJ8xaYZiz6vUuDPG/Bhhgpidc6
5HkLzu6V+7xKkzxvQTXrwXxrTfK8Bbfl4gvUxpLnLVjhZqX9Yzx53gLVI4r8
Ek3yvAX1fAvdoQbkeQvOu+Q7h2iT5y3oEijNOKNBnregI+35uyQd8rwFs579
jRKqkOct+OFyRjldjTxvwReZOxVB48lz5n50pxgFaJPnLahSkzJcpEaetyDQ
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
      "]]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.002777777777777778], Thickness[0.004], LineBox[CompressedData["
1:eJxV22dUE9vfBWARQeyKHUHF3hsqWDd2UEHBitcudqWIIDaaYkHEriCKBUUE
URCR3puASO8toSRAQibBDqLvQOb3X+v1y12zkkxm5pyznz1MruZec+P9nTt1
6tSg2KlT+3///z8p/ryW5RrsXQ/D3AlaGxoZbns3mo+lPf3CY9BidyTq5J1D
KOn9b8E6Eb1uAR899wlLvzE4O+DtKv6Zk5g+wi7ociO93xaW4+dV96xncLph
3EyVN+dwYvg33ZH59HkHqCZ0OqJeyWBB1brrD8yc8OvXuLy2ItrfRbgNln2x
Zz8fod+z8+TLlzD77JZTnSW0/yvYuG/cuAcVDOZ9+GQT88QFcaH5X/J/0fe5
okV/n4J6C4Ow4c4iozA3qGp/1x7clc73Juqka3P7K0vxKGlk4IlDtzB6r0Pr
vr5S7nhuQ8lbdjmppxRlvzu+EGXKNiOMu0u547uLuQjjL2e3h02vGKPseA+L
l3weMZTdn/x472N57t5M61YG20w79og+jYoLipSk3PG7423h/edD2ev/0KPj
H6a/Usk98pXO5yH6/D3/tVczg5IvPzfUvPTE1dP7tBSFdH6PcL6n16huYgZD
u2zuPfX9Y2gmX0l4ztD5emG7+/Ckg+z7t8p3iL7eNq/vVtP1f4piYVT2Nj6D
tdpXl+yue4rgoytHWv1luOvxDIucjA//YK+n2Kh9j8+wcFB1r4JmGq/niCof
eHAje7zXjglbX8uew7VbN4tR7PfLr5c3HEQ3KjzY8598eRB7Ct7oMsV20tJu
dP1eoP5kekULu7+MZys+fm17gaBdq4YasfNBfj1fwmvY+J+vcxm0X60hXXzg
Wl1wRbuS5oMP3J6oXLUTMOhe5G2xqPsrbA5+ZF4gpuv9CjmtShcmtTHwaz/d
vr642DppZNj/rr8vdhsYpmmyx7e6fXeDXuO2WHv5WSUaj9cod+0/doiKFB2X
W90Pigk/Vk/7Q+Pjh6ueZ+92YudX+9XLHuWPPnuP3Oj8h8bLH0UO32SB7PbE
7TcSvk94A3WN8wbazTR+bxC9I/7d8TIGaeze1KYHIDzRVij833gGwCXugdLi
QgaHbjWdw5y38H0f/lxHSuP7Fhr9nPg5TQzYg2NP+R2U2oy0Vn2n8X4HPang
1XJ2PDeyk4cdUsR1PWKzvZXGPxCZsgHxndj1/IK9ekXegVCbdfTyyH80HwKR
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
EyrufiLPq2C6rXCrcj55XoWFgf0dm2vJcx4uq8xssWik9c7D8vdDjDs1k+88
nNRVHi39Qeufh7pJS9Y3dZJy3vNQ2fJOS/SN8oCH/EHuGy0ayH8epvS0/tjY
WcrlAw9Fl4467Wa35X2Ah7RTnb+2P5+U5wUPewfuuOCnSM97eHgR4RW9po3y
g4eewhVNp/5QX+Bh+/ChDrk/KU94MJjnVm7XTP2BB03XM7zE35QvPMgGGN6v
/UZ9gocdfOmTPBnlDQ/+pxVf7Vam50s8pD7MjnHtI+Xyh4dXZcrWXZWkXN/g
oc9xT6+v7LY8j3h4sinA9WoPKdc/eMjI3xxto0TP53jwHtt6OERByvURHhYN
urbgMXs95HnFw9+zfm4W7La8n/AQf0H81JG9PvL84mHe9o35iuzxyPsK+3nX
k7qm/aRcnvFQHDa1a213KddfeFAZsXHErK70PJAHL5Wt6fXs+cn7DB8LClX/
+feUcnnHx+O8SsSy+5P3Gz7eHPVP+9tLyuUfH71+F/XfxR6PvO/wwRv0OMmR
PR55HvLxXvHYifbjlfcfPjJn61k6dqbnj3w0LT3Hr+8m5foQH+VHV6mXst8v
z0s+TJ66uG0ZRM/r+Bi7R9+KGSzl8pOPdXv2buw6gn7vwMfIWcfKSoZLuTzl
45Cdl6P2GCnXn/hoa51w1nMUPe/kw9c0e23WOCnXp/jIK/9m0aIp5fKWD+eu
ShfGatLzQT677jcM+jxEyuUvH09Sxbf+DZRyfYuPL/Em3Waw75fnMR+1Vxbo
nNSScv2Lj6oJze458+j5Kns8t4bsSICU62N8rJ8y4MBzYymX13y8PlQwdMY6
KdfP+LBxzPG9vUnK5Tc7Ht/tLt/+T8r1NT5ezX9opHVMyuU5H0fL7x0ZZSnl
+hsf6Xoz7+icpue51WipdJ3y3FnK9blqXDFJWr3TVsrlfTW62DzfP+A8/V6A
fV3pPhovSrn8r4ae954jmpelXN+rRq/bFYanr0o5D6qhLTKPXOkk5fpfNY6P
aO005AI9P66GoWP+9CHs5+V9sBppaeIHaQ5SzotqTPSYa7vfXsr1w2r8Sj7r
cIjdlvtRjb8myrmbren3LdUIYcI9xrHHL/ekGt4SW8Uz7Ovy/liNtZ+69bx5
ip5XV+Nu56VHvtlIuT5ZDYN+IrUeFlLOm2pcHaF66dkper5bjTeWC32Wmkk5
f6pRVsWoFbHvl/fNanxE9bfAo1LOo2os0S0aLjwh5fpnNRRcHk0WHKHn4+z3
1QttDxyXcn20Gs9few3IYMdP7lU1VP6kHI4+QM+TqzFl7LoNXdhtuV/VCKpR
VN+zX8r11WoMcBg+IWC3lPOsGhFnZiQmsfND3l9rsGT/K+0qQ3oeX4OKd7Hb
3upJuT5bA8OWDzN2L5Vy3tXg2HvTVRqrpFy/rcFEhfLlh1ZIOf9qkOnC29Vv
tpTruzUYf2DpKuM5Us7DGig5J81qY/cn77/s9/cw8lFeQM//azA8p+7MrPlS
rg/XoLeiU19/HSnnZQ0+nTEz11ws5fpxDYpbq8qWse+X+1mDn6FSr6i59Hum
GpjznmzNYLflntbAe7r398Xs+pP35xpMOv9Beb0W/d6gBhd07qXPnSXl+nQN
Wqa+XziTPR+5tzW406bx58kMKdeva/DRKrx/G/t5ub81+Po903Eme7zyvl2D
tKyncb+0pZzHNTD9N3OGP3u88v5dg+oQ1+DVq+j3DTVwdQs5cme1lOvjNXhy
zzOjjF3vcq/Z/WsnzHbUl3L9vAbHu47vXrtRyvldg9/G+hG/2PGV9/UaBP4w
m3mdHX+557Vwurngz749Us7zWvzRsrysu5d+T1ELP/GiEh92/ss9r8W2J6nC
lUfI81qYaujGGLLzS+55LbwXviq8x27LPa9FYXTBZOsD5Hkt6oV34xhT8rwW
ypXD+jbvIM9rMbTlxuILxuR5LaSXCv+rYs9X7nkt/HcGB13cSr9nq8UI68DE
+vVSzvNaTFJss9dlPy/3vBahTwP1NxvS769qYTnGWFvAXg+557UwP+ixYgN7
PeSe16Jq+Sv+wt3keS2KDJT5SgfI81oMXDlozGAL8rwWv40MT3rakOe12Hku
dmLf0+R5LZx3C6MfnCXPa5E32mnwUhvyvBbRP2f5Z5iS5+x46HjbW+8nz2ux
J3XNjLaD5HktFAcfM7l0hDyvxSVhwuw/x8hzdjxu/Xi21II8r8XmWSUjVp0l
z2uxL6HaV+00eV6HxGsuecXm5HkdDu1eNMLaljyvwwg/D7Pb58jzOqi0JI4d
Y0me18E03O+m1lHyvA6uE8Z42duQ53WA4I2TwWXyvA6Ts2d9W+JIntchIF1f
JdiRPK/DsecKpX6nyPM6pO+bfOKIHXleB0VB9lzBOfK8DhZrF+iOsifP67C+
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
      "]]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.002777777777777778], Thickness[0.004], 
     LineBox[CompressedData["
1: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
CqeelEdxWJQjqRCy62+73Kw42GY/sdysSfkUh9XcqI1v2Ptth9OOR/dhxQ+n
a1BexWPm5yc1Lux+tcWRezyMPfwSP/2RKPIrHiuff8/isPUvrw/x6HpsWoKZ
OuVZPHKbH/4wZ/OvLQ4K45FspWSwW4XyLR5Tkp9+GcHyZ29b4HxCyy7HHSZ1
EkXefcLuBSf5fmw+m7ctoE+YfDhr59wm6mufMMBN3yZTKkFmW734BKVRhV8n
KVEefsIwO8fvWixvdrQuh/JPOCvN9HykQvn4CSFNyw5dZ9fXu3U6GydAa/p7
rlcnyssE6JzYMymbXV9S6/RblIC8gD6i1jyV52cCvkWtVcNfCTa2BWQCDJbN
/jZdmfI0AUP3rZdZsdc92hZ8AsYc0c2QsPGT52siriwN6jKQvd92eqaJGLOz
QPOPKuVtIk5dCtzVmb2/ou1fImL67rjL1aD8TcTnfYVOtWy+tpYnlrBQzXNO
dNClPE6EtLO60TO2HlrT0U+YCLX6wn2jtSifk7A3Zex/x1mf9Gk7YBLqvGRv
ZKxvyPM6CevjthefZd53aAuoJPi/Snta9K+fJKFgnjbvKusfrXej+5MkfHof
dTTVnPI8CVM17YXqrH+2tTtJEh6KrX3O/uszyZgYzV0+iK2vltblZpeMtzqb
k0L0Ke+TIeg/XXUuu577rdN5SzJCj0XP5mtR/icj38HwxGw236bLLxjcDT/d
nZk3cg+S8d/Ptac7f5PgR+vt+J4M10Bh12HstdyHFAx97dn8hj0P3Gy93OEp
sG/ucXONRKLwIgV/swy6mv6UMFdbBzAF+/uvX/iyWqLwIwXJju7vXVn+itt4
SEFcu+/brb9KFJ6k4Nz1x+fM2Plcao335hR49PMTeLH5K/clFUMv6BifYPen
LZ7HpuK9jTBR+s+bVMxrjHM5zsavLV4DUhF6UWIzwpD8SYVI7fqBrmw85fGX
ipZ7B1VUDcmjVPg5qbwQsDxoixflz2hvajR2T0/y6TNaEpLOdWf+tS3f8Z8R
PoGTWdCRvPqMLpfHr9Bl87FteRz6jNJvocVB7civz5h7rMPV8ex5Sz79PqPf
3JeDEzkShWef0Yvf18O+QoL81turngan4/dVp6VIFL6lwb63xyxN9v6etjNM
Q1T/bq++p0sU3qVBvKFQZe4rCfq3TcA0uP+cNsg/lvxLg7lFpOHJDAnS09r+
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
GN0LU/KLJ5DnxUje3PBx0QTyvBgP3w0RT/rneTEcmyer5o0iz0tQFJdWnu9I
npdAcsXQb58zeV6CM29tTqcNJ89LMNhYa8fnYeR5CVK9huwSjiDPSzB/TGez
5MnkeQl6Ky/P4jiR5yWwjH5VmzaRPC/B79iIoNHO5HkJdLqe07noQp6XYKfx
JqWcf56XYPTGs/xWX+Sel2Cc1t7x24aR5yVYPdbxypih5HkJuoYcn9Z1CHle
iiX71N50AnleCu2dHXPVHMjzUtxRab/sC8jzUnzZ876c40Kel6LLib4z1b3J
81LUjeJv/+FFnpfCpVbby3MueV6KnIp5U6PmkOel+Fvt0LxxHnleisHhz6IN
fMjzUoz2XXdvz2zyvBR9Bp0wjFpInpfiXp3YJ2AueV6KB97m/E0LyfNSmA1W
84j3JM9L4TBZ7XzBMvK8DI2n27nlLCXPy1DzdrfxhFXkeRl+fw7t+HAleV6G
8+8NGy3WkedlaLnq09FtC3lehh0jhv3120Kel+H9uM7XpGvI8zI82nAwI3gp
eV6GP5LQK2qLyfMyDF0yY+ybZeR5GbwSHRK7ryLPy+Cz4FLYgU3keRkyOPpT
Xm8jz9nxtzb2HrqdPC/DEjvLnmt2kudliD7gFn91E3lejr1+1r76O8nzcjg3
hs5atZ08L0fT6mHVGzaT5+X4cKr31i/ryPNyXHxWcN5+BXlejlXfBg3yX0ee
l6Mwcv+T6BXkeTn6L/3Q9e5a8rwcdvlfk0+uI8/LEfHa66r3evK8HGEWF1du
2USel8PaemVawA7yvBy9h9wfZr+bPC+HsqDAKcyfPC9H1WrhHasD5HkF8geM
GXc0kDyvQLn+ggHL/MjzCkyBTczQ3eR5BTYOGtypbid5XgHDajuXzADyvAJP
tVbPtdtHnlfgjH1ZSUYQeV6Bgq0Tz906R55XIGnbnu0HL5HnFbB7PEd53AXy
vAKVThlnfp8nzyvwzaJDUdFF8rwC7mXVAuUr5HkF3twYZOt4gzxn56dR6dj5
EXlegctjx6YsuEmeVyLYbnFuwD3yvBJF4V+7x4eT55XQW5hft/cxeV6JKYnL
/H8/Js8r8fq58/QeL8jzSlhFWyTaviTPK5HR26Rf9TPyvBKy7hx7q3DyvBL2
WxPwI4Q8r8RmDb0/UQ/I80pc01FdkRpBnldi54ZHpTPfkeeVuJibsNArhTyv
RMM102L7BPK8Er3DErViU8jzKhwJWHV4UCyt9ypsC/q19WEs+V6FLTsHvNqc
QOu/CtKPO861jyXvq2CcLnMKTqQ8qMItzzHHXBPI/yrM29n3SfVnyocq2HWu
UCrPoD5QhY+/L+tML6S8qEKZz/VC/2zqB1Xw0fzxU5hJ+VGF6dmbLoWXUF+o
QmXMjOGpaZQnVYjK87UekU79oQpzr+T0fV9K+VKFiD6HjlsWUZ+ogn9TepA0
j/KmCht6zmufmUP9ogqypMn6XmmUP1WIvaLkqRtHfaMKVZrPfxunUB6x8Qh9
ev7eZ+ofVXC/dtdwQRHlUxWcNtxYsk1IfaQK+0ti0lcJKK+qkGoaEGpcSv2k
Cj8gXTM0n/KrCiOEX588iKO+UgWtWyXFKsmUZ1UosLS83jmR+ksVDKyWPuAl
Ub5V4dfRpg8306nPVOOps++4fp8p76qhFrJALbmE+k01rt/q11FYRPlXDXfr
PWafSqjvVCPOMK1qbhHlYTXWP++/JCqb+k81xtTH7+YmUD5WY8TuQT8nvqc+
VI35J7W76X6gvKzGN4PRMcUfqR9Vw/fAiwLHZMrPasTs2Jm/LY36UjXyjyRP
XFJIeVqNtIKim6GV1J+qcXLA+HHWHMrXauiuMfbVLaM+VQ170eSIP9WUt9Xo
cNfJuZRD/aoa2dYXjwoqKX+r0c9gouO8Kupb1dDcZjbmCp/yuBoXh2T0r+ZR
/6rG/gfdF+0WUj5Xoxe30XFOJfWxakjcZnwNL6O8rsaUnW4TJxZTP6vGtQsF
o3xLKL/Z8Y58vHW6mvpaNV5Fj/DOFFKes+ON2PJsRQ31N3b+d1YFSHiU7xyY
BOh/1RZQn+NgucrDOcuaKO85WH/d/dfe79TvOJh36ucc49+U/xzYrO6zYM8f
6nscfLE85Z/xmzzgIKR9VW23n9T/ONCK4k+aJyYfOHCanmrkV099kP2+aXBa
kYy84GDV2qQJ4TLqhxw8Kux/2+c7+cGBxq/peq3nJ++LHGyLuWez4zt5wsHJ
RyE3ZX+oP3LwLC0i2/g7+cJBiY6aakoz9UkOHNS5J3XbyRTecFC623hQTQeZ
ol9ysNPEzjGvs0zhDwcbt2u/aH0t75scTE1/WrJdTabwiIP3/k3ux/5S/+Tg
wuuzK4d1lCl84qBmS8WdS7+pj3Iw6qq5OL69TOEVB891O72K/0P9lIOzR8NL
7/wmvziI2/TVJ0pZpuir7H65C6Xjv5NnHFjfkxyL/UH9lQtfkymHqtjx5b5x
EfLU30/Grk/eZ7l4fei9rFxDpvCOC9G5SqMgdZmi33JRncOf5MFey/3jgrsj
cVocey3vu1yMDBlieJa9lnvIRc244Z1T2PHk/ZcLm6s2zXe6yxQ+cjHx6iOJ
q5FM0Ye5GBtYP7bAUKbwkovTN4b5N/aRKfoxF4d8R9w5ZSFT+MnF2vdOhQts
ZIq+zMWa9kF9DQbKFJ5ykZp591qRpUzRn7kwvbv1028TmcJXLt51W/0zhx1P
3qe5cJn7vtPBQTKFt1yk+7YLSzeVKfo1F0pnnv4ebSVT+MuFq8z1zig7maJv
c+G4fPmqC/YyhcdcPP12psZxgkzRv9n4+Yx6fHqsTOEzF5O9Uxc/HSNT9HEu
gmZ0ujCZfb7cay6G8gKCROx48n7Oxcp5W/TPDJEp/OYibsfW0qjRMkVf56JH
+vZPI8bJFJ7zEHb0nsMdZ5nCcx6e/xLZFDjKFJ7zML/Sdsz8qTKF5zx4LhEb
PJsuU3jOw8Yis1QnF5nCcx6uPty/eyl7LfecB70j1x3Hsd+Xe86DRp4ab+U0
mcJzHnZsUNaRsuPJPefhhtZsaZeJMoXnPFxIDYp9ys5H7jkPjwxijMLZeMk9
56E7R29KlptM4TkPZsFO6xfPkik856EhX1gUO1um8JyHscqzA2SLZArPeTBK
5fp08ZEpPOehz4tePTxWyBSes/NJSI8xWi1TeM5DrO3Up49XyRSe8zDa2ydg
wQKZwnMeBnyedPy1l0zhOXud5tLynL2We87D5cO7WoTsfOSe8xCwcXLsbfa+
3HMe+pvOcslwlyk85+HFqnlcdzZecs95eCzwvxo8Q6bwnAdHwfJwN3Y8uec8
rEz483ceey33nIfefPOlknkyhec89NpV2XKffZ7ccz7+7LhVmM/GW+45H0bF
Jdsz2XjKPecjrNn8Xif2eXLP+Zitsd+uj7dM4Tkf/MEnd5vNkSk858N05fS7
FktkCs/56Cd4JjVh4yv3nI8p0+NnT2bzQ+45H6VqP4Ps2P2Ve87HrF0vRWaj
ZArP+Qi/vGyz1nCZwnM+Il3Mfh2BTOE5HwubTZzPO8gUnvOx4P7djSFsPcg9
5+OdeeDGPex9ued8dFh6ZexMtj7knvMx/l6qsNFWpvCcjzWDzm8UDJMpPOcj
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
RUelMg==
      "]]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.002777777777777778], Thickness[0.004], LineBox[CompressedData["
1:eJxV2ndcTv//P/AS6W1mlB1lZpPsPFBkZCUjM0XIzGpIQkPKSkIiM5UdURGV
tEN719W+urqu61woI+v7qnOen9/t1z/v27md65zzOq/xuD9f70Pbco/pllZK
Skp1KkpKzf/9//8U+B3yOXOR5VKYO3bNePGXE44t0PbSy1bj2ijQ5Gzz+sCF
bThkzfnd/kzn9+LGzd8n5zdxONz9kXG54wEsXhnXo66BE35vj/Nx2vPnfufg
UDdknNoDJ8QemO0jbqDrXVBdqx8wg91vWtmS05d2H8e00ebPVD7T/Vzhbii1
aJJxiJrfodUID3cYOI8e9UmJ2nMSHxOmVVz4yWHK86RDbwJPYZJo+WG3r/Q8
b/z2y56kI+UQoeVWvyziDOra3btg8ZOefw4qV232vFVVICB+wJN9286j+PuM
vjM6K4T2+CBJVX9pty4KFP1seSBM5kav0mK/59vnC037z3fClRXoM6ZkkOqx
i1h0rlCv6i+11w9bI5Yqr//GYc3mljvCSqOzfaoytf8yFmwOetheRQH/Ky1/
2Lvh/YT57Dz/Pv6wHLBdR4cdF3z4vrzy7lWY/jXu9JEd8+8XgMu3pxnNYP3f
q/XKTqPCrkHD/1VA1A963+tIDFbM1mbHq/kborf2CEnS/8b3Bo5F69ZasPuZ
TPKcZVF9A3fqUnv3+o/64yZeBHT8E9hWAemy5jvexN8dhkY5KtQ/tzB7cHLj
cdY/Xjtrf4V8vgWrxoAJIR2ov27D3+pd38auCozw0GSvcBvqN3e0nt2D+u8O
lrbKtq1TVyD15pwXX//cgXKU2bLGztSfdzHv54IdBd0UaO6tnq2DsDdx32x1
bYXQv0HI7zfpcAcNBdrl3d5r0O4eNMYEhbzqqBD6+x4m+D+wu9lPgdDm11UP
RqDaCfEWHer/YNxYZh1R2leBBc230wxBkLnJ0969aTxCUKEcOzS3lwIt3d03
FAMG53YPUafxCcVth4R+wax9zb33Sec+rg75MWivKo3XfVRlVjleYf2nu+5s
XOOwB+iQOHnB1Saanw8QeXqlzgp2nMzu1nvMQ1xLuPUn9BeN50N8Sbz9eoma
AtvOy5yg/wgjijd0TG2tEMb3EWacsqxuYOuLNY698mPUmuztGMTGhx/vx3hu
dfj+NwUHMzZ52JBCPfro6scKGv8nuL9u22ofCYc7rPfybj+BV6/CzodrOGE+
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
XIGvavP137H5/H8N7zbk
      "]]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.002777777777777778], Thickness[0.004], LineBox[CompressedData["
1:eJxV13dYjf//B/CsZI9SyIzKShRC9ES2VESyi5QRQihklszs0KdUEi0NWkip
aJH2XqfOqbM6KyNk/O465/W9rl//dN3XubvP+36P5+PZ2B0H1+7qqqSkxO+m
pNTx+///SPE7TFa0eoclQgcGu5/qSte2mFw9dfjFnlL8Or032eXOblzP3Bw3
pCd97gxbw7ki1d8SnFSLWtZwwgX9pz7xr+dLFPe7wq91zOK4Ignc+DrTVSJP
Yb3TavFI5nP5359Fzolh9v3rJTCut7h+/8B58OySzHRY9DwPHL3s2CVZIMHr
FX27Tva6iKTe2zfe6E7juQTLn/qvWL2kmBOXfSwl4ApaRf3PH1CRKr7vGiqM
VO7GD5QiaZSncE2SN0wKAk+PV6Xx38RSV27RfGUp/N6PiTm8+xbKS0OLf/eR
KsZzG6+K2iJ/MfdX/+z8Qpw58TGWpSFVjO8uVHXM339grjX1a8crn7uHxaqz
L7RpShXj9cHUCffyNqlLscm+84no/u1kygU1Gv8DaGx0CTQeJIXvw84fdB+t
c9pgAL2PL4ZcyePHDJWi8nObFTvkP3iuHquXrUHv54fAf4eEglFSDOtu3V/v
hT80UnSa4sfS+z5CodXN1qFaUtjIH4hI971u6br0/oGYNt3ndaa2FGZGlxfa
NgVi9BvzGMNpNB9BmHhNN2v9FCla1nQ8MQhPJr0aYDKZ5ucxLlX2jXWfKMVV
J257mOwxjreqa/tp0HwFYwO7bR5rtBSTvdSZVwhGW0jEeA1tmr8neKmne+82
M96PQUsSvvx5AkEE+2v4eJrPENiZD+V/GSNFx2wN7f4U5vcyvdep0/w+hZvr
ZNN3zPv3Lg92nt/7GXrH2A8P0qT5foaMVY2PjJnr8I7XHRiKnveyw/2G0fyH
wslx9+Yr/aRY2fE49TBcsrKxFPWm9QiDwwq3nE/M+ndO94hw/BpZ23erGq1P
OHz3P9r0nnl+x+wVaEVg9bbFKk+G03pFYEmY7OfjkVJM3HIj/duESHwcNMMm
ZwitXyTmLV3WZ+JgKXKYpw3Xf47NxTHQH0zr+Rx2FUnaU5n3231LdAozoxDy
7nwzV4vWNwoxccPc9o2Tghkc88rR2BAa1qg2kdY7GoMmL/3lpC/FOmbzMEuK
Vt+AQ2Wzaf1jwB5yscu0uVI8YWavPDgGeeaHVvyZT/shBlzb6PKFzP1f/5S4
8nVicW2C+qhlU2l/xGL10N6DBzH7YXHnBohF+BurkOP/2y+xiFWt33ljghTM
4nW8EGZfWGfqqkX75wXKBhZEd2X2i3x4LzB+r93NXmq0n16gb5mZ2Ic5v4ad
Py/xsHvKs6zBtL9eYo+T83RjZj4vvMtldtBLPN207dPp3rTfXkLN6rL0NZNv
xczqM3OCaPumRXMElC9xeO56+bGNVIJxnQ+MQ5SLZt0s5nP5foyDaaDdJcfv
EhzpXIB4pJ0KGHBOLFHsz3iMNPi0/EidBBnfJjArHI+3s07F9quUKPZrAi5x
PdpK/kgwWD5ACLx6sosllGcJmNS+K1/tpwSdo8tOwAtv/3grjkSxnxPh3ics
sSeTry/8Jc8yVyWCtWbB5W29aX8nQmytd1bURYqunS+ciAEvVNfO7UP7PQlr
f497XMXk4Vr5hoFq/49LRvag/Z+EIXOu9ljI7P/HHa9bkoR/o/RG/FCh8/AK
rc88pt9k8qm143E2r1CSV/352lA6H6+Qsf9iSyCzvxd1bP/qV9B+vW/JWz06
L68x807mDntDKTq377bX+DMo7Z2rPp2f18icKOmjx9zfcKJjQV5j37bWk5en
0Hl6g/oydU7CJCmmd27wNzi+geu+SJvO1xtUaxq8yWTy49w9U2bLvMGFvbV7
R2vTeUvGzqWTBo9g8qNQq3OBMX5SkGnuZDp/yVjL0SuxNpBibEf6i5LRw3XF
xd5T6Ty+xfVwafxBZryHOo6H81t4X8rfKppF5/MtjrPPzV8zU4q0jtX98hZb
fu0bc3gxndcUvFHtvfCcqRQD5QcSh/rviDFdRec3BaMcXDy2r5eic/p+pkBr
wToPwSY6z6nYtsc3qdt2KTqHdyoVM2qPvrXeSOc7FdsN1+0PWSeF3PF3uD9g
/8siMzrv7xD/oc/+9dukCM1cxZzod9BK15y6wJHO/zucti858nu/FJbMaWT2
KGzHvlDPPkp58A7GcBpwyEmKHx36vH+HvuNmqMYdoXx4B5Mdu9vm7pUicHjH
gUjDapuryzL3UF6kYbayx5beu6VY3rnAaWioHXXQwpnyIw17Jp+czT4mhfRZ
xwDT0IVlPC30MOVJGm7MPPvRhfn8QcfoctPgunjx5GY3ypc0zHOf8uzfASk6
NteKvumY+FdZevQI5U06DLQyfy1j3qcjTYpWp+N+l2VLvrpR/qTj6Ev7S5EX
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
5lgpTZMpPK/EP+lgaw3m/eSeV+JLnE5Wf+Z95J4z48sOOH+ZeR+555V43u1o
mRNzLQeuCtaarwWTmf0n97wKh0Oqm62Z/Sz3vAom9l5b2wfJFJ5XQTtGp0iZ
+Xu551UYJ7Af2Y1ZL7nnVfg8+sOX/cz6yz2vQriNVfvwuTKF51WYce5x5EJm
/HLPq6DHif3mxNwv97wKys6On2bPlyk8r4KbcFv5lHkyhedV2LSDfyKX+Vzu
eRXCxq19l8pcyz2vgrd4uffpZTKF51VoDHbp2Zv5e7nn1bg/8de6ccx45J5X
QzgtTziFuZZ7Xo1da5FybZZM4Xk1LM6taUk1kSk8r0aOc60wjvk+uefV+PNI
UJDCPF/uOXPdk63hy6yv3PNqnPZv19tlJFN4Xg3TrR5BYcy13PNqDLwZNfz6
EpnC82q4G7nmrYRM4Xk1pl1vf3B4sUzhOTPeuqu2Acz+kMdVNRpWDJ43kdkf
cs+rsW3lvRt3mefLPa9GdeBhndvTZQrPa7A8jxUWwpx3uec1+Fv/s/tr5n65
5zV4ean/uXnMfpR7XoPz80vjUpj75Z7XoL2i31EfJr/knteg8LyzhydzPuSe
18B8c2IKlzmfcs9rmH5imeaoJlN4XgNe9UWtZuZa7nkNxnWzLOrKnF+55zU4
2c823FtdpvC8BtKeZyZEMfks97wGv3LDf+zqLVN4XgPfv8sn3OslU3heA91L
CcrLmXyXe16DOj0tXzNm/8o9r0XmyZPhFQNlCs9rUdJntp5uP5nC81p8KVxr
fZ55vtzzWowO1Ti0p49M4XktskckHfnK3C/3vBYvRz65LWXyRu55LQ4EnunH
GiJTeF4LlVHe7nOZ58k9r0XEu6j9Mcy13PNa5D7lfAllvJF7XoukiNAebcz4
5Z7XYqC22uR8Zvxyz2tRpLyvciYzP3LPazG1cNQVQ8Ynuee1iLrn6qvEnE+5
53WwPuz62YhZH7nndShI/+B1gclTued1jIvlWznM+Zd7XofuqSsc/jG+yT2v
g/Z7wzsbmTyRe16HZVOKWe3MfpN7XofNZosvDZkhU3heh52WOju3MOdZ7nkd
VAzVx2xnruWe1+HzhiVfkpi8kHteB+/Z/yIyGS/lntchzf/LFqeRMoXnddhf
rMyPZMYvj+c6BPBmeOXqkud1OF098WfCOPK8Dq9V/07YqU2e12PrHN2MGTPJ
83r0uTLVbuVs8rweWuNqln00Js/rYffC1XrZEvK8Hp9YakouK8nzepyZUTha
ey15Xg+jaz03564mz+uRMd9UzWM9eV4Pr2jTsWetyfN6/JLUThJvJs/rcdA7
JW3eJvK8Htfdqw1LNpDn9fi26eCpuevI83psnqH7cb45eV4P15cz15atJc9Z
CHEb4z/Vgs47C+f+8EQDzMl3FrRChg6evoHOPwvjDe4Y3VlD3rPgFeyh+3It
5QELh7aNz/K1JP9ZWOm+NNdxHeUDC/1/aPUIt6A+wEJtob3EfB3lBQvi8M8f
8yypH7DQ9lPQ28SK8oOFtad/zDu/nPoCC2Uh6UbBCylPWBjl1NUpeSH1Bxa6
GNvlFZhQvrBw1O+e6j1j6hMsaFi/0fSZTXnDgodlwegDC6lfsBC/Tj3klzHl
DwsCb/cmWxPqGyw0/j54Y/98yiMWQi+2bt9vRP2DhXfTbsaVzKJ8YsF/w8Nx
V6ZRH2HBssKqNGMG5RULf5QthzhMoX7CgmeCfpcfhpRfLGwt8BQt1qO+woJz
wYCurgaUZywEXb2hPnAi9RcWYkYeuxo2k/KNBe8S7kH3adRnGhB+k1NbakR5
14Az7qY5j4yp3zRgHb+v5v2VlH8NyB+bHZ5iQ32nAWUCj8JhtpSHDdCu13p4
zIH6TwP6LDUev/gI5WMD3k3Kvr7zAPWhBuxdfEx45hTlZQPGaPpFex+lftSA
iKCBFmmHKT8bsK1/o3KVC/WlBkhHfPf57kh52oCjTyt7p22j/tQA0fRl9ezN
lK8NuGEjsT69kfpUAxx3/WxYZEd5y3w/g9/T7dSvGsAdOq+2yxbK3wYE/2Y7
jtlIfasBKPP3s9tBedwAfyf7p9v2Uv9qwLUBOX222VE+N0Dz6J6RNpupjzWg
R7P+dakt5XUDknStptjbUj9rgLvHvy0deSDPb2Y9vm5eUruc+loDlhmOtbEz
pzxvwNO54cH566m/NaA+J75s23bK90ZYZtrpW2+kPteIFQkz42sdKe8bEVmw
MLj8EPW7RoTeFnmMOUH534gEh+S2g07U9xpxanPxiV2HyINGcBcYjtviTP2v
EZcGBVSO3kc+NEJvwezP83dTH2yE+WIzFmcHedGIMqcBTsH21A8b8Vmr5lLM
EfKjERuj1+g6Hqe+yNyvEjktbj950oi8jy5xvxypPzbiot3A+RkO5Atzzd/t
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
8lyKz6LKLDfm7/8P6MAchA==
      "]]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
5FB2fNftZrPjdwwva11C+fQes+qW/frDnlfX6YYk4bDOjxd2NpRXSaiUGX/3
HJuvrjhalwSb4O/Dl1hSfiXh+cCvyUPZfIjrQxIe2GXUvzKjPEvCtiXzBTUb
heiKg6IkKMj2DRZuonxLQr+s2Y472O/9ugLnAwJ4uasD7SnvPkC/h5vgEdv/
k7s20AfE9DY+vdGa8u8Dhpl9vTOT7fesrnrxAZfe99UpWEd5+AHcnjzz1Wz8
Xp3boeIDinOqTe6aUD5+gNLYHXclNwgxtnM5j0nGxxHS1y2sKC+T8bxfzogL
7HNK5/KzTsbLAGHoKDvKz2SMnhY+Zywb/46ugExGONetodqG8jQZV386mc9k
9zOia8MnY/kvB0NjN8rXj/ji49V/Mdt/XcOb9BGzJhser3KjvP2I1KWW/V6x
/Wzf9e8jXN9bi9K9KH8/IvLlCcnPLJ86yxNLWIze8i1/pxPlMTu+Ls/tIzt/
ZzruafwI2Zu3JDP+y+cUrEgru3Od3c/mrhOm4MjFi9N3bKe8TsFjjeDTq5gn
fbsCKgU9HqWdW+JE+Z2CGcddRsuz7ztnQ+5RCpzX27pvdqY8T0HqVcPGdHZ8
V7sTpOBa0fo4jW2U76n4bJs34D5bD/86t9v0VJhkXZY1Xk95nwp+UVZkLpvv
O53L2SMVg4c2zXpgSvmfinMOcX1MVguxSnzD+DlhlMzM9eRBKvT3c3IGsvX9
o3M6vqfCyOm5V7kp+ZCGHpI7e0xjfeda5+3qpqHqsJxs/9XkRRp+PLfYNp99
v7jrAaZh7yUHv46V5Eca7id6zr64Qgh+Fw9pcFxsYy9aSp6k4fnQyugU1q/O
d8b77zR89B+d+HUp+fIJWs0yYWZsv3fF89xPCPK3dTk6i7z5BIh0lcPZ/u6K
1/2fsPOEttm0//r1J9zct8qrlvVxcfx9QsAzleeNOuTRJ3BO/ilNZt93xUvP
dPTuoXc9VI98SsdMiVMnF7M+2bV9DdMhz1WoWjWLvEqHXzi+xLA87Noegel4
laejefS/Pp8O9WPvsupZvxYvv3To/Yk4tW0OeZYO3RbTdntdIQo6p7d/Bham
J7zN0SPfMmCVMS/qMcsj364RZsCuZeep+qXkXQZaNm5VHcz6tFLXAsxAitTl
JJW15F8G1oSoenUYC/E5o+sfrvSbojXamDzMQA/eD58+7PyeXYH6GXNUThT8
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
1AeqsdujfXj1G8qLasiZmlry4qkfVKPCeNtyi2TKj2pY99+8400e9YVqHLCe
MX9dFuVJNSJ948pEmdQfquE7WmCRlkP5Uo2TKhrSWjnUJ6qxUc84Vb6B8qaa
5e/Z424C6hfVuOenJnjZTPlTjS/rz6T/FFHfqEZrfNHQ4m+UR9WYYBYzcEw7
9Y9qzCz1i7reRvlUzZz+lblFRH2kGmVrg0TBTZRX1fjm/Mi1UkD9pBqZg0b6
rKmh/KqGWf/in00t1FeqcdgqhPe+nvKsGp/083WO1VN/qYZah2dyCY/yrRqW
3OnWIc3UZzi4FnJBo7CV8o6DR0GOxpkC6jccvFQf0PcMn/KPg1elGQrRLdR3
OFgQxquRbaQ85CA/cofx6nbqPxy8j3i3IOkv5SMHrg6y81f8oz7Ezhf+NOKW
iPKSA7kvd/y12qgfcbBM7QmvhE/5yYF1y4kHl3jUlziIc19+PrmV8pTdT77C
oaJ26k8crAzQCRggJerOVw4mPbvpdXmwqLtPcbDc8tLt2jGi7rxlv4/af89T
UdTdrziQ6bFBr26iqDt/OTBrHZzrNVLU3bc4KPUYk9AxTtSdxxw48fmSnpNE
3f2Lg2SVPw/dpoi685kDTVfVJQuURd19jIMhL+teRk0Tdec1B//8Q+PSZ4q6
+xkHE2/yP+zTE3XnNwfu0+8EJM0Vdfc1DrTGPp78aZ6oO885GBxjGRWqLeru
bxwM/5e7ZbWuqDvfa5AdZr9+EbueuODUIMf3bs+P7P7EeV8DhRA9H3d2P+J+
V4PfOjeiO1RF3flfg+UX2o7unSPq7ns1UDI7jKbZom4PaiD3dsf5MH1Rd/+r
wTenwdvWLhN1+1CD8IaLy2uXi7r7YA3qxnv2f7pa1O1FDY7MfNz2dKmoux/W
wD/+dEHcAlG3HzUI3J7f/+EKUXdfrMFj5x1nR7HPYk9q8E51cv/hS0Td/bEG
45q9FY+y84l9qYFTpItngoGou0/WYPqysT5R7Pdib2pg0ft9/lB2vLhfsvtr
HMONXynq9qcG33W3Bn1g34v7Zg2Gh87OiWLPX+xRDVz0pIaosvOL+2cN+se2
lcxnn8U+1cB9vNKNC+z5iftoDT5dxZg17HuxVzWIu8eV5s8SdffTGvxNDzmo
weZT7FcNDO2aot+qiLr7ag3+rJr4ZiubH7FnNYi/cFzkMlrU3V9r8e1s5Oge
bP2JfauF1oFjB0IniLr7bC0eVPnIxrH1KvauFiElSRarxou6+20tnge4NBex
64n9q8VZq+DZD9h4xH23Fusa4nt6Txd1e1iLZUf5bxLZ/Yn7by16ryhcfIod
L/axFrv/hR8oY8eL+3At7EK5UbGTRd1e1qJvaOL4MHZ9cT+uxdwk7vTPbLxi
P2thHBDbL5ftH3FfrsWKVYr3JbVE3Z7W4vGypQr6EHX351o4x40aFcY+i32t
hUJP74H9Zoi6+zS7XsSLaY6aom5va/GmzEA5n+0/cb+uheLJ01qlU0Xd/rLx
Xpu4L56NR9y3a3Fz2KLp39nzF3tcix5TlgQv1xB19+9aTOIvGz9YXdTtcy0O
5htaDFcSdffxWoyfrjiyYKyo22s2/ne/F5myfBH381qcWRK+ZusoUbfftai2
GBo8nx0v7uu1GPXuS/wyNt9iz+ugdH9xouFAUbfndTCTXjHpCMs7sed1UFCN
rZ40VNTteR32msP13nBRt+d1mBR0+lw8e/5iz+sQn7B2gxe7X7Hndahf671u
BLtfsefs9/LXJfLZ/Yg9Z5/HONyQYfcr9rwOsic+Zi1h8yv2vA65mTeOe7HP
Ys/rMPfZgt4itr7EntdhqtuPIzz2vdjzOlyctS5Elq1Psed1SH27+l0d+yz2
vA4uy7c5XGbjE3teB5PHVvPPq4m6Pa/DsXCbrWtY/ok9r4PxrD7WqWw9ij2v
w9Di2bJL2XoQe16Hm59fu7qw34s9r8Of4KCrI9h6FXteh/1WQ1UfsvwUe16H
gco3R0Wy9Sf2vA5tf+VUvdh+FnvOnrf6mV8OLL/FntdBvcecX0PZZ7Hndag9
a2VZwvJS7HkdhiFbbhPLU7HnddhurmL8jZ1f7HkdijntczVYvok9r8PoCAnV
3wtF3Z5zETThylJXlrdiz7n40N9TcIDlidhzLsaa+J6by/aD2HN2/G87hQw2
HrHnXIyzU+uwYeMXe87FcP9hGhHzRd2ec5HYcYcnxcYn9pyL8yYchWj2fMWe
cyHa5ptfxvaT2HMuVvtk7U5mz1PsORfB88aWhTNfxJ5z8WhXpG4vNv9iz9n5
ctU7DrL9I/aciySFNlN3Nl9iz7n4ebP05Q0d8pwLxefPFX/pk+dcFNT6Jm5f
TJ5zsdI8weTvAvKc3c+Rcdf+LiXPudCOs0wL1ibPuVhxonZE6QzynIsTycUP
vGaT51x4zjDaJppKnnMx3fVIYq4aec7FnDVDv9mqk+dc6JX9a1eYQZ5zccj8
bdHJ6eQ5FxZmdrsXqJLnXGS16wTvUyXPufDXMpFM0SPPuYgqre2lpEOe18Oo
35qjlobkeT08DrWP2D2bPK+Hbpmp44LZ5Hk9Tjjs03mjTZ7X48XxsVLBE8nz
euxPM2jarEye1+OU/su31ZPJ83o0uY419lQiz+uxU/PPs7SJ5Hk93NTeRZ9Q
I8/rsXvDi54vppLn9fgz8aDFUnXyvB6aF6IlQ2eR5/VItk55tkmLPK/Hpj96
n+9qkOf1cM/QfROhQ57X49mKEI0pc8jzehju31dxW5M8r8dX7YgzJ+aQ5/UY
9WhIXOd8ij2vxy3L2RPXTiXP6/H2fdaqzrwXe16P3weV5c6qkudsfPjAeT+e
PK+HSvx09Nckz+sRvPTYDTlN8rwe6+YE1RpNI8/r4SLBa/XRJM/r0UthbW6y
BnleD/m9o1zfTiPP69Hi4JVmoU6e89D39LyDeRPIcx587M+Oa1Qiz3nw+qO4
Z/N/nvNwe+Rh7euTyHMeBuztq35SiTznweWoelKIInnOg4XXw/LmkeQ5D2sc
erfvGEGe8xBRaqibPYo8Z7/vOOcxcwR5zoPni3COqiR5zoPWtcna6Eme8zB8
R8KpH230PszDuC/3o1f9o79/8fDy9rstT//R+zG73vjd3Fn9yXMerik79//W
Qe/LPLj3Udlq3Ic856HZbJzDyb7kOQ9L+nNz1fuR5zxcv+CwaORA8pw9z9Xz
2i73IM95mNOr4GTpAPKcB91Ql6zs3uQ5D/YdcqvvDCTPedh0fbCrdAf9fY0H
XuAft5M/6f2bh12IPnj+O/29jYdzbjtOiNrpfZyHf6oRCfu/0d/feHCWzB/b
pwd53oBBa1ul8nuT5w3Q8ts5+Nlfej9vwIvdEy8Y/qL38wZ8s53ZdusrvZ83
IEa3/1LFb/R+3oCeab/9y9vo/bwBYcNbF9X2Is8bMNd85PL9A8nzBhw9qeZ2
ZQR53gD51KKfHwaS5w3g6UjMt5Yhzxvg1KL8bXQf8rwB9x9m/xX2Ic8bcHLF
KdFdKfK8AUYG+Rc7hpLnDVi3aprU3MHkeQOCNXNWTJQhzxuQExQxPWcyed6A
PoG4fV+dPG+AW0JQgcEk8rwB6WFu2sWK5Dk7/93lvUeMJM8b8OWmpjVfhTxv
gJXk46iX08jzBpRUzl26dxp5zp5P7OsP2frkeQP8wvVDVHXI8wZssNC8/EOH
PG/AFnk3gw498rwBV757b/lhQJ43YLbFNmU3Q/K8AaaT/xnnG5DnjZgxRDvH
fgl53ggfz/oNoXPI80YkqF2w6DeLPG9Ef9lz9nIzyfNGhIaqzFecTZ43Ykqc
7vFrGuR5IziFBjWz1MnzRtwTRlsFKZHnjRiUbCORN548b0TAlR4T/40hzxvx
JfBnpOQY8pyNL9ssRUmWPG/ECaeghBXDyPNGPHuzU18gSZ434v7V0sr7vcnz
Ruwb4Oy4SZI8b8QGz4VqvlLkeSMej56dtWcAed6I88OqLqj0I88b8Wvl+VO9
BpDnjbhq7vVnghR5zsYfdUZ9oRR53gi5q1FwGUaeN6Kv+17jPorkeSO2Fk3a
YyxPnjdiqPE6M74Med6IsTdifQQjyPNGFDtbhxmMJM8bcWiyWeJqWfK8EeY2
aye5SJPnjbC/8ctTcxB53gRurOzZRjnyvAn2drIxForkeRMMI3LfFw8nz5vg
dFPW7NAY8rwJ3iqnVx5XJM+bUD0s83XpaPK8CW5vdx6JUSTPm/Br99NFimPJ
8ybIBSbqSg8nz5tgkNhXXXYsed6E2LXt7RfVyfMmHAv9oDj3P8+b8M5hUXSY
NnnehCrnC5KV2uR5E+Y4hz/rWESeN+H19e2vo5eT503QMr4KeSPyvAm/M3ee
i1tKnjfB1r1gwJpF5HkTRkWH7rtkSJ43YTbXxSnsv/fzJvTzVjmhvZA8b0Ku
YvWqrevI8yYknI/RT1hLnjex/FwwbtI68pwdzz+eNG0Dec6+b9rxoXw1ed6E
ooiq2ZWbyfMmzDc/kfjNhTxvQrDWg+8/rcjzJrS0SDfWmpLnzXCTcVs815I8
b8YYU6WoWxvI82Z0tE6/JelAnjejNsdXT20Xed6MLfN+u27dSp4341TN/X7G
NuR5M5TNWlZP30yeN6PkSWLGcivyvBmYYvuynw153oz5e7RMb1mT580wKtrx
Kd2SPG/Goma/cYXryfNmDFYvOWRqQ+/nzZDgj2wZZELv581QiuA9Wrma3s+b
cVve1St1OXnejBknc1OVltP7eTN8nY6VSxmR580wl6kyalpJnjejyPXHtGYT
8rwZX1f/WJq9jDxvxoTPgog5C8lz9vttNpUnF5LnzdhTdOrkYGPyvBkhHn3b
1NaQ583Q1bKQfr+K3s/Z/Tnp2JYa0ft5M34cDX5ivJDez9n9XUt+UD2L3s+b
oWG7XOLLLHo/b8beBD2/lGnkeQtWP4uVlVAhz1vwZsE6nxvT6f28BbuU/J+/
VqH38xYsPaigEKhB7+ct+KmiFTdZid7PW5By2thLYQq9n7fgQKBDZdsU8rwF
vGEPWsKnkectOHVGbmyyCnneghOh3FEblcnzFiSrFR7QGEuet+Ab511cL03y
vAVlktqvw6aT5y0Y0d/+wyIt8rwFh6w4VptVyfMWyDg81q/RJs9bsCHOq/Cx
Nnneggc/bRM/aZPnLZi86Keh+wzyvAXK+/rnC2aS5y24sLI2mA/ynI1//Zat
u43I8xZIc50kj4M8b8G/Tb1TL8wkz1tgOEb6Ro46ed6CRwpbRgZqkect8JaK
MpmmSZ63QP66qOjJTPK8BbdWR6a+mEmet2Di8wpHe1XyvAVxx7ZPmaFMnreg
qsBgmN5U8rwVmTYz9markeetaJ9mu3OxDnneikIT63YDA/K8FUozI1VUV5Dn
rbgm1bqjcil53gqFcfInly0jz1vRsbDPqSkryfNWzM+N9Q4zJc9bUdmWfijG
jDxvRXT/fMtZG8jzVjxV3dv2aBN53gpvD8SWWpHnrRCW/qqYsok8b0V8yqu6
LZvI81Y43jxtOHwded4K95zHSkpLyfNWOE0yHN759wWx5624mt1620ibPG9F
antO3BcN8px9z9vd3uO/9/NWHFoc2E9gSJ63Qv3E+pjzc8nzVuxYnLKHO5M8
b0Vg3cGGxlnkeSu+5MSPj9Amz1shq+WXnq5JnrdCcV3WnX7K5Hkr/gS/jdkz
hTxvRX3+LZcp6uQ5u75me8G3qeR5K5xlg9/3nE+e83E0qzB/60LynI/sVk5B
xXLynA9/uduJFxeR53yEbczRmjufPOdD+leTk9Y88pyPmbcXKh/SJs/5qNZ4
+sBnDnnOx+mnfuNi1chzPixs4sLf/vd+zkcPj2N7rZXJcz6MvKaeOTSePOej
NaiO4zWaPOdjE6dsdoQ8ec5Hwfant3orkOd8LInPLhynQJ7zUXo3cUrCYPKc
j8GL7JeFDSHP+dj81KNo0iDynA/DTe9CSweS53x8ch0f7NafPOfjpNWNlgMy
5DkfnPwz5zUkyXM+hp4wN80cRJ7zcact4XHccPKcjydfi1LyFclzPnJKj1z0
HEue8xEVtyl27hDynI9nlvpK4fLkOR/Ou8MlrsmS53x82Xj7Fk+GPOeDFyYj
MXAIeS7AtZZQ70x58lyAiePODffpTZ4LYKcTrdfcizwXYL+GBH9Ef/JcgDG7
rIatkiLPBXh76bmaQwf9/yUC7DNuDFncjzwXIONx5Ks9A8lzAQw+GcTbyZDn
AvQeuiDBUpo8F0DkZnsqaAh5LoB96dD+y+TJcwH+zV8YKK1AngtQl7U8eeQI
8lyAFVKL89onkucCpEilDH2jSp4LMCer6cLkWeS5AM9P7Gpcr02eCzDFd0Pz
WV3yXIA9265+1dEgz9n4q7QNDqqT5wKkP3p9p2o8eS7Agr3XGrLHkOfs+Vk2
Tj80kDwXoFhqjO33AeS5AK5h54Y3DSLPBdigOMk8eRB5LkDN7Guzrw4gz9n4
jxc0vZckzwV48tR8yu/e5LkAvE+5poFS5LkQO5Plrlaz4/8HXlyXsw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1: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
ned6X9WWyOqzLDwovTg2k32fy+8s+Hgf6K7Ffo+r17Kg/PnCwFesPS7PsxD8
il9nxPrL1W9ZuOaP3ycNJbJ8z0aw6/JyPfZ5rp7LxrEZC8/4sM9zeZ+NHdFD
tXgsX7j6LhsRZl61JuyZy/9slI+zk+ay/nD1Xjb42nM/emuRB9lQu1cql8z2
I1f/ZeP+2odeGtrkQzaeRpyPOMnyhKsHs8Fz91gUpU1esN9ful3RnOUTVx9m
Q6v+TlKNDvmRjeWZR6cvY/PF1YvZCPpo0699vjhPslGzvkV/LztfXP2YDcua
yYJ1I8iXHHzi2Y78pS6R1ZM5uPnCsOWvOnmTg8yxAx1Ps/5z9WUOZmw+OHu+
JvmTA8PZvpI6Nl6u3syB0U+bPxfHkEc5WPG7Ld6H9ZerP3PwXp5/I3c0+ZSD
iPSrkYtYfnH1aA5ODDBf6DiSvMpBD6/VekHMQ64+zcHFucMVDw8nv3JgZ2u0
5iYbP1ev5mC76MQTyzHkWQ7WTRdfusLylatfcxGlsPBo6AjyLRdTohzv92X5
ytWzufC5tNXj8QjyLhcXzBpG92e/x9W3ufhYPqenz2DyLxdP/9RNN2V5x9W7
uRhw6IjuklHkYS4Ofw+LUGPj4erfXNgm3/UZqE0+5uJa+P7jt1l+cfVwLnq5
uC8/rkte5qLY6PzLJWx+uXIxF3W1q/mamuRnLuoFA22krH2uXs7FzP9pX301
kjzNxYp/n+dZs/5w9XMeNuw6/kxbhXzNw58vci6fWZ5w9XQeKtvCTGOVyds8
JJV0efidrRdXX+ehy/UuT4N1yd88DPGe6DOHtc/V23l4OqEqS1+LPM7D0Kq2
xjWsv1z9nYfLB/j7vceQz3m4ZexSv521z9XjeahouP/DX5O8zsPk1soPt9l4
uHIhD32CQyu7DiW/8zCg33Y3b+YbV6/nofMpR79N8uR5Pk7dCYqUypHn+chd
vM7DtAt5ng8jt5a1P1qpns9HY829Ob//0v09Hy3ff+ep/KP6Ph9+OZcDZvyl
+3w+Ll9RW/FTjjzPR/KtnU5r5MnzfFRUVyac7Eue5+OA/un7ZQrkeT6eKcU6
PFMgz/MxzdA5evx/nufD8uecTReHkuf5aK7a+KXHSPI8H969HGZEjiDP86Er
tpfM1CDPC+B8W1Pu2HDyvAAKGV7GLcrkeQG2fveojRxKnhdg49YWN8//PC/A
tEerrDf/53kBZj4btHLwMPK8APPi7rR9GUaeF2CxkYfSAQ3yvAAjQ8M/tPvM
eV4A3fspbsGTyPMCeIwYucLekDwvQMrIpePbQJ4XQCkoeF+3GeR5AXwex09Z
bkieF6DzlsoDTjPJ8wL8Xlo+0XcueV6I3e5Dz6oYkeeFeHU5Zse0ReR5IW6/
Fix9v4A8L0S0jbL9dAvyvBCGpTFqfTeR54WoVTI+u2gXeV6IrpvsjxtvI88L
YW4Ze7OfLXleCKmr3N04O/K8ENY3/U58XkOeF6IwZHD5n9XkeSHM2srTE7eT
54WY6jkw0GMNeV6IRQ7/DGPXkOeF4E0eeXe+I3leBAOfGRMMbMnzIhxZfav4
pS15XoTs1dpy8zaQ50VQkWuwm7GFPC/CHznhYfv15HkR8vN9r2VakudFkOe/
/NffnDwvgs+WYfLSpeR5EeZY5S8csoQ8L8KetOV/glaS50Xo96vk5fGl5HkR
9DpJalxMyfMi2HYxntp+H+HiqgjnYyt28+eT50VojTls9XUBeV6EtfVWa4sX
kufFWPc5aV39IvK8GPnhsxf3WUieF2NS7GvDNTPI82JsneasUzWHPC+G/zqb
0oZZ5HkxmpelbS+eRJ4X4+rddAVvTfK8GDeSwx9ljSPPi1ETnrBw3HjyvBhB
4wPcw3TI82L82cyPUDYgz4sh1FR6EziDPGf9ezggdeEy8rwYvfUPBmWYkOfF
mHuyLEp7BXlejNuZG+VerybPSxBbb6zmb0Oel+B1ruO1TBvyvASqUaHu8mvI
8xJ8+fhHkLySPC+BvfWmvlfWkucleFBUdrZiHXleAkGVc9Nwe/K8BHs3PfeI
20iel8A9uehEix15XoLQbXJKbfbkeQl6DLFdBxvyvATLb+k9/2RLnpfgRa10
RJoleV6CSxNP+N/cQJ6XwLKonG+2iTwvRd+QBq8CB/K8FNWr/v6y3U+el+JE
6Lwnv/aT56X4WTYzUHU3eV4KlV5hxmoO5Hkpfhx5cNR2B3leirZRx5b120ae
l+Ks8/TO3pvI81L83qrS9GMjeV4KjS3jXiTbkeel6Pwd89VXk+eluDnRsv+l
teR5KfRXRtsHrCLPSxE0x62AZ0mel6LZ3yGw12ryvBRiqCdoWpLnZegZef7O
eCvyvAynKqN68taQ52X4+r9nyussyPMy7D98x3OYDXlehuuXjwtr7MnzMpil
PHg4cw15XgbTa4eT3iwhz8vQ+XI/wzvLyPMyLHlsqH5mBXleBgXtgmsqFuR5
GVzv97n6aSl5Xobm/r+PFZmQ52VwmXPjUes88rwMiVGxd8ULyPMyWCRPXRNi
SJ6X49KN6he2xnTey7FBKfNsuin5Xo51/ETbRlM6/+Ww735/99DV5H059vmK
5UNWUB6UY9dhx8E8c7rPl2NFuq6q5ULKh3KoLqru+XYJ3e9Z++dvXDi2kvKi
HD2XJg1YZU33/XIEqvREnj3lRzkirp12n+xM9/9y1A/ZsXiZM+VJOXrbvkpQ
2kP1QznUND6JbjhQvrDvq4TK9bKleqIcV7aevb50G+VNOWKH6zW+cKb6ohyf
jOwvOzlR/pTjQptzWuedVG+UI/FBc0LiZsqjcrQmuVZ0sqP6oxy+F62W2W6g
fCqHf883sUU2VI+w+bwkF1q1nvKqHCXlcg3CLVSfsPncWlfSy5Hyi62P45g0
Q2eqV8rx7bS7m/keyrNyrG8bOVDgRPVLOcY4nVngtYvyrRw/NOfz126jeqYC
Uw1Ult/eSHlXgZSH/R/fsKb6pgKGUw7xDNdS/lVgsoI4/s5aqncqsKT/k+FV
tpSHFbhqfuFP03qqfyqQ7+o6qmgL5WMFjgwpm99vJ9VDFeDdeNY0dwflZQW8
KtJe22+h+qgCJ3bZBWttpPysgLnXim1BG6heqsAw96i9tzZTnlbgcNdmq1l2
VD9VoLBs+U2PDZSv7Pd6Bl1+sZPqqQqsrvR667aT8rYC359+T+/jSvVVBXo5
ux7Y60b5W4GWXynzhc5Ub1Wg/JRlzAFHyuMK5PZadV9vD9VfFRi/c1i+wIPy
uQJBZvUeDw5SPVYBfnJxZPvnubyugLJT913BblSfVWDuzVOFth6U3xXo8Sqq
e9w+qtcqsDHi4+Tj+ynP2XtzrTu33ah+q8AV/w9Wd09Tvlei+WqV9dHTVM9V
wrKrVXHcacr7Snxydzguf4zqu0oM9398adtZyv9KuO3ZM2uUF9V7lfhdWXjT
zJM8qISxu/v8IYep/mPtDegqenmIfKgEX/X9tlGeVA9WQt1/hnTNAfKiEhMd
x9nY7aH6sBK+NpNjtrqQH5UoKAj8MnYv1YuV0FJ/6Bm2mzypxKv8yU2vXal+
rIRNi23kzP98qYRetfzZjRupnqxEjxkjP91dRd5U4vYo/8bWtVRfVmK1yc/g
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
7udifK1v6zeJjff/ADvfvy8=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1:eJxV23dcTf8fB/CIECrJVpQtZIfwokWysoqUhNAgSWVmZVRkJBkJlWRTWtoa
tPde93Ybt273XMqM/E7d+/4+Hr/+8biPczvr8/m8nq+be1QtD27Y01NKSoov
LSXV9e///4jwJ+RL/hrL9XBePbvdls9IXlvA7ppw7tpqBr9PWcc43tyHflbp
MkG/aLs9/CfM7vT6yeC40qsVnGOOkM/kNf/rKZK83wWNjS75S9jXR/kTZ/V9
cQIHvISjUnrR8U4jyz88aM8AEbRq1l25feAssuN7jK5UFEn2dx4/Nqc1GY0S
IdpgQE/1ixfg/D2DFz+c9n8Jmk4XxuuPFWFh2CenOH93bDV+/nLeWDqeJw40
vX33RlmESBW3FqPIq5BR/7qleAod/xoqKwtcHWeKcD957BuHfdfB/HrdHKtO
53MDt1YG9p2lIkLFr+4D4ofugKUYS+fnjX3zLNeNUBJhlEbVeJkztxDV54Cc
zxA6Xx/M1ooseTJYhG27u/eIdWP3xjoPpfP3hcev9Xor5UW4e6f7B0PmaWWE
y9P13MXyZyenK8uJUJb9Y2Nd0D2Mnj7wjK80Xd996CzmRk7pIcKIXlvkpr/z
wx2pD9cU/jCS632AjoUv9/Rjx9dEvEMoLzhmvriDxu8hBqdNfH2xkcFqzcvL
LeofIvkb1/QGw0juxyMIJh1bPpkdL4FR1x4foXV9xrVt7P7F9+cxDnm+fTrm
OwMP28aOkC+PcXSrTMjannS/AvDm9oq+Mux29YtD2UsIwL6+jrWXe9P9C8TE
NWuf6PQVIeORXnjb30Ckf13/ZdkAup9BcDEK72XP3t+uuzW81xN8DzBdeq4/
3d8nsDhb1+MC+37ZkgD7JbLBWDHSxr9Vge53MP5Y2/SfxN6/Z12Xq/AUxhFm
ntv+m59PMf7RteiPnQxWde1uaAiy2g9OL/jKSMYjBLP6lCwx+cKg+3aPfob1
F0s83v5gJOPzDB3Hn18MFzHounu5as/xrzq/ctlfRjJez9GHe616GLt+pmz3
Svo2+QXufv13d+4nRjJ+LzC6/mOZaS6Dz+zeRmq8hO2xiYKqTEYyni+Rqz4q
JiKHwb7rrScw7xVGf0g4va6MxvcVlp3avqg5gQF7cuwlv4bSqjLFqiRGMt6v
8fWErZVPPINN7ORhhxRjn6x+kPeexv8NIkd7X/8QxyCQvXslAW/werdD56GH
NB/e4PSSjMPGwQza/xa68Ce+xe7FvfLKQmh+vIXBmZvO7ezxdbsnwFtELHt2
IKuAkcyXt5hnUTM8iD1fdvC6LghzRmb5naii+fMOdzlLPjxmt4tP7x2sn/D0
2mpoPr3D2gVmVZlCBnO6f0Kh8Ffj0rc2RjK/QjFAVq7mVTODcwnp7AwKBY6E
TcivpPkWitsq9o9d2fEpYEefvSfQnjc63buF8ioMf6fEvbjRxGBc9w7DcNUx
Yugpdrt4PoZhieqavzns7x/uHoD3UHVwiNRn5794fr7HWNuZ4ePY9fjx22R2
hN/j4LwF+0/1pvkajuedv7P57PxWFJ8gdoUYj506iOZvOKrVF1cNZ/Oh++w+
hcN3esGLIYo0nyNwQuCvNISd/+/8mOBUwwicq/wwOFGW5ncEjC5Ix21m53PP
7guOgPDP34FWvWi+R0JjcursFPZ4G8QTBksshAMODab5H4nOVSk+39nze9x1
uYWRePo3p1W3g9ZDFFLlH45MYPPja9fuTKKg8Wd8blwbrY8o6FhN76/GZaDd
Nf0roqCbPMt5XRWtl2hExq5UqKhj0D19zaNhlXH+9apmWj/R2Kp3fd0/dnw5
x7oGJBpbxkasXFtP6+kDXm3pbNpawWBW9wT/gKefl59vr6b19QErQgOeLG1g
cOaWDjtlPqDXjF6rBrbQeotB5LvUixHlDPLUugcYXgP//FPIo/UXA309Tg/H
FAaqXenfGoPliR5231/TeoxFo+H8nvmxDA51LQ/7WOT5Wb30eE/rMxY354YX
HP7AILFrdNticbov51paBK3XOAQ2D4l+Es1AQbwgkRRWp+39mNZvHJi4TQZH
nzDovn2/4mCusuG7+3Naz/Hwujrf04rd3n16J+Jh9vfPdfOHtL7jsTkGSt/8
GIgdT4DHRfuOPXdovScgbZpeycjLDJ6mGrIrOgFrqp9at92k9Z+AsLMVmdPd
GKxnVyM7RxHe/nnwsPOUB+zv73rtHc1u/9mlT3ICFv5Uu/XVl/IhAV7/NNYM
Zc/n4ciuBZEI4+n8Wcb+lBeJkGNWBfVmj7eye4ATMUnF/frkR5Qfiag4/KPy
5FUGouCuE0xEvzVf+y30pjxJRJ+5S5St2Pvh23V26Yk45b1M9eUzypdELOIo
jUkMZ9A1uQwGJGGR6pido99T3iRhg2ZulCWbh11pkr8mCW+naAmeZVD+JOGC
tckaGzZ/u2YLO2UgvyV1lkcB5VESXsaYbFzIjmf35eYmwTUjclJgHOVTEqSs
F37OyGfQvTvFjxjba+/xbXmUVx9hGhXn3MzO/+442vgRb6/2PJbfTPn1Eedf
tB89VspAXB8+om3Brh1nSinPPsJbdYnoAI9BdxyUfMQVUxW3hc2Ubx/Rc/HI
tRlsfrp2B04y5O4sjsnNpbxLhomZ2/NHhQwmdS+gZFy9NE62dzblXzJ6FP4Z
ZsWu15zuepGM2a5hNrJFlIfJ2Jt3NGJhMQPnruVQxW7/0adyVQHlYzKSb91V
vsuurzFd01klBZZ/is5fK6O8TEFQus3e2+z6TeuafhYpuD5IJbLrtTg/U9A2
ub7HD3a9HuwOyBSkBPnf/sDmgThPUxDzfvzpHmz+DOte8Clwyht445oM5Wsq
7Ds8TNL+Meg+vfGpUDceH2AoQ3mbCv1ZwwKbBopg1f2Tir+Z/65/Gkj5m4pC
4xy9PuzrrvLEJixmFFvOjx9JeZyKIvmXL1aw+duVji78VATHKZ+Ok6V8TsP0
Bwr7Itj8N+/eYRpmr6qf9JDtO+K8TsP3z31FM9nxkukOqDTszBq4eSbriTi/
0/Bxz+mYKvb3u0ZD6VUaOmXHyA7rQXmehnjX4Wv12OvvbndMGnQ3e5ek96N8
/wSHy9p7/djr7exabrM+QV112Kj3/SnvPyH1uP2Xpez5Pumazg6fMPilg3nf
gZT/n9B394SJ91iv1oovGAl1Uw5V9ScPPmFfVOf6fLZPfe8ajm+fMP+x2U4f
9vhiHz6jx+N51Vp9RHjQdbmanxG4ZvK5Ymny4jMKfrtOiWD7mX73DfwMb9lI
68F9qO9+hu3m9Oxq1ithNw+f4XHssZUue/1iTz7D+WLriePs5w2frnjv+Iy7
WfJ+29rIl3TU8pcYPWLXV3c8L0mHpXvhUMsW8iYdm9zWzuCz27vj9VQ63i5V
0zRuIn/SsajWZv9H1jtx/KVjuIVZhnYbeZQOHWkfu4WtjDheemZgm3lYZlA7
+ZSBy4t+fotmPy91L1+dDEQuMX4b3UZeZaBz6INHSqxP3cvDLQMrs0bblv3n
VwaSt+lVFaUyEE+/DIw2eWonE0GeZSD9jfLvM8kMirqGt28mNlq8mtAvnXzL
RIl7ZcpcNo9Odp9hJmyO6F1uSCPvMiH8qbHUlF2vE7onYCaWcfKM7BrIv0yM
HtMnZSfb/7Myu3+waXDyJB8ReZiJadWyr3XZz3dHugM1C/YLhp8e1Ew+ZqGp
o0RmAeu/cveEzkLRpGrf1HLyMgulEyKeT2LzMKX741UWdt356ZOeRn5m4e+8
BdZKbF7ZdQd0Fn7byPTxLCVPs9B8sGbfNvbzSHdcKWVj43YsO80nX7Ph3jbD
JYC9vu442JKNTQVh8mkc8jYbOlIjPjxk3y/++JWNnaLgMyNbyN9sZJi3nFJj
82aAeMHh/up0Hbl88jgbm0dF9w//zKB7uozMgX/wSL8xH8jnHAzptc/vIpuP
3cOxPQc/5Vf8uZZLXucg33VsxgJ2f+KPZznQGzRgh34c+Z2DhXNKtymEMeje
XU0OEvU0WjrDyfNcLM83lElkt4vXey46vb/4/Y4l33Oh/3fzQX4kI1n/uRCG
bDORziXvc2GQG5d1hr0/4jzIxTzNae9GRJP/ufj66+jCZ+xrcT7kIonJc5wQ
QX0gF/1alLbefkWf/3NhrjDHeLw39YNcLLkwfEf4FUaSH7kovzR4252T1Bdy
kXb40M4nrowkT3JR1sjdn3ic+kMuBE4rpj85xEjyJRclh6SsB1hSn8jDTPv9
WQ7W1EfzoDmwfunDrdQv8rChtO/FfCtGkj95ON6+wsNqH/WNPGxvdTDY58xI
8igPb3be/7fCgvpHHlIioKq3n5HkUx6W5vTPnLSb+kgeViQH2KXbU9/Ng2e/
J4FpB6mf5OGE9codR2wYSX7lwazqSerKPdRX8jDmSHWugy314zwcMHu6Y64V
9Zc8RCj/vZ9jS/mWB255bY6KC/WZfJx8sClzy2nKu3zcfN62ZP5x6jf52B55
addwe8q/fOj2CdwbYkR9Jx9R2SUKR1dQHuZDY5nZLtVV1H/ysbCndkvbJsrH
fLzNV78SuY76UD7meijpHFhLeZmPqjvpBS7G1I/y8di4ZvN1U8rPfEydXH7T
aj31pXw8Hb0s4aAh5Wk+TB41HFllTf0pHxsWxYQNNqV8LUBV2WvpveuoTxVA
263Sf8MKytsC3LnZQ1G0kvpVAab2TBrxzILytwANlhbfoq2obxXgbYWOk9k+
yuMC/NtQyE90p/5VgK1V1367nqR8LsC937OunzlHfawAfwqVF2w8S3ldgGke
HUXz71E/K4Be5zyt0vuU3wVY90b0Yc9t6msF0Pe8tqrIm/K8ABH2MaF8D+pv
BTApUzJ/eobyvRD9Nqcr7XeiPleIpw6DbORPUN4XQs7wXlDGGep3hWgxXm7z
zY3yn32/3P5rD62p7xUiMjx3tq4TeVCIdDn1XobO1P8KUT8EfZ1Okw/s+zPn
NN08R32wEI82/TI4eZu8KIS8zJD3ppepHxYi0Fzfrv9p8qMQfTVmam+1ob5Y
iACvxqS+e8mTQiydN0PdaB/1x0JcEanPCNpDvhRhS9ritZstqU8W4XTN8uPH
D5M3RdjG1XDe5UT9sgihmcY9qxzInyLEq2x64+hMfbMIJz1XTnG1IY+KcLTj
cexIG+qfRXBOmn/Wezf5xG7PfObcuYP6aBHOu3e0a+qTV0VY7rl9oZk+9dMi
LJxpseHkQvKrCN45CSWnZjGSvlqE6ZmV/V5MI8+KsNX0pS+0GEl/Lcb+ycql
W6eTb8VoUt/l9XMp9dlixD07KTtVn7wrRnOyLKdQjZH022LM+TrwxPz55F8x
Vod9Pu+mx0j6bjFuDWy94WdIHhbD1atv0GwDRtJ/i8GJzvTdt4R8LEZsfIQ7
ZwEj6cPF2Db2ksvLOeRlMfwMQgQa7HZxXSzG0qkz7lsuJT+LsWRTkEPLXEbS
l4txr0ZJ7ed88rQY1Q8drnMHMZL+XAKdX0ZpzxTI1xKMGJ1//JgiI+nTJYhc
Ovtq5iTytgQrS3v5jBtN/boEE5K/uHa9X+xvCfr11TkXr0h9uwST5RZ7/xhN
HpcgeMjwNP2x1L9LMGqsKFB7HPlcAtczq5z1VRlJHy+B26xbCZ0TyOsSaJU9
3biJPX9xXSjBxFPmpa9lyO8SLHMJdzbvx0j6egmEJ70emzQIJZ6XwpcbZD7w
h1DieSnWpNzlDpMiz0uh+GvS48HS5HkpooevMVKVIs9LsbRX+a81nUKJ56WY
pvK79qsceV6K4/L3sWM4eV6KZJHV10VK5HkptPMWP3quSJ6X4qWsNJOlSJ6X
Yq6/yz8PFfK8FKsTU9x4E8jzUgTOxxWFweR5KQyccgK/DyXPS5Hlb2lvLUee
lwIb5lu59ifPy/A8vy7qzmDyvAwzfjwYn9SfPC+DcfB7q/6DyPMyvJ99ZHX7
APK8DPd1450Py5PnZTCa2z7xXC/yvAzLgnN+PPwrlHhehrTntpbO8uR5GUr6
L27UVSHPyzDL71XOyvHkeRmaX7/f83sGeV6GATsEPOUZ5HkZKrbJOawbRZ6X
wSvH9/epCeR5GRxqOsOXKpPnZZiQa8g5qEaelyMyOGj9BWXyvBzKRkfmdY4k
z8uRznu///wA8rwcJi1RWTZK5Hk5tOVGN15QIM/L0dTpdvOEMnlejlFNvmqL
FMjzcsy4qvZPcyR5Xo7k5e9CLBXI83IYresj9WIoeV4Ohbbtbn9lyfNynNp5
ePW//uR5OdpeT487v5g8L0f2pVNyUdPI83J8u+LorjiFPK9AwdVlFtMmkecV
4CSpBA1SJc8rELxSabDeJPK8Aqsv22bMn02eV2Do6jvr32mS5xVIunX/4815
5HkFeNFWWqnzyfMKPF6cHLVsInleAfnVGqZqU8nzClwOFP48bESeV6C/XmvH
FFPyvAJq0iXfvu4kz9nz5bo9n2ZFnrP7r7x6RNOGPGd//7fMlyIX8rwCFjUX
OibakOeVeJf5zqfWkTyvxMsT2+bsPEKeV0Jl1KvJKnbkeSXmlBqOTd5JnlfC
e2pIQONe8rwS994+q9KyJs8roem1Ui1mL3leCVGs/2Tr/eR5JXiHOr7cciTP
K3Ghny0eOpDnlcj+2GfBIzvyvBJ3h6/dqGZHnlfi16l1C6Y6k+eVMJ72SXWw
C3leCd3iyKxb1uR5JXa5zv5QYEqeV0Fqp2xA2lHyvAq3bFTd6rzI8yr0y7TV
OeZLnleh3WRomctd8rwKChsc3sqFkedV6Pkkt6IylTyvwoNlN5Tfx5LnVcjp
31fxZRZ5XgX/3I5R2jnkeRWOTm4y+5xAnldhV+K8G6tiyPMqzBouPWB6KHle
hbPJo4wK35DnVbDJ+fnd+B55XoU1S90nHrpFnlfDw3ONbY4feV6Nq5uN+3qF
kefVmLynzutkNHleDU2tZ8H1b8nzanQeeig74g15Xg0j82LHgHjyvBrGvc/E
X40kz6vRGKMk5RJOnlcjy+LmZIVX5Hk1cnulHI96SZ5X4+B8fzfVAPK8Gvc0
nxZ09Vmx59VQ2Gh6W8+bPK+G251Cs+1O5Hk15MpOW1xwIc+rcefl+Gv+B8nz
GsxMXG/e7xB5XoM097TV513I8xroGC0/2XMfeV6DpOfSa47vIc9r8HCTxoDe
e8jzGvAGvt641pE8r8HHl99ruYfJ8xr82eGBKYfI8xpEbBkrcrYkz2sQFvz+
WIEVeV4DL03vv647yfMaDEr8MdFuPXleg8mLBqlarifPaxCcFLCmYRN5XsP2
8Qqbk/vo83ktphnnWZjspPVei73Dva58t6bP67UYyTsz0GUFrf9aZFh9cHq9
mLyvhbSyhl6cBuVBLXoPcalVm0P+10IzpEDx6iLKh1rss4+Zozqf+kAtNFYW
xspoUl7U4sVZT/lzC+nzfi3+PG1Q+r2U8qMW+RNSzQO1qS+wxxugUVS1hfKk
FuMDuNYl9tQfajF0W4CU1A7Kl1qcnFDnNHAv9YlazNB61/+pI+VNLY5kPdl9
6SD1i1rILvE535WH4vypxVM1ze2fDlLfqIV+PWO8YQ/lUS0OzvwyLnor9Y9a
OBcPOmiwjvKpFhXZHsNU11AfqUWK45koMxPKq1p0zPl3w30r9ZNatLpZPn5l
QPlVi7syGTmpq6iv1MJdKbp25EbKs1o4TL3xr9Ca+kstIoK+TrNzpnyrxc70
qTpT7KnPcLAv9MAJn52UdxxUyjV/s91G/YaDXdNl2k3MKP84uHHNY2qmKfUd
DrSt632uWVMecjBqcTbz4Sj1Hw58d+uemX6L8pEDH92fpTP8qA9xsPBE5ow5
JykvOcjcOePk0uPUjziQCZz9NfAk5ScH3N+XnJx9qS9xcORkuE5qMOUpB6pm
vQtkXtLfQ9jj9fvT+esN5SsHHTVmxdqvqU9xsDhuy4rjbyhvObj/417IklDq
VxxsizkV7xFC+cuB5Znygd8DqG+xx9++RcMikPKYg927eQ2Dn1L/4mD6ZZcG
z3jKZw4eujtMaImkPsbBXI2rUvKvKK85CLP9Lt8cRP2Mg16Hs30vB1J+c7By
jprfBn/qaxwY9vKaZB9Aec7BPb+WKTm3qb9xcMXWx2vVdcp3LjrP3c10vkx9
jouV7m82CBwo77nQfV9f1N+e+h0X/Wboj9S2p/zn4snflc/hSH2Pi/qToYmj
LpMHXGQl3Mt840P9j4sMftnW8/fIBy7WV+oLLlymPsjFXtcV0QtukBdczB8W
dzD7CvVDLtxrFrXE3Cc/2O21AW/n3aK+yMW/Tr9PObfIEy56tLvY5HlQf+TC
8/aNQdpe5AsXu9XjkgpeUJ/kYkT/3PebAskbLqxyJ7lN8qZ+yUVd6BeLOx7k
DxceMfFaHC/qm1yEXx195cID8oiLZwveSFVep/7JRc7vT7pJgeQTe79WTRb9
9KY+ysWs2RHtBqfJKy4SQ2fY8Y5QP+XCUHbVWW8r8ouLpvNa1xP++/sTe/5r
BhYrHCbPuNCqvhod5ET9tQ47DJ70mH6GfKuD8ondI2depD5bh0t6Bq5S18m7
Oiw8cFnfz5P6bR3ULDTWF5wj/+rw9od82x5n6rt1GOqxYd5ER/KwDpm3k7JV
dlH/rYPnmfOzVu8iH+sw4PVFl+k7qQ/XwUZt8unWA+RlHXgjOBu78kPcj+tw
1MzzDNeG/KyD1KTOiyp7qC+zx49aOqzFgjytQ4+rybUztlJ/roOK/ExjgQn5
Wocx4dJ3Nq6lPl2HaU+LuSuXkbfs9Y7pE/FYl/p1HT7/jrmzW5v8ZX9/4MxJ
95dQ365DDMcir1WVPGb3p5noGzSJ+ncd+oT/Cvg+kXyuQ2zgedl0UB+vwy2r
8IadC8nrOkzR+6azegX18zqc032w/54u+V2Hcdgt2KtJfb0OlzvSG+csIc95
mFTjNjrDkDznwcRvzanRxuQ5D2k+45UtjMhzHpKuZWkw68hzHna1v3ilb0Ce
87D0gdznyxvIcx5utMlsFG4kz3nwCVlmsmAHec6DnmXkdLNt5DkPwy8nbdXa
Tp7zUDhrRIrdZvKcB8+3s4akG5HnPLz/6BTw2IQ85yExad352B3kOQ+mWs9U
y3eT5zwU1WzbbrSJPOfh4ocnxbEG5DkPoWZ9zV7rk+c8PF/t05CkT57zcEHr
qP0EHfKcPZ+PBvlOK8lzHk4HSr3ab0ie85B8pOj2gBXkOQ/20v6G4f95zoO/
/3qLQmPynAes32Peqkees8fztFrktJg856GxPSRmljZ5zsNla5GD/jrynAeh
8Myu5ZvJcx6KT+k+jNcmz9n7I22b/c+QPK/HKh6nfIw2eV6POCWjorvLyPN6
SNXpxn42Ic/r4bZuzD/OQfK8HiH1HP1WO/K8HuOymzVNj5Hn9QgNUhoz6TZ5
Xg/NV53TL90iz+sxxYhZMtydPGeP7zy50GM/eV6Plt7Oel93kOf1WCtj5Zdl
R57X4/vu17kjt5Ln7P6POzzoXE+es9sHjhvgrU+e16Nk6dzFphvJ83pkXHQK
qzUkz+uhfqcheag+eV6P6SbcN2/0yfN6DFo5crneBvK8HjeLerh5rSHP68FT
HPpAsJY8r4exMe/2UVPyvB7SJdHFv9aR5/XY3LEu7Pcq8rwew/2G62msJs/r
cf2pb34TyPN6+Fwy73t/DnleD4deRrEbJ5Ln9dBo+HqvRJ08r4femRbLKHXy
vAERK3fZpo0izxug/KdQ8aYyed6AQ/Nn6QwdQZ43oMjLK1JtEHnegF9vEhZn
ypHnDajaLrVCZSh53oBXuiar3owgzxsQm+y3bIAKed6AOO+4HosXkucNOC61
kXtMnTxvwN6y3x9PjSTPG+A99tSfu0PJ8wa8PfxAxlORPG/AjvBrU7+OIc8b
YKuz6/eK+eQ5e36ZX6xE2uR5AzaZzX7aaEyeN8D14s+FOqbkeQNaz9QeCltP
njdAPTqkZ/gi8rwBizujZx1bQZ43oH3ThdK568nzBlzwyRv6Rpc8b0D8jf6u
xkbkeQPGDnk2K3QZec7erz1yl8etJs8b8MFLc+8lkOfseLlOlX81kzxvwL+Y
5NvWs8jzBkz3TByjMYU8b0DhjmlhbVPJ80acOfbB4OoQ8rwR5gdelB5UJs8b
cbT2mWbCfPK8EYZhyrnzNpHnjfBb3mdP3UHyvBHJHTevS9mQ540QDOB0Rh0l
zxux+p66stoJ8rwRK0L32ysfIM8b0Rl/Qp13kTxvxOaMmhnbLpHnjdi144jl
ggPkeSPmGjf2Vb1BnjfiabPLa0tf8rwRV90bCmfcI88bYTAoPqTalzxvBH+q
lWzHA/K8Eep8i49u/uR5IxT2zJzzyp88b8RW6fTEkDvkeSNcX9o6RwWR543g
3Z77SPG//w9rhGX+l/v5fuR5I6bMiYoY70eeN2Lj14jYG0HkeSMOG4XeXhtE
njeCM25PgdoL8rwRnkcDfC7HkueN+Dlikpp8AnneCBWnqYPPvSbPG+Fu2T4Q
oeR5E7weqTdNe02eN0Gtac3XqifkeRN6v4q64BxEnjfhm1v4hYL75HkTsrLP
ymbeIc+bkMkMiczwJc+bsNZu2Kh8X/K8CR3St57b3ibPm2AXv6lT9Tp53gTF
ZJ/em3zJ8yacOt1wYPYF8rwJX+408C2OkOdNaNMsG1r83//fNWGmwHB1qyN5
3oSxBrEqBY7keRO2pv7bdvMQed4EC+/wHiE7yPMmuB7T0NrpRJ43YVTnu4N9
7MnzJryxKzgeepQ8b0LY8faqHrbkeRObg3FDpp0kz5sgzefKmJ8iz5sQDE/9
qovkeRPS7qYNL3xJnrP35672lj3PyPMmhMtHfe76e5fYc/Z+F397GVRInjdh
9Tin0DNZ5HkT9Fbq2G3OIs+bIAw/MHhuBnnehJ4NF1ctiCHP+bh5KqXfwwDy
nI8szc5/oZfJcz7W6Lqd7XOSPOfD+UFKgPpV8pyPPT/q1sw+Qp7zYaUzzLzX
f5/P+ZCtVz4y0Zs85+PBPlVl12DynI8DAQaPQkPIcz7iwr1v570jz/ngn5ln
vD6KPOejKax04Okq8pyPb3kpStEZ5DkfLiXBMr6fyXM+dml5mp747++ffGif
OxiokUyes9dzxHC/339/D+Uj/WXeTZ+35DkfYw9VXdcqJs/5aF89ZU5HHnnO
x9ys8H+W8eQ5H+cG9Uidnk6e82FccbkjPIU856PuQJKP2jvynI9Gr+NXrP/7
eyofIdo3ZG76k+d88OLqvmi9I8/5eLY3KmVUDHnOR8OQWT0PRZDn7P26OiHD
/BV5zodoqaef0n3yvBkJ7nJB7sHkeTM6N/qG7X5Cnjfj0cjszpY75Hkzju3X
OCntTZ43I1p3tMyxR+R5M754n1KPe0eeN8NNtjR2xkfynN2/1sBR6e/J82aY
7lrS8f0Ved4Mkw/v3V8+Ic+bgUXTH2X7kefNaN0ZqLToLnnejMHzPlvcf0Ce
N2Mn9/hMmcfkeTN+9VyaH/yUPG9GBX/2yYfPyPNm9Fp1rdkzmDxvRqz5OIeB
SeR5M7Z++fjtxmfyvBnzj4wX+cSS581QcX1w0yaKPG+G6Ljs1G+p5Dm7/14J
CavTyfNmrNvOUTUqJ8+bYWeqmmWUTZ4349r2qLNGxeR5M3QHTNL+2kSeN+M3
V233hL/keTMerDUfky8tknjejOM3VwyYKiOSeN4MLYcXPeJ6iiSetyDui7E7
etH3MVswfFlDZIGUSOJ5CyqX3X3M/CXPWzCTsfnaye5f7HkLPniX8kf8Is9b
UBxlwtf4SZ63oPfNg762beR5C5Q35Ro4icjzFhiXnteZwCPPW6BobVQ4kUee
t8D/YfJFrzryvAU7Vl8ZM6+QPG/BZKs1WbJV5HkLJgyvlXWoJM/Z/fe9NrXr
eQ+x5y3QnlIZvDOPPG/Bcp1XFz99Ic9boH4o5Ee/3+R5CzYt6/N6bg+RxPMW
LOs02pcjQ88TtaC6qmZkR0/6/mkLQhSUE53Y94s9b4HjLzve26/keQuWSidl
abWR5y1Y0DJsZe9a8rwF8UOm2fzJIs9b0Ctq/jqFcvK8BX+MJ//YU0GetyAx
9tRh/SzyvAWhf87+SMsjz1vw1vNupyCVPBdgM7NzyNZ88lyAQeqrub1LyXMB
Mi4UG/YoJc8FSH4pPNVZRp4LcPbmpUzTUvJcgD4G1sKmDvJcAGv7zpKh7PWL
PRcg+q/zt/wv5LkAbbKVA2M55LkAmubDvLu+byr2XACzCyX9dErIcwH2b9th
Z15MngsQPHruPrs28lyALxWbfuXUkecCHHqgl3CxnTwXoCDBsr3r+S6x5wJ4
7JyktZSd32LPBbj+2ux82U/yXIA7Zj3udc1/secC/HBT/TS2lTxnr6fNX4/7
lzwXQG42x/Pfd/JcgL3xGxW/fCHPBdhdyf3ep5k8F8B/b3poLZ88F4CrPrR9
RA15LsDh+kuum5rIcwE+3B28aks7eS5AgkqzMJ1Lnguwa7Kto0sxeS6AwcIn
Ut945LkAdbGLP8ZWkuet8E5Zmzy5iTxvxa0s4T9VHnneCv3C5WOUG8jzVlTc
CzLt1Uiet6L5x9UdT0XkeSuEOWvtZ34nz1sxNPTgX/dW8rwV6qn9fKt55Dm7
/WL6vh+/yfNWuPZKizUSkOetGBQsrXe+mDxvxc4R7SsVqsnzVoTG2JruyyTP
WzGm5MVer/88b8W5upJdK5rJ81bYnX4rfZ4df7HnrfCc7Ln9Tzt53op5BffK
E6Tp+9St0GksShjJ5qHY81bEvQ+TU+4vknjeCt7HMKj1o+cFW9HT6ICfqA99
/7oVe1MedyrJ0/NMragfOG+Hk6JI4nkrDrU4pnBHiiSet8JQxc6rTpG+r92K
vLsHefP60/f1W1Hl7jfpUH96frAVd3j9HqSy7xd73or1Z2c6OAwTSTxvhVl2
lrCPMn2/X4hG5+O5WuxrceALMeLFrvieKiKJ50L0je5zIJx9LfZciKopMgrn
hogkngvR8tP4QNQgkcRzIYr6uCwYN1gk8VyIyMYp/l3bxZ4L0ZneZlU9mJ4f
ECKs+MkqRyWRxHMhSqJtzvcZKpJ4LsQg/trrr0aJJJ4LURv7c/FNJXreQAjD
QoPtWYPpeVIhpOQVFRj2/oo9F2LZ0d0vUtk8FnsuxE/90mOCdvJciLE3nvl3
/CHPhchY8y34JjveYs+FeLE3eqGLHD0vKkTCp/axqQPoeQYhUm5LVzayr8We
C/FUw6Fm8RB6HlaIkVt+mjWz91/suRDuAvXDPUfR8w9CDLh3RdFvuEjiuRDZ
YW7n3dnXYs+FmHWnZ5XveJHEc/b3rXgVL8bR8xJC3B+R57liNHkuhEpx3Fz/
EeS5EF+HLup0HEGeMzC+G6fXdX/FnrM5MvvFo98K5DkDnajKdZ/Z+Sv2nEFD
5Hic/M9ztofcdhTwfpDnDHK/1TneqyDPGTi6HKoJqSbPGZwKa3tnW06eMyh1
DdTsXUaeM0h46xZjmEueM5jaLiXQzSfPGaw5t2u5cSV5zsBix6PUKRnkOYPT
AfF35paQ56x7zOAlSbXkOYNjq4VyAg55zjrLtTg6oZY8ZxDEkXe+2UCes73p
TWfbuN7kOZvTG4eoXupJnjNQ42TfPfqf56zLuyrTv7XT53MG9n8FnMIf5DmD
jU1FTu3fyHM2h9TlMj1ayXM2R53ylbs8EnvOQL746X2dv+Q5g35tS/YKfpLn
DDLbPlf0+kOes/dtyzjFFULynMGvBTPHDKgjz0WYY/jA5V8Rg/8BAXAamw==

      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1:eJxV2nVUlGvXBnBUVERCCeluUFQMQIHLBBNU7MajvordeuzuY6BgIIiggIEF
CKIoId3dzAwMzTyD3X43zGzX+vzHNWuGZ5647+u39wajFZtmreouIyPT3ENG
pvP///9PjJ/hHQXTV8xAxEjL2vlfOenr5Tgy2MPqvrwY3w94v9ruswaWNWvH
pKjQ5zej8uXdH20aYuxVi3Dj/7sdJQvXFsYNoM/vRoRDvrpZfzH2NJsPlXu4
D3dX6ij0VaafP4QDyXPO/KMkxuhaj/N+G4+gtMrJ95gCHe8Y1kV+tstkr19O
Vuhuc/IEni+x2/lRjY5/Ck7VOaUn+onhGJm2Mz7wDOpUrYKX6dD3nUPo8Psp
7npixOgfb50Z8x88x6otqNSk778IVM8PsDAUwz/Z8MnWNZcQ9qo/v8mAzucy
Gjf8dChi71d+6/pCmOzVKV5sRud3BVszTjvtYK91Bleb9jp8FTV758Y/06Hz
9cWpyXHiN+z7Fq7sOiJGVy/aM1KTzv8attlqXj7I7t+N613/cNIl0mijCl3P
Dai/23ctit2/8pwvnnV3b+JBXUP8PHm6Pn8UFp9y/NRHDC3ZuUqDnt2Czv3V
fnW96HoDUDbmtmb/LxzmSw6Ic04fB+7/+7xv43v55QU17P1p9qfHLhfexrlZ
Beb/vOek9yMIYxOPh29kx2+b2XnEIGRaXi4u6E/35w42L1i49xJ7fmfXN/4I
77iDUzl91xv0pvsVDB+rG5cesfOxOTmAXUIwlCYkXlvak+5fCHJNY59kss9n
Bk2M/vArBGUdjiZzZel+3kXiMF2r1+z7O++Wpuw9jNGOde0vS/f3Hp5eXxTH
+85BvjR4s7N8KJz79Ln5thfd71CU7hZ992br7X7n5fYLQ7nCphLTnnT/w/C2
6cVFS/Z6SufhBoRjwp/Hs8Jl6XmEI2CS0ouYvmJ03W7d+/gTxh+h2Yuez31Y
LpW57sNed969POMHaF6n9Nb2Dyd9Xg/wpV53bzDbT1aLLyR+snyIic9HDvrE
cdLn9xBz87ebjRBzSGdH0x78CImH5Hkv2zjp83yErJN6AZaZHNZcat+HERE4
c3axY346J32+EQgItblzp4wDOzl2yY8RY5y5e3kJPe/HiPM1V/tQy2E2Wzzs
keL+sd3h4e20v5/gwUH3D6fZ+Yawu1ca/ARvg7iYZex6JOvhCaJco3ZuY+vl
46+i3c3mT5Gf0jH2QS/aL08RHXk13Yzt9wldC+Ap/NU/ZYzXovXyFO/yw/8E
G4vBHl7nBcFylf2HWm1aP8/QbUqqp6O+GJLTe4YD+8KzDc1pPT2DqOl89CQb
MYZ1/XuOYl8Pz7O2tL7Y6x1Dvr2yEuPo2wy2gp7jrMkJy3hrWm/PoVTqn2DF
3i9kT5/dEwRPXWReYEvrLxKDY/dqbGOfN+k6YCR8DDze/BlE6zESZ7LHdd/I
Xm/regBRiLwd1PbKhtZnFMKjHiXPZD+f9MmSPeEomC3b6MDZ0HqNhmCFnOC/
IWKoSE4Q119UF6cPovUbjWIdz4nK7Oe7zi4tGovtLw8ZayGWrucXeN9+bf9C
9vrZLS40ZeoLfDTazL00ofX9AsIhbus26orRveuCX+Do8qEGJ7RpvcdAo29S
L332+VmSBYMeU+QLf5nR+o9Bm5z6y5cs7+50Xm5RDLy256+2VKP9EIvS4fss
c9n77zsPNz8WzqsyPq8xov0Ri9vnCp5/Zs93XOfyr4yFzP+6YZsh7ZeXeDJ+
y8q1LH+7lu/Slzh5OEZzsCHtn5e4Ef97nDq7Pv6/nQ/kJX5d3TXuiAXtpzjo
9NReYGMpxtCuBR4Hp2yv8XOsKA/Z63QPW73BYhy+Op4tmTioBw4LfceuV7Lf
XmHb7v7K0ez78427HjCitBZFfNOi/HyFWmGblj/zw6gz/dtfwdJzc7QMy1fJ
fnyN4Z/e9vnC8mdL5/bY/Bqug3P6rdegvH2N302ZLq4szxM6n+6H19B12ph/
h+0HyX6NR0yPoB6/WV72k2xIfGxJP95HlfI5HiPFv1+8Vhej6/Z9i8eq6QlF
O1j+S/bzG3Qc2bDsIXu+Xae37w3+NNxbHcmer+RwbyCIsnXoxr5P4vhbDE+b
/7udPT/Jfn+LuU393tuw98NSprId/RbzAlIyT6tT/r+FivoCwTF2/TPYbmRr
FGsWh4V+YucryYO3qHc+c/wXO5+vnfokv4WtwQWfHF3Kh7f4XXhqdRFbH7e1
OzdEAuIeqno9H0J5kYBex6f2em8nxqSuB5yAIP91sSojKT8SoHjW/nAee18c
2nmCCUhIeSi+bEd5koADJluHKrP9eq3z7DIS8Ko2JcpgGOVLAgKvjZj40EGM
zsU1WSER8k98hEudKW8S8Ur3RKL3KDE606RgeiLuZ1449r+hlD+JuNvP2r63
oxidq4UtGWy7MFxvszPlUSLiH9yv0nERo+ty8xLhNfnz7XJQPiViXf2Deyen
iNF1OJUkuG1+53p4DOVVElSSP778NFqMrjjyTII4aZW5iT3lVxIeHQ4c+WSg
GJLyIQl2ei+2VI+gPEtCRLH/VCE73644KE1C62nHo55DKd+SAP7AFUEsTw52
BU4ylnhXTo40p7xLRq97Hk5L2fEsujZQMgxEgxftd6b8S4b1q7Yjc9jxcrvK
i2R82Mq5jbKiPEzG5dPVDcUsz3Z1bofqZLhMWPDj0mjKx2QkaT4tMGPXY9C5
nPXfIXh8qaLQjvLyHbbLdTNXYq9TO5ff8nfYMvrI8vhRlJ/vII8KeyG7/5u6
AvIdvNeqnDhiT3n6Dle6zdUvmyiGRteGZz/f1+tczljK1xQ0rA/tGcjud9fp
mabA7mxrmsk4ytsURLZe3L9pvBiru/6lwOKpaVTMaMrfFKTE3W0Yyr6/s3hi
CQuN6EeZ6SMpj1PQt5/GYmP2fmc67m5OgeL3Y5Omj6B8TkX2nmkvddj9W9p1
wFSY7vrPeJYD5XUq3OQX6P9mP9+rK6BSMWHhqjtnh1J+p8LRa8uBpex+dz4N
tYhU1Ke8+THOlvI8FVai3Vpf2f3vqu64VDzX9G/Ss6R8T8NXlaRXVszP353b
bWgaquJvQ2BEeZ8Gu/hd28Us7+51LuetadDt7+u2/299zj4f4B6hzfa/u+SC
0as2+rtxP/IgDcN1v8T7srz73Pk4PqVhhcu5jbM0yId0WO/8cDOR5XlA5+Xa
p0Nne7zdDSPyIh1bKzfubGN57Np1A9Px58WC5iQ98iMda5Wmyb5hfoi6eEjH
uQlj8wt0yJN08AxGZc1g5+vbGe8/0nFklthFW4d8ycC4q/NPjWD3ryuenTOQ
lfZKa6QZeZMBj5thb//Hvr8rXg9k4M+7iOUlGuRPBp7c1k7vzs5HEn8ZCH6Q
vOm5PnmUAcfBW04sZ/upK166Z8LjkP3HKiPyKRP31O9f6s++r2v7js/E4odJ
n6/bkFeZ0K4qUZ5iKkbX9jieibFrtmvBmvzKxLS6FWIZtn8lyy8TxgdUXI3/
epYJz55Pl8uy9VLc+XjlsjDRsN4reSD5loWxG668WMLycH/XGWZht8k0h4Mj
yLssDEz9b5gJ2x9mXQswC4tzPoz8PJ78y4LKuNgsf/Z+dlbXPzwN3TD+mgt5
mIWy9wtOHmX7ZUdXoGYjZOnHyS725GM2/lHaOyGHnZ9e14LOhr2a3r/LhpGX
2RiqvMj7D1vP77raq2x8vlmWcn4k+ZmNXxX6mway9zd0BXQ2vHxFdnIjyNNs
jE0YXbGYHb8rrtRykGBWc7fTA4mvObiUa5KezZ5PVxzMzUHcoaOK/xqTtzlY
32S0pRdb/5L2KwetzWcqizXI3xzw3LpXOjLPFCQbDhgtrP3w1+MchD3Xqm1n
661ruWjnwm7UrfoEVfI5F0t4NROnsdddj2NxLv5833D9n37kdS7a7iyPzWf9
q6Q9y8XpIb8vDJQnv3OxepPJu76s/+g6XG0usgbuGV7wg5N6noesjv/0t3/k
pPs9DytM1KoeNlE9n4eZSwsM21i9L9n/ebBZKV7lW8RJvc9DUIzWXNtETpoH
efguUD59PJ7q/zysVPnabPKWk+ZDHnwOTXS7mspJ64E87Kix1YxnryV5kYdg
N4+AihjqF/Kgpnpl14ZnnDQ/8jB9wZn/dF5y0nohDzOSf5lnBHPSPMnDqUkL
h1zxo34zDy4zovSO+nPSfMlDpN+Mwn/Y5yX1RD7uyF/3ETzkpHmTjwmWax5l
sc9L6ot8rHj7fdG6c5w0f/LZeXlVH9zESeuNfOg9vjq97hgnzaN8TLsyeV7k
fupv89GueviCzC5Omk/5mDr6kbnaGk5aj+Tj1QSt+08OcdK8yodGgcL1Xezn
JfVJPvLc//0k+peT5lc+wpwLPcxOcdJ6JR+CQ6P4ZeGcNM/yYSs/1+JIHCet
X/LR/3ZGeTJ7fpJ8y8eIV+9+FLN+TxI4BTilvEPlUAEnzbsCKH4z6/eulJPW
NwVYcaRqxO0OTpp/BVhr/uvuGNbfSeod9vkzer7gcdI8LEBgwOifQvbzkvqn
ADurbFsLazhpPhZg07QDarfYa0k9VABr96lV8ez7JXlZgLtzLOZZtHDS+qgA
d2yePPrdyknzswAbRYrPDVl/K3m8Bagp3hd8k61fSZ4WYGt+dpFdD6qfCjD/
28SGkm+cNF8LIfK3cTd8z0nrqUIMGCazbhU7niRvC2H8Rzddjc9J66tCtA92
j7di3y/J30IMTd/9y+ALJ623ChHXlHaouJKT5nEhbvjP1yrJ56T1VyH2TCmy
rCzkpPlciFEXrb4/ZftFUo8Vou+4FvPU19TPF8J5beaW1SmctD4rxA4ZkV53
th8k+V2I+T8//Xs8lpPWa4V4Isu/vi2Ck+Y5e706KJLP9oekfiuEr++Db7Xs
+yT5XoTn788888nipPVcEQSrYpdpFNH8oAgJfUcWOrDnI6nviqC8cHjBG7Ze
JPlfBIeQ4rpPZZy03ivCS3i6VLO8kHhQhHN+hefL2fVL6r8i9Cup3LNZwEl9
KEL6k/56279y0nqwCG8ytAyWdSMvilg9uzs5+DMnrQ+LsGOnUkkPdnyJH0Vw
iR8uvsqel6ReLILMoK0aPdjzkXhSBMvzaW2B7LWkfizC+ge3fmSz1xJfivHB
arDq2WpOWk8Wo6y9SndHFs1HinFyhcXgmyJOWl8Ww/DfRzKx7Psk/hTD12L0
4bM/OWm9WQye3oabmz5wUo+K8VZlZ7JDIyetP4vxJNdaqFLHSX0qRoK844ad
7P5J6tFiZBQstHuVQfOYYtzT9+mbyNaDpD4thty+xfNbizmpX8XoH3Cprb2C
k9arxdhrYZysxs5X4lkxdv/a0v0Cy3dJ/VqCM47LhOq/OKlvJahVujCq+A8n
rWdLYLsxvha/af5TgknmmXt/yVF9W4IeLx57yyqQfyVIzB62XrUn1bslmH3Y
ymBUL/KwBEscfppPVKL6twR34g70tlUgH0twb55xHb8n1cMlSK87kHXsJ82b
SnB4t/nNdex8JeViCV4GGcNTzEn9LGH1nONybXa9knq5BAOWe9dZsfUi8bQE
ziefDk/sTvVzKc6tXhb0nu13ia+lEHhMMwllz0NST5di+I7t3rHvaL5Vio97
FKMbIjlpfV2KzLwd1o6POam/pUgb/1Ulle03Sb1diq2bds7TZPtT4nEpwnSF
J5vY85PU36UYeme17UCWhxKfS/Gz4/i+sywPJPV4KQYVD8yYUEnztFLI3XMv
nsD2m6RcKIXfkKSMQLY/JX6X4nj/c6mP2PqV1OuluCbYeqGshjwvw8xpjQlp
heR5GW54etQNrSbPy1A12+hxRBZ5XoY3Roq6ZuXkeRkylBq8qurJ8zIMP3Ji
UmEHeV4G1YiN5w93p3q/DK/1Fo350536+zKYRPe3mP13/lkGg7ez0uW7Ub9f
hpuqJ2fMlKV+oAyr/5l5+EZP6v/LMDp9qtus7+R5GZy7D1JU7UbzgDL0jN70
9HhP6hfK4OMrTF/cQZ6X455lv+LV3al/KEfY0qbzKt1pXlCONU7L+inKUD9R
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
RpDnHBK8buh/iSHP2T7+7mca8EKM/wOPP5hF
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.002777777777777778], 
     Thickness[0.004], LineBox[CompressedData["
1:eJxV23dcze//P/BKUshIyCxk1lvIivKQkZFRqWRG9iZ7jyhbZGRnhJRQtDS0
pdLe85zOOZ1RZ0hW5HvVOc/P7/brn/ft5Zxzva7XNZ735/U87zPAbYfDOg01
NTVRGzW1lv/+/39y/AlQ5M53swPCLplNV6frVVi9YPKbsD8y/D62OXqPz0bc
WPKp4HyDTPX6Tvzbekpja5MMh/WDZ3EO7cHDKeWNp7XkqvcfwMf7k/UWdZHj
oGjIaO2gI/ivc3nSKwNq/wQ80swKl/SRY3LVwku3tp/CazXXpk095Kr2TmO3
5qqtF7vLETWno4aJlyfKZiQlD+lE7Z9Ffv6PgUHs2uLdp32xD8/jaY7VN73O
dL+L+DinR4WYfT6i/xmJfcRl1OuZqkXo0/290dz2oMZSdr97SUZv3DdehWTm
HMfk7tSfa7iZ1hhQxfpb9qv1hpAJfdUn61P/rsO0qM4nmvW/j1mFsdbJG3jV
41LuaBPq701Y7jPSTxwsx9K1rS1iSzxC2plQ/30x6HJ3Y83/5Lhzu/UPYV2m
j3g+nJ7nDo7nRTY9GCJHyZcfi2r87yKn4y+9SDN6vnv40SYxWM1Cjl6azp3+
C7mPpJeXm7ZNoOd9gN2nur++O1EOF2WD+N7QpePfyfT8friVIPNaxj4/b8I5
61V8PyzrOPz0i8k0Ho+QuHDCYcsxctTZt7T4CEObd8V7jqXxeYzhC02LK9j7
L2ytbQpQPMZ4xyDtFEsarydIO5wQep69buLVgz3CE8zpcq/3vMk0fk9x0CP7
ggZ7/vRHM8Ma/j6FzfjFLpxhNJ7++Olx1cqDjUfLaBloPsNG9S1b946h8X2G
PtsnFTWNlqN90ZOdVu2fw9TXbLChOY33c2jkb+z2kL3/ZcvjdnmBD77hshXm
NP4vIJ46kLeT3X9uS3M9AlC18P51v9E0HwFY/PiGuy/7fOtw932JyLupbiYj
aX5ewirQVZFhKkfL6GUPDETWV3Un4WCar0AsnH7ZRcjaG778SkLjsCBo/skt
PD6O5i8IlQXBk+az9tJYa73NXuFo1bI0wzE0n69wbMjF38vZ9car9UcwLhiz
R4b2n/2/+Q1G0pNRrs5sPbHOsUd+jaa0Jw51I2m+X2O01r1TNez+jmzxsCnF
ZttuIb/+o/l/g++fRL3msv4/ZaNX9OQNBm+ca9jRhNbDG+zK3eoWxz7/7W/+
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
9tPe1oCaiUubFllenkI+ZsLp5un3i1k+3a91QWdC4W2x0nAKeZkJ7ZF9XcMh
R3Lr8SoTmafDb563JT8zET7GZfJnNh/bWgN0Jm4eiL4XaUWeZkK9NndbPLtu
DVf6X5DV9KDpiy35+gW7o9d828byqdZw4PwFQ8eHNl6aRd5+gePli+5pbP8r
j19fcGhZrw5e1uTvF/gueD/zF+tfR+WGw4Dg0z7po8njL2iTJ8Bvlk+1Lpfe
WdC6Yfty4jDyOQsnLpncGc7e3zody7MwWZI9qGIseZ0FjZFVE0aPl0N5PMvC
s/bnKk+B/M5C8kTNEYPY/Lc2V5WFyqFDrYbYkOfZECVomi2bQfs9G50fXHwS
PYN8z0aOmmnJOVva/9losHNpbjeHvM/GoPO8d9nTKR5kY82mgzpVluR/Nt4U
Psx1tKL4kI2Km5zTK+0oH8hGKNLDWuKfMl5kI+Ln8wc75lJ+kA2B45RBjfMo
fmQj5uz5jXPnU76QjeT5XU+6rKB4ko0eThdu/3Gl/CEbeUftuz9dQfElG/1l
p5JmraF8Igc3d3devf9/8SYHvzstWTjJjfKLHPi56pYOd6P4k4MyI1OJx3rK
N3LQSX3Au5BtFI9y8PWG3eqpOyj/yEGiX2bHKXspPuUgw/tZ6OxtlI/k4KHn
qi+5Oyhe5eBK910X/+6i/CQHIQ9nRWUfpPiVg9SGyHVfj1O+koNl5W83Wp2m
eJaDvDmpfUpPU/6Sg55DsXbsaYpvOWg3I3Cgz3nKZ3KhrWWYstqb4l0u0v4z
9jS4QflNLgr/qa08e5/iXy6Kg9vc3nuP8p1c/Jpy/qf+G4qHuRClmHT88Jry
n1wY39ts9TGI4mMubvhEjTv1ivKhXJxvUOjdD6Z4mYvIdZ+M14dQfpSLE/61
ThPeU/zMxeugs85fIuSqfIm1V3Bh35poiqe5GOV6R+dgAp3vcmGQdnXS3giK
r3k4t2a10bgkuSqfykPYwWfHYyIp3ubhmjCqgfOezoN5MLDom7E8kuJvHpaO
3VBzjV0r8608uPdxee0TR/E4D+G7cvc+jKLzYx42KVD09SPF5zxcEV/UeBEr
V+VjeRi3tscs+TuK13l4Ftx9QuYTys/y0Ll0UcNkf4rfeejvZRrg9JTytTzY
OCpKRwVTPM+Df21GuUcI5W95yNrZ8HZfHMX3fARdtT74O5TyuXwIfE89y4+i
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
Q7ZM5TmLg9FTZ/KzZKDfnR/E1RLbahn+D8O19+U=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time(Years)\"", TraditionalForm], 
    FormBox["\"Stock Price(\[Euro])\"", TraditionalForm]},
  AxesOrigin->{0, 0.927107851088642},
  AxesStyle->Directive[FontSize -> 13],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0.9391902600666199, 1.1808384396261775`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7236602880436587`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"True", ",", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Miguel \
Ribeiro\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\mult.gif\>\"", ",", 
      "img8", ",", "\"\<gif\>\""}], "]"}], ","}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.722960714661116*^9, 3.7229607231932564`*^9}, {
  3.723464308442469*^9, 3.723464310703356*^9}, {3.723660095669608*^9, 
  3.723660114005148*^9}}]
},
WindowSize->{1350, 676},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1093, 22, 69, "Input"],
Cell[1654, 44, 882, 20, 30, "Input"],
Cell[2539, 66, 411, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[2975, 78, 3388, 73, 107, "Input"],
Cell[6366, 153, 13457, 292, 238, "Output"]
}, Open  ]],
Cell[19838, 448, 429, 8, 30, "Input"],
Cell[20270, 458, 130, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[20425, 464, 126, 2, 30, "Input"],
Cell[20554, 468, 123, 2, 30, "Output"]
}, Open  ]],
Cell[20692, 473, 186, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[20903, 481, 2901, 71, 69, "Input"],
Cell[23807, 554, 24868, 507, 238, "Output"]
}, Open  ]],
Cell[48690, 1064, 360, 8, 30, "Input"],
Cell[49053, 1074, 94, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[49172, 1080, 10662, 314, 449, "Input"],
Cell[59837, 1396, 44258, 739, 206, "Output"]
}, Open  ]],
Cell[104110, 2138, 521, 13, 50, "Input"],
Cell[104634, 2153, 422, 10, 50, "Input"],
Cell[105059, 2165, 1959, 53, 145, "Input"],
Cell[107021, 2220, 14865, 403, 715, "Input"],
Cell[121889, 2625, 8227, 197, 411, "Input"],
Cell[130119, 2824, 521, 13, 50, "Input"],
Cell[130643, 2839, 898, 17, 50, "Input"],
Cell[131544, 2858, 14141, 402, 696, "Input"],
Cell[145688, 3262, 8939, 215, 449, "Input"],
Cell[154630, 3479, 523, 12, 50, "Input"],
Cell[155156, 3493, 929, 22, 50, "Input"],
Cell[156088, 3517, 578, 13, 50, "Input"],
Cell[156669, 3532, 15723, 436, 734, "Input"],
Cell[172395, 3970, 3649, 85, 183, "Input"],
Cell[176047, 4057, 667, 15, 50, "Input"],
Cell[176717, 4074, 4856, 118, 259, "Input"],
Cell[181576, 4194, 58477, 1569, 2140, "Input"],
Cell[CellGroupData[{
Cell[240078, 5767, 1761, 39, 88, "Input"],
Cell[241842, 5808, 284806, 4704, 342, "Output"]
}, Open  ]],
Cell[526663, 10515, 484, 11, 50, "Input"]
}
]
*)

