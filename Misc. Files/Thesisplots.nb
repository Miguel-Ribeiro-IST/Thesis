(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92270,       1932]
NotebookOptionsPosition[     91250,       1895]
NotebookOutlinePosition[     91591,       1910]
CellTagsIndexPosition[     91548,       1907]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"OTC", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"{", 
       RowBox[{
       "542", ",", "482", ",", "553", ",", "493", ",", "551", ",", "628", ",",
         "691", ",", "710", ",", "696", ",", "635", ",", "641", ",", "648", 
        ",", "707", ",", "601", ",", "582", ",", "603", ",", "595", ",", 
        "598", ",", "673", ",", "586", ",", "507", ",", "418", ",", "373", 
        ",", "299", ",", "283", ",", "259", ",", "220", ",", "197", ",", 
        "169", ",", "142", ",", "128", ",", "111", ",", "100", ",", "96", ",",
         "94", ",", "88", ",", "81", ",", "80", ",", "72"}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198416675989428`*^9, 3.71984168823075*^9}, {
   3.719841767814763*^9, 3.7198420285344195`*^9}, {3.7198434899295454`*^9, 
   3.7198434995532627`*^9}, {3.7198440225274506`*^9, 
   3.7198440771346517`*^9}, {3.7198443669816356`*^9, 3.719844375461952*^9}, 
   3.7198448735458727`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dates", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"DateRange", "[", 
       RowBox[{
        RowBox[{"DateList", "[", "\"\<01 June 2017\>\"", "]"}], ",", 
        RowBox[{"DateList", "[", "\"\<01 May 1998\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", "\"\<Month\>\""}], "}"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198438507519855`*^9, 3.719843874634157*^9}, {
   3.7198439290602884`*^9, 3.719843970895501*^9}, {3.7198440190486293`*^9, 
   3.7198440197041454`*^9}, {3.7198440849363804`*^9, 3.719844109849433*^9}, {
   3.719844141376822*^9, 3.71984414520886*^9}, {3.719844750358923*^9, 
   3.7198448167001143`*^9}, 3.719844877382455*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"dates", ",", "OTC", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198441125451617`*^9, 3.7198441213964033`*^9}, {
  3.7198441617578115`*^9, 3.7198441754794436`*^9}, {3.719844229437518*^9, 
  3.719844230264926*^9}, {3.7198447330560265`*^9, 3.719844733752367*^9}, {
  3.719844853618023*^9, 3.7198448801033306`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"img", "=", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{"a", ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<$ trillion\>\"", ",", "\"\<A\>\""}], "}"}]}], ",", 
      RowBox[{"DateTicksFormat", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<MonthNameShort\>\"", ",", " ", "\"\<-\>\"", ",", " ", 
         "\"\<YearShort\>\""}], "}"}]}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<June 1, 2001\>\"", ",", "\"\<June 1, 2005\>\"", ",", 
             "\"\<June 1, 2009\>\"", ",", "\"\<June 1, 2013\>\"", ",", 
             "\"\<June 1, 2017\>\""}], "}"}], ",", "None"}], "}"}]}], "}"}]}],
       ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{",", "\"\<$ Trillion\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", "\"\<OTC Market Size\>\"", "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"#", ",", 
                RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
             ")"}]}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.", ",", "0.0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.45"}], ",", 
             RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}]}]}]}], ")"}], "]"}]], "Input",
 CellChangeTimes->{{3.7198446202696037`*^9, 3.719844636432369*^9}, 
   3.719844739636456*^9, {3.719844884855443*^9, 3.7198449645494547`*^9}, {
   3.719845063787086*^9, 3.719845086921872*^9}, {3.7198452399086323`*^9, 
   3.7198452777745066`*^9}, {3.719845308200681*^9, 3.7198454351503534`*^9}, {
   3.719845483719181*^9, 3.719845533787735*^9}, {3.7198456168954554`*^9, 
   3.7198458340200634`*^9}, {3.7198459125881853`*^9, 3.719845974802102*^9}, {
   3.71984623935226*^9, 3.7198462400755186`*^9}, 3.719846280737958*^9, {
   3.7198463391577387`*^9, 3.719846418722895*^9}, {3.7198464623713913`*^9, 
   3.7198464942670484`*^9}, {3.719846617467492*^9, 3.719846700352186*^9}, {
   3.71984676417568*^9, 3.7198467659195604`*^9}, {3.7198468652215233`*^9, 
   3.7198468900901732`*^9}, {3.7198469774734974`*^9, 3.719847200038971*^9}, {
   3.719847247922081*^9, 3.719847349881065*^9}, {3.7198473842802596`*^9, 
   3.7198474478325996`*^9}, {3.7198474897655125`*^9, 3.719847559735839*^9}, {
   3.7198544427467723`*^9, 3.7198544471334624`*^9}, {3.7212266199646435`*^9, 
   3.7212266392013674`*^9}, 3.7212269155462847`*^9, {3.7212269458958263`*^9, 
   3.7212269790618267`*^9}, {3.7212270168131833`*^9, 
   3.7212271056789484`*^9}, {3.7212271904548388`*^9, 3.72122729143129*^9}, 
   3.721228383178586*^9, 3.721325983670216*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], Thickness[0.01], LineBox[CompressedData["
1:eJw10D1Iw1AUBeAoFTp2qOgY7aAgQnQSqZBsjrGKPzikigVBqNWlVYhGrU4R
HAtVzNwpYBF0CoiQMZsVHTJZ/8A46Kq9N+cFkvc+znuXQwZWN3OFbkmShjov
rZ3HPc20tXibU+l7rQnPkeWmAavs0rMp8nmylziHrQVyavRW5ItkZaQlvES2
Zn9hb5nszKRfkefJ0c447K3wvIoOywVy3inCzjrZ9W3Y2uD+3w1YKXH/Lx92
t7h/X1t4m3zW2/MWWy+Tw6kMLO/yvKwGu/tkfc0Q5w+5v23CyWPu36yL85yn
rm7gGjv/9AC32NbjD6ywg670e2yfHf2Nwf0nZHVYh9Uq99eLcJIdVmy4dcT9
yw3Y4376pQ8rPK908QLXOPfuEx/4v3w/vBuEJw7IyqcKB3vcP23A05wHWROW
OY8m63Bkqf/I6pJM
           "]]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{
        FormBox["\"$ trillion\"", TraditionalForm], 
        FormBox["\"A\"", TraditionalForm]},
      AxesOrigin->{3.105648*^9, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"$ Trillion\"", TraditionalForm], None}, {"", None}},
      FrameStyle->Directive[FontSize -> 13],
      FrameTicks->
       FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
           (
           Charting`getDateTicks[{
            "June 1, 2001", "June 1, 2005", "June 1, 2009", "June 1, 2013", 
             "June 1, 2017"}, {"MonthNameShort", "-", "YearShort"}, 
            Map[DateList, {
              SlotSequence[1]}], None]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, {{
         Automatic, Automatic}, {{{3.2003424*^9, 
            FormBox["\"Jun-01\"", TraditionalForm], {0.01, 0.}}, {
           3.3265728*^9, 
            FormBox["\"Jun-05\"", TraditionalForm], {0.01, 0.}}, {
           3.4528032*^9, 
            FormBox["\"Jun-09\"", TraditionalForm], {0.01, 0.}}, {
           3.5790336*^9, 
            FormBox["\"Jun-13\"", TraditionalForm], {0.01, 0.}}, {3.705264*^9, 
            FormBox["\"Jun-17\"", TraditionalForm], {0.01, 0.}}}, None}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->None,
      PlotRange->{{3.105648*^9, 3.705264*^9}, {0, 710.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}], Scaled[{0.5, 0.5}], Center, Scaled[{1, 1}]], 
    InsetBox[
     TemplateBox[{"\"OTC Market Size\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{0, 0}, {0, 0}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}]& )], 
     Scaled[{0., 0.}], ImageScaled[{-0.45, -6}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"$ trillion\"", TraditionalForm], 
     FormBox["\"A\"", TraditionalForm]},
   AxesOrigin->{3.105648*^9, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"$ Trillion\"", TraditionalForm], None}, {"", None}},
   FrameStyle->Directive[FontSize -> 13],
   FrameTicks->{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[{
        "June 1, 2001", "June 1, 2005", "June 1, 2009", "June 1, 2013", 
         "June 1, 2017"}, {"MonthNameShort", "-", "YearShort"}, 
        Map[DateList, {
          SlotSequence[1]}], None]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}},
   ImagePadding->All,
   ImageSize->Medium,
   Method->{},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{None, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         Line[CompressedData["
1:eJw10D1Iw1AUBeAoFTp2qOgY7aAgQnQSqZBsjrGKPzikigVBqNWlVYhGrU4R
HAtVzNwpYBF0CoiQMZsVHTJZ/8A46Kq9N+cFkvc+znuXQwZWN3OFbkmShjov
rZ3HPc20tXibU+l7rQnPkeWmAavs0rMp8nmylziHrQVyavRW5ItkZaQlvES2
Zn9hb5nszKRfkefJ0c447K3wvIoOywVy3inCzjrZ9W3Y2uD+3w1YKXH/Lx92
t7h/X1t4m3zW2/MWWy+Tw6kMLO/yvKwGu/tkfc0Q5w+5v23CyWPu36yL85yn
rm7gGjv/9AC32NbjD6ywg670e2yfHf2Nwf0nZHVYh9Uq99eLcJIdVmy4dcT9
yw3Y4376pQ8rPK908QLXOPfuEx/4v3w/vBuEJw7IyqcKB3vcP23A05wHWROW
OY8m63Bkqf/I6pJM
          "]]}}}, {}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {3.105648*^9, 0}, 
      PlotRange -> {{3.105648*^9, 3.705264*^9}, {0, 710.}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {"$ trillion", "A"}, AxesOrigin -> {3.105648*^9, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"$ Trillion", None}, {Null, None}}, FrameStyle -> 
      Directive[FontSize -> 13], 
      FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
          (
          Charting`getDateTicks[{
           "June 1, 2001", "June 1, 2005", "June 1, 2009", "June 1, 2013", 
            "June 1, 2017"}, {"MonthNameShort", "-", "YearShort"}, 
           Map[DateList, {
             SlotSequence[1]}], None]& )[
           SlotSequence[1]], {Identity, Identity}]& , None}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
      PlotRange -> {{3.105648*^9, 3.705264*^9}, {0, 710.}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {"OTC Market Size"}, 
       LegendMarkers -> {{False, Automatic}}, Joined -> {True}, 
       LabelStyle -> {}, LegendFunction -> (Framed[#, RoundingRadius -> 0]& ),
        LegendLayout -> "Column", LegendMargins -> 0]], {{0., 
      0.}, {-0.45, -6}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7198446313003273`*^9, 3.7198446372935295`*^9}, 
   3.7198447404056687`*^9, {3.7198448334320755`*^9, 3.7198448596811523`*^9}, 
   3.7198449085165844`*^9, {3.719844949165448*^9, 3.719844965191454*^9}, {
   3.719845069054077*^9, 3.7198450874826736`*^9}, {3.719845250584588*^9, 
   3.7198452661755157`*^9}, {3.7198453579650464`*^9, 3.719845382369379*^9}, 
   3.7198454356437693`*^9, {3.7198454856676226`*^9, 3.7198455349848833`*^9}, {
   3.719845662216072*^9, 3.7198458040125675`*^9}, 3.719845834538621*^9, {
   3.7198459223477736`*^9, 3.719845953756496*^9}, 3.7198462841002197`*^9, {
   3.719846331396686*^9, 3.71984635534019*^9}, {3.7198464065963497`*^9, 
   3.71984641965071*^9}, {3.719846463327642*^9, 3.7198464953699837`*^9}, {
   3.7198466462636814`*^9, 3.719846701470033*^9}, 3.7198467667216415`*^9, {
   3.719846883846728*^9, 3.7198468907294135`*^9}, 3.7198469283665*^9, {
   3.7198469870767198`*^9, 3.719847200740263*^9}, {3.7198472504120183`*^9, 
   3.719847350582716*^9}, {3.7198473991233296`*^9, 3.719847448334257*^9}, {
   3.7198475093942003`*^9, 3.719847560283675*^9}, 3.7198550808872232`*^9, {
   3.721226622510627*^9, 3.721226639873274*^9}, 3.7212273358688107`*^9, 
   3.7212283859750795`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Miguel\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\\
OTC.eps\>\"", ",", "img", ",", "\"\<eps\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.719845881155136*^9, 3.719845882710074*^9}, {
  3.7198544516282787`*^9, 3.7198544545456114`*^9}, {3.719854822397788*^9, 
  3.7198548286280527`*^9}, {3.719854863427001*^9, 3.7198548870585556`*^9}}],

Cell[BoxData[
 RowBox[{"NotebookSave", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7198641526051674`*^9, 3.7198641579485035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "OTC", "]"}]], "Input",
 CellChangeTimes->{{3.7199330305985775`*^9, 3.719933061856498*^9}}],

Cell[BoxData["710"], "Output",
 CellChangeTimes->{3.7199330622443676`*^9, 3.7212266324022856`*^9, 
  3.721227337257536*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7212253504489365`*^9, 3.7212253530434895`*^9}, {
  3.721225412261886*^9, 3.721225414931365*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"x", "-", "K"}], ",", "0"}], "]"}], ",", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"K", "-", "x"}], ",", "0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.025", ",", "0.035"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<call\>\"", ",", "\"\<put\>\""}], "}"}], ",", 
         RowBox[{"LegendFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"#", ",", 
              RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.7"}], ",", 
           RowBox[{"-", "3.4"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<S(t)\>\"", ",", "\"\<Payoff\>\""}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"K", ",", "\"\<K\>\""}], "}"}], "}"}], ",", "None"}], 
      "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7212253347938457`*^9, 3.7212254550681753`*^9}, {
  3.7212255531934023`*^9, 3.72122559957314*^9}, {3.7212256297589426`*^9, 
  3.7212256462564545`*^9}, {3.7212256860666733`*^9, 3.721225804475669*^9}, {
  3.7212259571083994`*^9, 3.721225960245367*^9}, {3.721226043179997*^9, 
  3.721226075035633*^9}, {3.721226135905605*^9, 3.7212261420127816`*^9}, {
  3.7212262658634467`*^9, 3.72122632272884*^9}, {3.7212263649095454`*^9, 
  3.7212264096123643`*^9}, {3.7212264454828277`*^9, 3.721226584063252*^9}, {
  3.7212267124076476`*^9, 3.7212267795315576`*^9}, {3.7212268181254992`*^9, 
  3.7212268658435574`*^9}, {3.721227329984416*^9, 3.7212273316698227`*^9}, {
  3.7212280534380164`*^9, 3.721228124066445*^9}, {3.7212282024578466`*^9, 
  3.7212282030839767`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], Opacity[
          1.], Dashing[{0.025, 0.035}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQ7ZX64uKBl6l2DFDwfF1Y0n1JF3sYX4z7at9myRA4
X89SZOlcyRQ43+qC8YZJkiVw/oHZh017JVvg/ObG7oouySlwfkrJe8lOySVw
PscUz4UfPm6B87dfMHJ3l9sP50c037l1uPsInJ+/sVh3xpeTcP6nCddOMDKe
h/NPHDy2/7zNJTg/s9KTN/LNFTj/IKfR/zW51+H8ZYuP/JNSvQXnO4jtXRS8
7g6cr3v8zo5jWvfh/CsOwe9WvnsA5+dwZV+6avAIzj99I3wvX99jOD/YLeLh
kydP4HyzBd3hC1SewfkP/k2+klH/HM5/6nl+sdjhF3D+hpn3Ky8qvoLzl3Yw
d2pWvYbzvyZHvUrb/QbO53ZpC9oo/g7OrxF4yvMw5j2cr3Vrk8OdRAT/5uKG
kutpCL6ZucydswUI/ofY4NW7WhD85NUHPaesQfC93Oa1uf/BzQcApyCe0A==

           "]], LineBox[CompressedData["
1:eJwdzH1Q03UcB/AFAsZTtByJIfIkJZzAETOJ8E00CHSIPCne2RwQpEWFBCU9
4ADHZUfhgkMcU6mxiYAwxIfJDVmANyoRYUzmCQuIKB7cb8J4jPFt9sfn3u/X
ve8+HmmfJmRY0Gi0UPM9y8FZ1yU3SwNoNZl/y5ei0dBvKRBZmd0Y9QIr5yCK
bk77btlo9oaPNcnBXByu7u8+Z2v2tV3iMwEZCOTJOQwHs7m0E+2+H0IXU/Kj
E93s/0sOqrLbU03bzWbLdbL1Itjf8aMNxZpdTNkq88rxhO1+/bsDBoSHvrTx
qmcF7j/edGxPogG8+V1Wwr4KlK2Y+iQpBijTC8hnOypBZz64lJtu3lkOxldH
qrC5MRf0fPM/a7+RMtZFeAvbC2Jrn+2tQ81nahH2eZypa9WAGpX+yqmUZohq
S8VeoqdQxvy2+83O2+AkB/c+v28Ohvqfj+9P6cQNTUb5ncU51F31rzbeUCHk
nsxisnIePakljMBb9+AemblQzjKCt+m8Jo7eD2YwU3B90ojBB4OsAaEaf8x9
/6uYv4Cvf3/Dp8z5IWZfj+e7BC1C1sdiZPZo4TOzc/o59SKqGm/V2bAfo9s7
byC7cAlO5YMxXVY6lA1q0hO8l+F2pUFVGz0KKlEpsOhehu4yz8vq2zFcS2a8
E3JiBe83+JbkjI9D3Ft8YZy+iqhqm9C72yewpDryFb1zFfqy24vep//CqKBj
wemTf6H0OjXjMTyJxf5QlyLHNcyKvwjasPUfZFd4KvMVaxh9LZI3f3IKL/d6
Ok1wTPAXRrr3tE8jUdO45rpugrT+8ErI2gzmjv6UNVy/jomOiEfy5Cfo4Dbz
HdkEBb9w7LZW6dHWl7VPt58g99KjSsUFPW7u8X2xKZ4g65skzyNiPRpdJaLY
QwQpIXtDqpv0EGqFraVpBMEtzA9c7uqRd6BkzDafYLrGvosxp4df+HthNlKC
g7y2Lx3ZFHyat1gO1RGwOUzrpngKnm7aHmkDAestmSD2EIXNawlJUS0EgcuS
utI0Ctby6I/4CgL7bMFD23wKYwHB5y3VBJ1HjwXZSCkMX3zKUWsI5GF/tksb
KGgdmr3FWgLZK5yYqBYK92d2yCJ0BKKhRC5fQUFxeZuqcIrgZBx+sFRTkDuP
lMbPEmTvbHMRaym08oUJHhRBph1TEqGjUJ/O0CmNBEkqX0XhFAXJwID47BLB
XonkXQ+KQs3bZ49zVwnCi93VSiMFkSw2INBEsDu1msNdpXBum90CIQT+cJ4m
hMJ/wXzkCQ==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.01], Opacity[
          1.], LineBox[CompressedData["
1:eJxlkntMkwcUxQHJoiLb3EyxriA4eT80stWpwOkyApY5RajyqI28UQZCeGxi
2CjSGRChMsoGWnms7YLyGLhNTYm2PAI4ZECFUmqFglBaKt8HCNGxKfv29/64
ufnlnJx7c3Od4tLDEq0sLCwOUfVfD0k0DitNiQE+oM2vr5OYazkZN0kPBCfF
teivNRI0m9GyX+kcXKj8xOXFKgmfA9tkN+gJ6DVHxxnMJA4O+bZ+T89GTFWt
9tEYCeX1ro9L6QKUL7n1V/9CorCg5PxluggrkkNNvqdJJGST9GK6FPKNseeS
HxDYKGLXLy79hvwBtbkjdgF3h/YFBzsoYJLR7fYzniOyUKftKumGx+ThTe88
nUd6W5Z31cpDSN+XrIxfNGH5qrrP0nIQ3dw/ShUwoq+jRzHopwKjluFYNWXA
2Vy2bdTzERz5jJv7uHgWHZv2rTeljcHx7yS+O3sGP0u63+xw1sK75QY/c2Ea
LNr9n8JbdNBn1/uoG6bg3au71+MxiRRxuUScoscIK5y4SegR+W3Uh027JpC6
+UvV6N5puJnduZyaJ+jXRNx/u+wZUo6Gfjf9TIPwoMipmZkZRGcd82cy1WDW
lUTU7TZApDCGKu48hv5NxciZ/DmwrDQnfSyHMcselNC6jEjVdGbIXjxCa/Vk
7rDTPFjVBdvl53shK9pQ7H7BjNSnS0+i7DqxGh89n9RO3Unv1dy3Ww6bwEth
bXYEQhXXx+YFLfBTpG/tYRBgbbE21fi24NzBqCGtEwHHqNS1sOlmqPZ6HbX2
IqBf9rNvRzOu2avYESwCMS4TcSVrjXB7af/p6zME+KWOhGfGTQTe+n0PW05A
yZVZp3Gl+Mq5luApCNQ12NKcNkvRUFfUnNlN+VdzXEfvSWDzI9dT/Ce1jzAo
xJ8mgarQ0pWcpuZ1zglth+sRw/vCodKGhAWHwzxVWoO8d2e3TJ0iwV/kxU/E
i+Chvc3SxVJ/JZeavu6uwLiEnz2WREIvMKdvda4Acz9DN5BBgkXPzQs0lGOR
F94oF1B5AjfPE8NliG/sYIuaKN21UrigFeC9HOE3wjYqv32X2FFcCGUAr+3y
Hcof2toQzrsIhurV9gIlxcs/FGYp8qF+tceYNkJx5QajzcMcCDpff3B2nOIH
DpaZn2fB90r/sYQJKs9wYIdmIANXdybfjTZSeoa+6rAsGQGmj8wnFijupPVv
uxWHhdtWO48vU+xyba2Dx4U4byjsyEuK+946HZ18HCFBNZeC/6G4dcC2v8v/
f/wvrjzcPA==
           "]], LineBox[CompressedData["
1:eJxF0FtIE3AYBfDlyEpT1tK8MNTZkpqVo7YHE7WspNCV2xwl1DLFKLJcoIEF
kcZ8qFUuK2vNLmxa6GgrTUZMHSWZkNo2h4N0ZYTQNMy5i87NVRD/88Hh8Hs8
H7OsSlgRRqFQ8v7mX4/OMHxJ1N+5lP/XYaYqVCvh+m4nO3E1XPLI3N8cAXOu
GiSxUbDjYMMdGh1+s/3c1lsxsHx98YfIODhrgukPZ8APpD0ng5vgKrFm6dJm
OH/XjXsLbNhDLRmcz4CFzW6OMxNe25tOGePDvwpTuq4XwcNfYk7niODbi8GR
1qMwnff5SXU5HK+tzqXXwixlzxW+Bs6+eDj43g+rNHL1RtUcsUTMHVpT4MJ/
bBVNvV4485M+bOr+PHHK/lOepn1uYh6Xp+iagr+6bg6qZR7imZ0CWcIOL3Ha
9DbnCivcz6qxSOt82DtqKxeyFohnRSZFWD/8Why7N/PCIrF66FrLd7qf2Ddw
7DL9HfxN0eehnV8i9pqzEuqjA8TSu6mmWiMcN5RK+yEJEots2gBjGXadeFY5
3r5M3Feqk0UXhojfjlQWOA7B3TnsdS8FsJbRquIfgZV2Zae8DK4papiMqIXT
dx/PXtUGp+kSqWMv4NQk+8e2Djg+ICzOfwWHGw6clRnhyQzuQ6oVHn88J7Ha
YHuUjqW2w8PTW/R5Dtj4PHmg7ids2DAhF8zAnTKlkDkLt5fHOkxuuNViUTf6
4Kd7Gs+U+mGVnp/BCcLNyZGeUAj+A1Q9GKk=
           "]]}, {}}, {{}, {}, {}, {}}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"S(t)\"", TraditionalForm], 
        FormBox["\"Payoff\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->Directive[FontSize -> 13],
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{{0, 2}, {0., 0.9999999591836735}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{1, 
          FormBox["\"K\"", TraditionalForm]}}, None}], Scaled[{0.5, 0.5}], 
     Center, Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"\"call\"","\"put\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{0.225, 0.31500000000000006`}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{0.225, 0.31500000000000006`}]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{0, 0}, {0, 0}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.025`", ",", "0.035`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}]& )], 
     Scaled[{0., 0.}], ImageScaled[{-0.7, -3.4}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"S(t)\"", TraditionalForm], 
     FormBox["\"Payoff\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[FontSize -> 13],
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   ImageSize->Medium,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{1, 
       FormBox["\"K\"", TraditionalForm]}}, None}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         Dashing[{0.025, 0.035}]], 
        Line[CompressedData["
1:eJxTTMoPSmViYGBQA2IQ7ZX64uKBl6l2DFDwfF1Y0n1JF3sYX4z7at9myRA4
X89SZOlcyRQ43+qC8YZJkiVw/oHZh017JVvg/ObG7oouySlwfkrJe8lOySVw
PscUz4UfPm6B87dfMHJ3l9sP50c037l1uPsInJ+/sVh3xpeTcP6nCddOMDKe
h/NPHDy2/7zNJTg/s9KTN/LNFTj/IKfR/zW51+H8ZYuP/JNSvQXnO4jtXRS8
7g6cr3v8zo5jWvfh/CsOwe9WvnsA5+dwZV+6avAIzj99I3wvX99jOD/YLeLh
kydP4HyzBd3hC1SewfkP/k2+klH/HM5/6nl+sdjhF3D+hpn3Ky8qvoLzl3Yw
d2pWvYbzvyZHvUrb/QbO53ZpC9oo/g7OrxF4yvMw5j2cr3Vrk8OdRAT/5uKG
kutpCL6ZucydswUI/ofY4NW7WhD85NUHPaesQfC93Oa1uf/BzQcApyCe0A==

         "]], 
        Line[CompressedData["
1:eJwdzH1Q03UcB/AFAsZTtByJIfIkJZzAETOJ8E00CHSIPCne2RwQpEWFBCU9
4ADHZUfhgkMcU6mxiYAwxIfJDVmANyoRYUzmCQuIKB7cb8J4jPFt9sfn3u/X
ve8+HmmfJmRY0Gi0UPM9y8FZ1yU3SwNoNZl/y5ei0dBvKRBZmd0Y9QIr5yCK
bk77btlo9oaPNcnBXByu7u8+Z2v2tV3iMwEZCOTJOQwHs7m0E+2+H0IXU/Kj
E93s/0sOqrLbU03bzWbLdbL1Itjf8aMNxZpdTNkq88rxhO1+/bsDBoSHvrTx
qmcF7j/edGxPogG8+V1Wwr4KlK2Y+iQpBijTC8hnOypBZz64lJtu3lkOxldH
qrC5MRf0fPM/a7+RMtZFeAvbC2Jrn+2tQ81nahH2eZypa9WAGpX+yqmUZohq
S8VeoqdQxvy2+83O2+AkB/c+v28Ohvqfj+9P6cQNTUb5ncU51F31rzbeUCHk
nsxisnIePakljMBb9+AemblQzjKCt+m8Jo7eD2YwU3B90ojBB4OsAaEaf8x9
/6uYv4Cvf3/Dp8z5IWZfj+e7BC1C1sdiZPZo4TOzc/o59SKqGm/V2bAfo9s7
byC7cAlO5YMxXVY6lA1q0hO8l+F2pUFVGz0KKlEpsOhehu4yz8vq2zFcS2a8
E3JiBe83+JbkjI9D3Ft8YZy+iqhqm9C72yewpDryFb1zFfqy24vep//CqKBj
wemTf6H0OjXjMTyJxf5QlyLHNcyKvwjasPUfZFd4KvMVaxh9LZI3f3IKL/d6
Ok1wTPAXRrr3tE8jUdO45rpugrT+8ErI2gzmjv6UNVy/jomOiEfy5Cfo4Dbz
HdkEBb9w7LZW6dHWl7VPt58g99KjSsUFPW7u8X2xKZ4g65skzyNiPRpdJaLY
QwQpIXtDqpv0EGqFraVpBMEtzA9c7uqRd6BkzDafYLrGvosxp4df+HthNlKC
g7y2Lx3ZFHyat1gO1RGwOUzrpngKnm7aHmkDAestmSD2EIXNawlJUS0EgcuS
utI0Ctby6I/4CgL7bMFD23wKYwHB5y3VBJ1HjwXZSCkMX3zKUWsI5GF/tksb
KGgdmr3FWgLZK5yYqBYK92d2yCJ0BKKhRC5fQUFxeZuqcIrgZBx+sFRTkDuP
lMbPEmTvbHMRaym08oUJHhRBph1TEqGjUJ/O0CmNBEkqX0XhFAXJwID47BLB
XonkXQ+KQs3bZ49zVwnCi93VSiMFkSw2INBEsDu1msNdpXBum90CIQT+cJ4m
hMJ/wXzkCQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        Line[CompressedData["
1:eJxlkntMkwcUxQHJoiLb3EyxriA4eT80stWpwOkyApY5RajyqI28UQZCeGxi
2CjSGRChMsoGWnms7YLyGLhNTYm2PAI4ZECFUmqFglBaKt8HCNGxKfv29/64
ufnlnJx7c3Od4tLDEq0sLCwOUfVfD0k0DitNiQE+oM2vr5OYazkZN0kPBCfF
teivNRI0m9GyX+kcXKj8xOXFKgmfA9tkN+gJ6DVHxxnMJA4O+bZ+T89GTFWt
9tEYCeX1ro9L6QKUL7n1V/9CorCg5PxluggrkkNNvqdJJGST9GK6FPKNseeS
HxDYKGLXLy79hvwBtbkjdgF3h/YFBzsoYJLR7fYzniOyUKftKumGx+ThTe88
nUd6W5Z31cpDSN+XrIxfNGH5qrrP0nIQ3dw/ShUwoq+jRzHopwKjluFYNWXA
2Vy2bdTzERz5jJv7uHgWHZv2rTeljcHx7yS+O3sGP0u63+xw1sK75QY/c2Ea
LNr9n8JbdNBn1/uoG6bg3au71+MxiRRxuUScoscIK5y4SegR+W3Uh027JpC6
+UvV6N5puJnduZyaJ+jXRNx/u+wZUo6Gfjf9TIPwoMipmZkZRGcd82cy1WDW
lUTU7TZApDCGKu48hv5NxciZ/DmwrDQnfSyHMcselNC6jEjVdGbIXjxCa/Vk
7rDTPFjVBdvl53shK9pQ7H7BjNSnS0+i7DqxGh89n9RO3Unv1dy3Ww6bwEth
bXYEQhXXx+YFLfBTpG/tYRBgbbE21fi24NzBqCGtEwHHqNS1sOlmqPZ6HbX2
IqBf9rNvRzOu2avYESwCMS4TcSVrjXB7af/p6zME+KWOhGfGTQTe+n0PW05A
yZVZp3Gl+Mq5luApCNQ12NKcNkvRUFfUnNlN+VdzXEfvSWDzI9dT/Ce1jzAo
xJ8mgarQ0pWcpuZ1zglth+sRw/vCodKGhAWHwzxVWoO8d2e3TJ0iwV/kxU/E
i+Chvc3SxVJ/JZeavu6uwLiEnz2WREIvMKdvda4Acz9DN5BBgkXPzQs0lGOR
F94oF1B5AjfPE8NliG/sYIuaKN21UrigFeC9HOE3wjYqv32X2FFcCGUAr+3y
Hcof2toQzrsIhurV9gIlxcs/FGYp8qF+tceYNkJx5QajzcMcCDpff3B2nOIH
DpaZn2fB90r/sYQJKs9wYIdmIANXdybfjTZSeoa+6rAsGQGmj8wnFijupPVv
uxWHhdtWO48vU+xyba2Dx4U4byjsyEuK+946HZ18HCFBNZeC/6G4dcC2v8v/
f/wvrjzcPA==
         "]], 
        Line[CompressedData["
1:eJxF0FtIE3AYBfDlyEpT1tK8MNTZkpqVo7YHE7WspNCV2xwl1DLFKLJcoIEF
kcZ8qFUuK2vNLmxa6GgrTUZMHSWZkNo2h4N0ZYTQNMy5i87NVRD/88Hh8Hs8
H7OsSlgRRqFQ8v7mX4/OMHxJ1N+5lP/XYaYqVCvh+m4nO3E1XPLI3N8cAXOu
GiSxUbDjYMMdGh1+s/3c1lsxsHx98YfIODhrgukPZ8APpD0ng5vgKrFm6dJm
OH/XjXsLbNhDLRmcz4CFzW6OMxNe25tOGePDvwpTuq4XwcNfYk7niODbi8GR
1qMwnff5SXU5HK+tzqXXwixlzxW+Bs6+eDj43g+rNHL1RtUcsUTMHVpT4MJ/
bBVNvV4485M+bOr+PHHK/lOepn1uYh6Xp+iagr+6bg6qZR7imZ0CWcIOL3Ha
9DbnCivcz6qxSOt82DtqKxeyFohnRSZFWD/8Why7N/PCIrF66FrLd7qf2Ddw
7DL9HfxN0eehnV8i9pqzEuqjA8TSu6mmWiMcN5RK+yEJEots2gBjGXadeFY5
3r5M3Feqk0UXhojfjlQWOA7B3TnsdS8FsJbRquIfgZV2Zae8DK4papiMqIXT
dx/PXtUGp+kSqWMv4NQk+8e2Djg+ICzOfwWHGw6clRnhyQzuQ6oVHn88J7Ha
YHuUjqW2w8PTW/R5Dtj4PHmg7ids2DAhF8zAnTKlkDkLt5fHOkxuuNViUTf6
4Kd7Gs+U+mGVnp/BCcLNyZGeUAj+A1Q9GKk=
         "]]}, {}}, {{}, {}, {}, {}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"S(t)", "Payoff"}, 
      AxesOrigin -> {0, 0}, AxesStyle -> Directive[FontSize -> 13], 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 2}, {0., 0.9999999591836735}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {{{1, "K"}}, None}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         Dashing[{0.025, 0.035}]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {"call", "put"}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendFunction -> (Framed[#, RoundingRadius -> 0]& ),
        LegendLayout -> "Column", LegendMargins -> 0]], {{0., 
     0.}, {-0.7, -3.4}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7212254036790075`*^9, 3.721225456133198*^9}, 
   3.7212255577685504`*^9, {3.7212255891632986`*^9, 3.721225600961089*^9}, {
   3.7212256377085066`*^9, 3.7212256468346043`*^9}, {3.721225696472867*^9, 
   3.721225741880918*^9}, {3.7212257855016484`*^9, 3.7212258050917826`*^9}, 
   3.7212259608000507`*^9, {3.721226062891659*^9, 3.721226075598155*^9}, 
   3.721226142642014*^9, {3.7212264608333364`*^9, 3.721226584860361*^9}, 
   3.721226632652685*^9, {3.721226744936474*^9, 3.721226780198081*^9}, {
   3.721226823513355*^9, 3.7212268281566677`*^9}, {3.7212268605611134`*^9, 
   3.7212268666194963`*^9}, 3.72122733748956*^9, {3.721228062835766*^9, 
   3.7212281248859434`*^9}, 3.7212282048645506`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Miguel\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\\
Payoff.eps\>\"", ",", "img2", ",", "\"\<eps\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7212273194296355`*^9, 3.721227327540842*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], " "}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "1000"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "exercise", " ", "points", " ", "per", " ", 
     "year"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"T", "=", "1"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "years", " ", "in", " ", "the", " ", 
     "contract"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"R", "=", "0.06"}], ";", 
   RowBox[{"(*", 
    RowBox[{"Yearly", " ", "discount", " ", "factor"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"sigma", "=", "0.05"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Volatility", " ", "of", " ", "the", " ", "underlying", " ", "stock", " ",
      "price"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"S0", "=", "1."}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "stock", " ", "price"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dT", "=", 
    RowBox[{"1", "/", "n"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Time", " ", "step", " ", "duration"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"S", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "2", ",", 
      RowBox[{
       RowBox[{"n", "*", "T"}], "+", "1"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Table", " ", "with", " ", "all", " ", "the", " ", "simulated", " ", 
     RowBox[{"paths", ".", " ", "All"}], " ", "entries", " ", "are", " ", 
     "initially", " ", "assigned", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "S0"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "all", " ", 
     RowBox[{"paths", "'"}], " ", "starting", " ", "points", " ", "to", " ", 
     "the", " ", "initial", " ", "stock", " ", "price"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"dW", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "dT", "]"}], "*", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"n", "*", "T"}]}], "}"}]}], "]"}]}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Matrix", " ", "with", " ", "the", " ", "normally", " ", "distributed", 
     " ", "random", " ", "variables", " ", "to", " ", "be", " ", "used", " ", 
     "in", " ", "the", " ", "geometric", " ", "Brownian", " ", "motion"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"n", "*", "T"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"S", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "+", 
        RowBox[{"R", "*", "dT", "*", 
         RowBox[{"S", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "+", 
        RowBox[{"sigma", "*", 
         RowBox[{"S", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}], "*", 
         RowBox[{"dW", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", 
          RowBox[{"i", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{"i", "/", "n"}]}]}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulate", " ", "geometric", " ", "Brownian", " ", 
     RowBox[{"Motion", ":", " ", "dS"}]}], "=", 
    RowBox[{
     RowBox[{"r", "*", "S", "*", "dt"}], "+", 
     RowBox[{"\[Sigma]", "*", "S", "*", "dW"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"img3", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "S", "]"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(Years)\>\"", ",", "\"\<Stock Price(\[Euro])\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "13"}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Stock Price\>\"", "}"}], ",", 
         RowBox[{"LegendFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"#", ",", 
              RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", 
           RowBox[{"-", "5"}]}], "}"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7159508811719675`*^9, 3.7159513621283975`*^9}, {
  3.7177766337199244`*^9, 3.7177767035615034`*^9}, {3.717781162902791*^9, 
  3.717781163480855*^9}, {3.7177837354625587`*^9, 3.717783752138893*^9}, {
  3.720365819326024*^9, 3.7203658200991144`*^9}, {3.720366619209197*^9, 
  3.7203666650082855`*^9}, {3.7213253159953012`*^9, 3.721325392481338*^9}, {
  3.721325423004984*^9, 3.721325424291725*^9}, {3.7213254587750854`*^9, 
  3.7213256728290186`*^9}, {3.7213257842556286`*^9, 3.7213258490541525`*^9}, {
  3.721325880388674*^9, 3.721325881290592*^9}, {3.721325949089754*^9, 
  3.7213259630044003`*^9}, {3.7213260141654167`*^9, 3.721326014412326*^9}, {
  3.7213260721016083`*^9, 3.721326255169538*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.0055000000000000005`], Thickness[0.008], LineBox[CompressedData["
1:eJxV2HdYze//B3AVClmJlMzs7F3kGSI+VmTPEJKdlU1W9qzsMlKkqKRFae+9
d+eczj6nM5IZfu8679f3un7943pf55z3uu/7+Xje+m/eu3SrdqtWrcQ6rVo1
//v//5Roeq3KX7jZDnzDV8/z9OnYAX+/+HI/tlbi1ynnTwfvOkFrfonJ+Nb0
+T5ITGPWPNBR4rhhkC3n2EH82vCsc6QOfd8VB3ccfhD4U4Gj4sFj9d6eQOa4
9VV3tej3Z9B3m873I8znU2sWX/fa44aRJaPPTPuuYM93Hr3axlY9+aZA1Dx9
bfNLF2HdpY+pp1LBnt8d1/41Xb0lVcDiQ+rhGO8r8N7gPXs/l653Ddk1YzfX
FCkQ0eeCdEnEDXAHz9cPK1Ow17+FV5u4bc0LFXic2O+9i9NtTF+S7OpYRfdz
ByeFW7WCmN9X/Gy5INo5GH80k9D93UPHscKVYxsU6DW6amDbsx6Yo97a+ZyS
7tcTCw8Y7xz0W4E1ji1nRMzL3U2WX+n+70PMibRfpVDg4YOWPxwobtq/QULP
8xBpT2sWdvyjQFn2d3ue7yM8WzSF4/OXnu8xAoc/sFvIjJ9x6xWdRoY8QZSz
atjQjkr2eZ9i5IJNT7I7KLFKc0K45zZ58trR+/fB4lutFufoKrFg8uUZDnwf
zN7se+F7eyX7Pp6hx8gTerFtlZAtaT7jM9j07pmcxIyf5v08R7iOTdRJZr5c
3SX8/Vr1HHp+caO0uirZ9/UCntOddnzTU8L8Ug/mEV7Af+cis/guNF9eQvfT
pyIn5vOMZ7M/Nvx5iYv6f5/6t1Gy79MXR3ZZyQ2Y52l+Wz1bv4Jt5D3hF+ZY
835fobUwED5GSrQvebHPqr0fOIvCqt3MlOz79sPWC19/9ximxJvmx+3ijwEv
8nx9htP89MeThLmfjg5V4r/m0/V4jW0X582oZH6vGY/XeGafapnJfN7yuk3f
wHDMlJVKcyU7Pm/QR3sSb/dEJZrfXu6AAJzsdmzVAWslO14BSK/R5R6YocSw
dTfjG4e+RWrYuwuXbZXs+L1F2rkpNpwFSqQxZzMZHQiDcJv1Z2fTeAYi1q+L
vHa6Ek635ScwMQg9llYEnram8Q3CwkmeQRtmKsHcHPPI79C+IrOLBDTe75Cu
Z7viIHO8jJk8zJDi2d253xKtaPzf4/ZUTt76WUq8ZN5eyYv3GOGhMtk1i+bD
e0gOJgqfzlXi659CV/HgYHTfc37a1Lk0P4LRsEc3Mor5vk3LBAjGvQs3B6yx
oPkSjE9nck4MZ67HDF7zA+H+zN3bi6bT/AlB19J/22Yx70NzeyEwnW59r8iO
5lMI0t5/fjN4nhLjW/5CsUZt12f9PJpfoXC5OXvqkaVKnPuSzsygULSTunWb
sYjmWyisz2yJz1usRAEz+sw7QfJprUE3l9L8+4BQ92NLDZcoYdZywg+oCTNK
dFlA8/EDrti+jPdnPj/QMgBhaAwN6XN2Bc3PMNx5lma1cZkSCY1DmREOQ2j8
ubrji2m+fkTYNMfNPsuVMNDcIDxcroXWLaf5+xFDrP3fWa9XouXuUj/CftnO
AzfW03wOh8cN/XnzmPsNeaLwS54fjlZnD7uPW03zOxzRF5+t/sncn3bLA4dj
yjzrz+YraL5HYFH59AqhvRJLNRMGNjdeDuIsp/kfAZO+X0/3Yq73vPlxCyPw
+N6DdYvX0nqIhJXuud9j1imhbj7dqkgs4q/+89mB1kckgoPlGauZ45nN078i
EvX675Jab6f1EoWXIzabqJnzt0zfDVEwNQkckruV1k8Urif087Bnfs851jwg
UTDZ22ts2HJaT9EYFDlDx2CDEmNbJng0QrpUbOCuofUVjfVdL9UnbVbirMcs
ZspEo3pR7BTHrbTePmFsw6nOXZnjvAEtA4w+7bsdu7+J1t8n2GllPx7JvM/+
zekv/wQLiXDG4RW0Hj9DP7rRaTfz/vc3L499nxFaP3nag420Pj/jp8fj4aOZ
88U1j27DZ5zuaNx4bDOt1xgk8CfnnGfO10WzILFOSzbTZw2t3xgMMZt6XcF8
v+X1/YzB/iJB0MCdtJ5joddpccUK5v203N6JWPAu+UY7O9L6jkWTvZfPGeb9
aBz/glBFxznuTrTev2B065mtVjH36588n1nRX9Az/XbqkDW0/r/gbBTvQDAz
3nbMamTmKF5sPlj9ZRPlwRcctAz54c+8nx/N+iR+geSaufLiUsqHL3Da08E8
kfncx6R5QcRhweJ/wY82UV7EoZf973u/mfuZ2zLAcVi9xjP6oSPlRxzaXLEa
LmHGR+nXfINxkM6af2KsA+VJHGyNV3r+Ye7vfvPdpcehtVwr3XQL5UscFPHo
V8w8f/Pkmqcfj/qoglYRGylv4hG5SZhyiTluTpP8hfGQ7+l91MOZ8ice57i8
Ca+Y4+bZwkwZeGatjth/gvIoHkbWWZXJx5RoedzceFxzyjyb6kr5FA+/DCvd
LQeUaDmdQQKcx/YdFOhKeZWA2M6rf+jsV6IljuwTEJXsozP3KOVXAsq3Pcyv
O6KEpj4koNIq9Fx/V8qzBLQfsqhX+Q4lWuKgJAH+nQN/TthI+ZaAmSfNMp+u
VOJ0S+AkImZzZvfGJZR3iYj7lDzwEbOehrQsoEQMzFvtemc15V8iBiwZfT2G
Gc+clnqRiJz4wemX7SgPEzHswvz5AauUONK8HKoSsexH8ZzodZSPiZhd10Zv
BXP9vs3TuU8SLuzr4Mr7X14mYdO4hNp4Jn9SmqefQxK6nlBI3y+l/EyC2GLT
PHdm/Pa2BGQS/ph7JM7cQnmahE4bX2ulMOvDqGXBJ2GUU27flXsoX5NRMlHi
c2qfEi23NzAZHQ3Sd/46SHmbjA3hsbNTzimxreUvGSnvAuKF7pS/ydAKUnxM
uqpEc3liEhbvLZdGX79KeZyMIX9my5bdUKI5HV3FycgQui2f5EH5nALfSH6B
nZcSG1pOmIKckvGfe3pSXqdgY4in3ybmuG1LQKXA+crK9ic9KL9TMGLKq3in
u0o0j4ZhUAom5P2urLtBeZ6CU6/Gf+t5T4mWdqdIwbHDej1v3qZ8T8XVZb3s
7Jjz/W1ebmNTUTqmcu5tL8r7VExY1E1y75kSr5qns0sqYAm7sEeU/6nw88lw
HfVUiUWaB8art6ZtXbzJg1Tk/7XqY8+c71vzcDSmoldck66ZJ/mQhv8Us28c
9FHiafPjTk7DGccC58Pe5EUaWplP+i5hrjen5QWmIUb/mWS6N/mRhq9/y/w/
M7+vb+EhDVuO75vZx588ScPVduGpPObYsznef6dhw+O2F+49JV/SYWxstWHx
YyVa4tkqHR6rDh/Uv0fepON8oJ72T+b5W+L1VDoWBRX3cHpG/qQjcPvsPHvm
fJr4S8fB6X/1O/qSR+k4/KZN7U0/pSZetDMQ4cPtu9KffMpA4YwpQr/XSrQs
31kZ2FBzRerlT15loCZ27NY1oUq0LI8LGdg/YeVcz1DyKwP9pHqjtwUroZl+
GWjYufvP1HfkWQbafuvesC5EiaLm4dXLxLwHoouTwsi3TJwvTZRpRyhxsuUO
M7Gu+5IxZ9+Rd5kQ2s+TzYxRYlDLBMxE3405F80Tyb9MDHpeOMggSomszJY/
mF4YJ5gQRx5mAqOPTX5SoMShlkDNwtX/znXqUEA+ZkGR8qOPdYkSvVsmdBZy
jItsFheSl1kwrbu22ZD5PKlle5WF4dZGo4/mkZ9ZiPgvtXdqmhK7WwI6CzMT
CucYpZOnzPkrxx3bk6VES1wZZqNf3NXpx0rJ12zY9qkML2bupyUOVmTjzYc2
ByeVkrfZEPHkgl01Smi2X9los6Ppn7qU/M1GQ4KiXWqFEvqaBYeFtQ3/XlWR
x9kIUiTUnylTomW6mOTA0nTlCU4V+ZyDnOGD0t0ESrQMx7ocbEzLSygTktc5
ODP1m+wkRwnN9iwHvw4tDVNzye8cGNf+6LhNqkTL6Wpy8Nxs3EBzOXmeCwtx
34vFclrvuTjl5JTuyCXfc7Fo9srIzWW0/nOh1O1/wrOQvM9FWLbO9gFZlAe5
MPCexl9ZSP7nYvTA21ekJZQPuQg+GLYsIZf6QC761diF1CRTXuTCat3MnX4p
1A9ywe29YMnfZMqPXFhPv9WjzyfqC7mY8dDyuUU05UkuArabROjGU3/IhY1t
9hNZEuVLLnR3mtzIT6I+kYfrz/v73UyivMnDCtehJ1zSqF/kwUC2/rsonvIn
DzsMrnsZxFHfyIN59SZneQLlUR7arQ25NSeJ+kcelgaoN9dmUD7lgbdiyWph
EvWRPPgNvjbMJ4/yKg/FXXlRU0qon+Rh7X7rX4OyKL/ysGfW76YvGdRX8lC9
z9ebm0t5loebDc6HdUupv+Th2zKjjt9KKd/ykDCrjcXdMuoz+Yj+1i3AM4/y
Lh/nF7VdvaKA+k0+1v1QaeeWUv7lY1G+oDa7ivpOPr720tn5l095mI+uWT0F
tkrqP/nA1l2N68WUj/lY7jjCq5uM+lA+Mr+8emH4lfIyH3rZA9of/Ub9KB+P
vg+fkPCV8jMfkgqDS/cV1Jfysfu/Yfv2iShP8xEXGoZhAupP+Vhx0euPdiPl
awFsp/2w2q6iPlUA+SD/JC0Z5W0BLsm7aXWTUr8qwIT8h9OCxZS/Bbj65PRo
Nw71rQLszN6zdDif8rgA298NeH5dQv2rACuGmlbPr6d8LoCi+hj/qor6WAG8
x0fMr1FQXhcgYm63ovNq6mcFODBsrWEHBeV3AbqEfPy3Qkx9rQDFF8cu7VpH
eV4At5HvvlRyqL8VYFWIyZoiDuV7IaaOevXavZb6XCH0nr4+cruU8r4QHTca
zp2YS/2uEEvyR0YlpVP+F4K5/RydfOp7hfh4e1zV52LyoBBW20oXd62i/leI
hufOHk9ryYdCeDxdZLO7jvpgIY7P+lT5upy8KMSY46N+va+lflgIwVnLtlOq
yY9CTFy6Nv1tIfXFQpwd3vm4XiV5UogXQXp3FlRTf2Se9/WgPsZV5EsR7nUI
v/CpkvpkEQbUmJsfKCdviqCQ6Z6vqKZ+WQTvlbtLFvDJnyJcOZ9zu1pEfbMI
nfpoj90lIo+K8NBtZ+JePvXPIjiukK/KkpJPRYi0jO7aRkJ9tAhlo+U8dxF5
VQRD860XrcTUT4swsHibhTGf/CrCFFvv9b351FeLsKWt2dP1eeRZEVSzS8tn
ZFF/LcaDMw7db+SQb8WId6qYcq+U+mwx1ttuX5JeQt4VI/0ohlwupX5bjKAs
3bVbc8m/YqhjqzrsT6O+W4z7bq3Gx5SQh8UIuVc33aqY+m8xHL0feI+QkI/F
iD3Te1JWJfXhYihcX5nuLyQvizHxzs3wi3nUj4sx7K2uKrCY/CxG34PRU+tL
qS8XI9Wn4ejR/3lajF0zRQEZhdSfSzCpQtntciX5WoIUs4dnakupT5dgnt7F
4NgK8rYEQVsGX8ippn5dAk/ljmmcMvK3BGbTbQWp1dS3S3DtVavX7gLyuAQu
RcmTpXzq3yVQ20yXHpWQzyX4dnlkSgaf+ngJeuxxHHCkmrwuwZSlTVMP1VI/
L8Hgde02v5OQ3yVQOjsLZFLq6yVo1b2/9SoxeV6KM5dP7TWuI89LUX78zObC
avK8FEuXTrySWkyel4K/ZnvXQdXkeSmeaXvqfqglz0vhE+c8s08VeV6KGYYm
S8YWkeel6Jnf+vS4SvK8FF4/1KFXy8jzUmjf7zrxZAl5Xore8zO0/CvJ81I8
zgkc3eyDxvNSjPBqO2AjhzwvRfKbAG65mDwvxerx83ySZeR5KQzzKyYWCcjz
Mui9sNjVQUCel2GlyeCiRaXkeRnSfDs+jM8hz8uwTKfz5YBC8rwMzg/cHVIK
yfMytL9Xbt+USZ6XoTBSbmiYRp6XYarLgDnvvpDnZRi5XnuMMoY8Z45nJ51Z
EEuel+H0lhvz930iz8vwvrB4/+9g8rwMxr7z1YvCyPMyrHm1ZbxpKHlehtLx
DZO8/MjzMizRPzqxbSB5Xo7sy7fchr4gz8sxYaP1p11vyPNyuLmMXvzUlzwv
h6uZmyf3IXleji7T5pzq+IQ8L0dURtxOK1/yvBwnc94b9A0gz8ux47f/sNlv
yfNyFGWfNenlT56Xw/Z9yNDdoeR5OUw2NPqPfUWelyN185UT/QPI83IMEfcY
t8KbPC/H0mg3j7CX5Hk5Theqdbs9I88r0Er+60SZH3legeWrt5/Wfk2eV8BM
Z3zns0HkeQWQ823L7TfkeQX2jz23WvmEPK/AnmTXQOdA8rwC13nC2JC35HkF
DseZ7VriT55XoKH3Yef1r8nzCnzZ292n1SvyvAKrv3Wer/OSPK/ALas3t/57
SZ5XQKfVJJ+J3uR5BTJHJGzVf0CeV2DypoeHtJ6S5xVwSul8L/wBeV6J+RtD
3yx+Sp5XYuu52W+bXpPnlfgD2aDqaPK8Elvkj+Lfx5LnlfgY/Gv16nTyvBJz
G+8Y6+aR55XgaHvdjqokzyvR0SzOzyOHPK/EIXnyHmU+eV6JnisqHS+kkeeV
eDjJysA9gjyvxJuig2uHfyLPK3Gke47rr0/keSWa5pmKM6LJ80p4x4vNZ0eT
55W48bF8SseP5HkVc50il7Fx5HkVtnf2DhwYQ55XYdNarZD3YeR5Ffir+Pnj
3pLnVaj8kfp0eBB5XoXIn387dH9Nnlfhbt+agj6vyPMqVLetNkwMIs+r8O5x
q0rLAPK8CiF+JbrLnpHnVThfazbc7Tl5XoXZkwIMAt+S51Xw+qUcE/KePK/C
Ry0ep/l+NJ5XYctZyYjNEeR5Nf7av/vvdwR5Xo3CjeIEoyTyvBq/OD98dieS
59U47O7ZozqdPK/G+Hm/w1NSyfNqvLhv1P/9Z/K8GvPmXr9eE0yeV8PWp6mt
Sxh5Xo0dtl5zjkWQ59Uw0A/8ox1InjPnO/7fpvi35Hk1vobxVtl8IM+rkS0N
sv0QTJ5Xw2zJueC2/uR5NRbrG/3dE0KeV2Ow6YbN1aHkeQ0ud44b+jiKPK9B
1ariQ/YfyfMaBHTePyokhTyvAcSFO7tmkuc1GK1bZOCQQZ7X4ORZg9TxueR5
DcI9T099UkSe12Cz0LHTwVzyvAYzol7ufJ5Nntegs0vG2juJ5HkNntStKr6S
Qp7XwOXq5NZp2eR5DbKSg9vn5JLnNejwTjrrQhZ5XoNBL4aeScwkz2sx07CV
1YNsWu+1iLSpa7c2jXyvRZdnJ2Lyk2n91yLY1alodjx5X4tZVhaJ9zIoD2rh
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
/3JX
           "]]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"Time(Years)\"", TraditionalForm], 
        FormBox["\"Stock Price(\[Euro])\"", TraditionalForm]},
      AxesOrigin->{0, 0.9869680759121567},
      AxesStyle->Directive[FontSize -> 13],
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{},
      PlotLabel->None,
      PlotRange->{{0, 1.}, {0.9946494230708154, 1.1482763662439894`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"\"Stock Price\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.14400000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{0, 0}, {0, 0}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "0.008`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "0"}]}], "]"}]& )], 
     Scaled[{0., 0.}], ImageScaled[{-0.5, -5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"Time(Years)\"", TraditionalForm], 
     FormBox["\"Stock Price(\[Euro])\"", TraditionalForm]},
   AxesOrigin->{0, 0.9869680759121567},
   AxesStyle->Directive[FontSize -> 13],
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.008]], 
         Line[CompressedData["
1:eJxV2HdYze//B3AVClmJlMzs7F3kGSI+VmTPEJKdlU1W9qzsMlKkqKRFae+9
d+eczj6nM5IZfu8679f3un7943pf55z3uu/7+Xje+m/eu3SrdqtWrcQ6rVo1
//v//5Roeq3KX7jZDnzDV8/z9OnYAX+/+HI/tlbi1ynnTwfvOkFrfonJ+Nb0
+T5ITGPWPNBR4rhhkC3n2EH82vCsc6QOfd8VB3ccfhD4U4Gj4sFj9d6eQOa4
9VV3tej3Z9B3m873I8znU2sWX/fa44aRJaPPTPuuYM93Hr3axlY9+aZA1Dx9
bfNLF2HdpY+pp1LBnt8d1/41Xb0lVcDiQ+rhGO8r8N7gPXs/l653Ddk1YzfX
FCkQ0eeCdEnEDXAHz9cPK1Ow17+FV5u4bc0LFXic2O+9i9NtTF+S7OpYRfdz
ByeFW7WCmN9X/Gy5INo5GH80k9D93UPHscKVYxsU6DW6amDbsx6Yo97a+ZyS
7tcTCw8Y7xz0W4E1ji1nRMzL3U2WX+n+70PMibRfpVDg4YOWPxwobtq/QULP
8xBpT2sWdvyjQFn2d3ue7yM8WzSF4/OXnu8xAoc/sFvIjJ9x6xWdRoY8QZSz
atjQjkr2eZ9i5IJNT7I7KLFKc0K45zZ58trR+/fB4lutFufoKrFg8uUZDnwf
zN7se+F7eyX7Pp6hx8gTerFtlZAtaT7jM9j07pmcxIyf5v08R7iOTdRJZr5c
3SX8/Vr1HHp+caO0uirZ9/UCntOddnzTU8L8Ug/mEV7Af+cis/guNF9eQvfT
pyIn5vOMZ7M/Nvx5iYv6f5/6t1Gy79MXR3ZZyQ2Y52l+Wz1bv4Jt5D3hF+ZY
835fobUwED5GSrQvebHPqr0fOIvCqt3MlOz79sPWC19/9ximxJvmx+3ijwEv
8nx9htP89MeThLmfjg5V4r/m0/V4jW0X582oZH6vGY/XeGafapnJfN7yuk3f
wHDMlJVKcyU7Pm/QR3sSb/dEJZrfXu6AAJzsdmzVAWslO14BSK/R5R6YocSw
dTfjG4e+RWrYuwuXbZXs+L1F2rkpNpwFSqQxZzMZHQiDcJv1Z2fTeAYi1q+L
vHa6Ek635ScwMQg9llYEnram8Q3CwkmeQRtmKsHcHPPI79C+IrOLBDTe75Cu
Z7viIHO8jJk8zJDi2d253xKtaPzf4/ZUTt76WUq8ZN5eyYv3GOGhMtk1i+bD
e0gOJgqfzlXi659CV/HgYHTfc37a1Lk0P4LRsEc3Mor5vk3LBAjGvQs3B6yx
oPkSjE9nck4MZ67HDF7zA+H+zN3bi6bT/AlB19J/22Yx70NzeyEwnW59r8iO
5lMI0t5/fjN4nhLjW/5CsUZt12f9PJpfoXC5OXvqkaVKnPuSzsygULSTunWb
sYjmWyisz2yJz1usRAEz+sw7QfJprUE3l9L8+4BQ92NLDZcoYdZywg+oCTNK
dFlA8/EDrti+jPdnPj/QMgBhaAwN6XN2Bc3PMNx5lma1cZkSCY1DmREOQ2j8
ubrji2m+fkTYNMfNPsuVMNDcIDxcroXWLaf5+xFDrP3fWa9XouXuUj/CftnO
AzfW03wOh8cN/XnzmPsNeaLwS54fjlZnD7uPW03zOxzRF5+t/sncn3bLA4dj
yjzrz+YraL5HYFH59AqhvRJLNRMGNjdeDuIsp/kfAZO+X0/3Yq73vPlxCyPw
+N6DdYvX0nqIhJXuud9j1imhbj7dqkgs4q/+89mB1kckgoPlGauZ45nN078i
EvX675Jab6f1EoWXIzabqJnzt0zfDVEwNQkckruV1k8Urif087Bnfs851jwg
UTDZ22ts2HJaT9EYFDlDx2CDEmNbJng0QrpUbOCuofUVjfVdL9UnbVbirMcs
ZspEo3pR7BTHrbTePmFsw6nOXZnjvAEtA4w+7bsdu7+J1t8n2GllPx7JvM/+
zekv/wQLiXDG4RW0Hj9DP7rRaTfz/vc3L499nxFaP3nag420Pj/jp8fj4aOZ
88U1j27DZ5zuaNx4bDOt1xgk8CfnnGfO10WzILFOSzbTZw2t3xgMMZt6XcF8
v+X1/YzB/iJB0MCdtJ5joddpccUK5v203N6JWPAu+UY7O9L6jkWTvZfPGeb9
aBz/glBFxznuTrTev2B065mtVjH36588n1nRX9Az/XbqkDW0/r/gbBTvQDAz
3nbMamTmKF5sPlj9ZRPlwRcctAz54c+8nx/N+iR+geSaufLiUsqHL3Da08E8
kfncx6R5QcRhweJ/wY82UV7EoZf973u/mfuZ2zLAcVi9xjP6oSPlRxzaXLEa
LmHGR+nXfINxkM6af2KsA+VJHGyNV3r+Ye7vfvPdpcehtVwr3XQL5UscFPHo
V8w8f/Pkmqcfj/qoglYRGylv4hG5SZhyiTluTpP8hfGQ7+l91MOZ8ice57i8
Ca+Y4+bZwkwZeGatjth/gvIoHkbWWZXJx5RoedzceFxzyjyb6kr5FA+/DCvd
LQeUaDmdQQKcx/YdFOhKeZWA2M6rf+jsV6IljuwTEJXsozP3KOVXAsq3Pcyv
O6KEpj4koNIq9Fx/V8qzBLQfsqhX+Q4lWuKgJAH+nQN/TthI+ZaAmSfNMp+u
VOJ0S+AkImZzZvfGJZR3iYj7lDzwEbOehrQsoEQMzFvtemc15V8iBiwZfT2G
Gc+clnqRiJz4wemX7SgPEzHswvz5AauUONK8HKoSsexH8ZzodZSPiZhd10Zv
BXP9vs3TuU8SLuzr4Mr7X14mYdO4hNp4Jn9SmqefQxK6nlBI3y+l/EyC2GLT
PHdm/Pa2BGQS/ph7JM7cQnmahE4bX2ulMOvDqGXBJ2GUU27flXsoX5NRMlHi
c2qfEi23NzAZHQ3Sd/46SHmbjA3hsbNTzimxreUvGSnvAuKF7pS/ydAKUnxM
uqpEc3liEhbvLZdGX79KeZyMIX9my5bdUKI5HV3FycgQui2f5EH5nALfSH6B
nZcSG1pOmIKckvGfe3pSXqdgY4in3ybmuG1LQKXA+crK9ic9KL9TMGLKq3in
u0o0j4ZhUAom5P2urLtBeZ6CU6/Gf+t5T4mWdqdIwbHDej1v3qZ8T8XVZb3s
7Jjz/W1ebmNTUTqmcu5tL8r7VExY1E1y75kSr5qns0sqYAm7sEeU/6nw88lw
HfVUiUWaB8art6ZtXbzJg1Tk/7XqY8+c71vzcDSmoldck66ZJ/mQhv8Us28c
9FHiafPjTk7DGccC58Pe5EUaWplP+i5hrjen5QWmIUb/mWS6N/mRhq9/y/w/
M7+vb+EhDVuO75vZx588ScPVduGpPObYsznef6dhw+O2F+49JV/SYWxstWHx
YyVa4tkqHR6rDh/Uv0fepON8oJ72T+b5W+L1VDoWBRX3cHpG/qQjcPvsPHvm
fJr4S8fB6X/1O/qSR+k4/KZN7U0/pSZetDMQ4cPtu9KffMpA4YwpQr/XSrQs
31kZ2FBzRerlT15loCZ27NY1oUq0LI8LGdg/YeVcz1DyKwP9pHqjtwUroZl+
GWjYufvP1HfkWQbafuvesC5EiaLm4dXLxLwHoouTwsi3TJwvTZRpRyhxsuUO
M7Gu+5IxZ9+Rd5kQ2s+TzYxRYlDLBMxE3405F80Tyb9MDHpeOMggSomszJY/
mF4YJ5gQRx5mAqOPTX5SoMShlkDNwtX/znXqUEA+ZkGR8qOPdYkSvVsmdBZy
jItsFheSl1kwrbu22ZD5PKlle5WF4dZGo4/mkZ9ZiPgvtXdqmhK7WwI6CzMT
CucYpZOnzPkrxx3bk6VES1wZZqNf3NXpx0rJ12zY9qkML2bupyUOVmTjzYc2
ByeVkrfZEPHkgl01Smi2X9los6Ppn7qU/M1GQ4KiXWqFEvqaBYeFtQ3/XlWR
x9kIUiTUnylTomW6mOTA0nTlCU4V+ZyDnOGD0t0ESrQMx7ocbEzLSygTktc5
ODP1m+wkRwnN9iwHvw4tDVNzye8cGNf+6LhNqkTL6Wpy8Nxs3EBzOXmeCwtx
34vFclrvuTjl5JTuyCXfc7Fo9srIzWW0/nOh1O1/wrOQvM9FWLbO9gFZlAe5
MPCexl9ZSP7nYvTA21ekJZQPuQg+GLYsIZf6QC761diF1CRTXuTCat3MnX4p
1A9ywe29YMnfZMqPXFhPv9WjzyfqC7mY8dDyuUU05UkuArabROjGU3/IhY1t
9hNZEuVLLnR3mtzIT6I+kYfrz/v73UyivMnDCtehJ1zSqF/kwUC2/rsonvIn
DzsMrnsZxFHfyIN59SZneQLlUR7arQ25NSeJ+kcelgaoN9dmUD7lgbdiyWph
EvWRPPgNvjbMJ4/yKg/FXXlRU0qon+Rh7X7rX4OyKL/ysGfW76YvGdRX8lC9
z9ebm0t5loebDc6HdUupv+Th2zKjjt9KKd/ykDCrjcXdMuoz+Yj+1i3AM4/y
Lh/nF7VdvaKA+k0+1v1QaeeWUv7lY1G+oDa7ivpOPr720tn5l095mI+uWT0F
tkrqP/nA1l2N68WUj/lY7jjCq5uM+lA+Mr+8emH4lfIyH3rZA9of/Ub9KB+P
vg+fkPCV8jMfkgqDS/cV1Jfysfu/Yfv2iShP8xEXGoZhAupP+Vhx0euPdiPl
awFsp/2w2q6iPlUA+SD/JC0Z5W0BLsm7aXWTUr8qwIT8h9OCxZS/Bbj65PRo
Nw71rQLszN6zdDif8rgA298NeH5dQv2rACuGmlbPr6d8LoCi+hj/qor6WAG8
x0fMr1FQXhcgYm63ovNq6mcFODBsrWEHBeV3AbqEfPy3Qkx9rQDFF8cu7VpH
eV4At5HvvlRyqL8VYFWIyZoiDuV7IaaOevXavZb6XCH0nr4+cruU8r4QHTca
zp2YS/2uEEvyR0YlpVP+F4K5/RydfOp7hfh4e1zV52LyoBBW20oXd62i/leI
hufOHk9ryYdCeDxdZLO7jvpgIY7P+lT5upy8KMSY46N+va+lflgIwVnLtlOq
yY9CTFy6Nv1tIfXFQpwd3vm4XiV5UogXQXp3FlRTf2Se9/WgPsZV5EsR7nUI
v/CpkvpkEQbUmJsfKCdviqCQ6Z6vqKZ+WQTvlbtLFvDJnyJcOZ9zu1pEfbMI
nfpoj90lIo+K8NBtZ+JePvXPIjiukK/KkpJPRYi0jO7aRkJ9tAhlo+U8dxF5
VQRD860XrcTUT4swsHibhTGf/CrCFFvv9b351FeLsKWt2dP1eeRZEVSzS8tn
ZFF/LcaDMw7db+SQb8WId6qYcq+U+mwx1ttuX5JeQt4VI/0ohlwupX5bjKAs
3bVbc8m/YqhjqzrsT6O+W4z7bq3Gx5SQh8UIuVc33aqY+m8xHL0feI+QkI/F
iD3Te1JWJfXhYihcX5nuLyQvizHxzs3wi3nUj4sx7K2uKrCY/CxG34PRU+tL
qS8XI9Wn4ejR/3lajF0zRQEZhdSfSzCpQtntciX5WoIUs4dnakupT5dgnt7F
4NgK8rYEQVsGX8ippn5dAk/ljmmcMvK3BGbTbQWp1dS3S3DtVavX7gLyuAQu
RcmTpXzq3yVQ20yXHpWQzyX4dnlkSgaf+ngJeuxxHHCkmrwuwZSlTVMP1VI/
L8Hgde02v5OQ3yVQOjsLZFLq6yVo1b2/9SoxeV6KM5dP7TWuI89LUX78zObC
avK8FEuXTrySWkyel4K/ZnvXQdXkeSmeaXvqfqglz0vhE+c8s08VeV6KGYYm
S8YWkeel6Jnf+vS4SvK8FF4/1KFXy8jzUmjf7zrxZAl5Xore8zO0/CvJ81I8
zgkc3eyDxvNSjPBqO2AjhzwvRfKbAG65mDwvxerx83ySZeR5KQzzKyYWCcjz
Mui9sNjVQUCel2GlyeCiRaXkeRnSfDs+jM8hz8uwTKfz5YBC8rwMzg/cHVIK
yfMytL9Xbt+USZ6XoTBSbmiYRp6XYarLgDnvvpDnZRi5XnuMMoY8Z45nJ51Z
EEuel+H0lhvz930iz8vwvrB4/+9g8rwMxr7z1YvCyPMyrHm1ZbxpKHlehtLx
DZO8/MjzMizRPzqxbSB5Xo7sy7fchr4gz8sxYaP1p11vyPNyuLmMXvzUlzwv
h6uZmyf3IXleji7T5pzq+IQ8L0dURtxOK1/yvBwnc94b9A0gz8ux47f/sNlv
yfNyFGWfNenlT56Xw/Z9yNDdoeR5OUw2NPqPfUWelyN185UT/QPI83IMEfcY
t8KbPC/H0mg3j7CX5Hk5Theqdbs9I88r0Er+60SZH3legeWrt5/Wfk2eV8BM
Z3zns0HkeQWQ823L7TfkeQX2jz23WvmEPK/AnmTXQOdA8rwC13nC2JC35HkF
DseZ7VriT55XoKH3Yef1r8nzCnzZ292n1SvyvAKrv3Wer/OSPK/ALas3t/57
SZ5XQKfVJJ+J3uR5BTJHJGzVf0CeV2DypoeHtJ6S5xVwSul8L/wBeV6J+RtD
3yx+Sp5XYuu52W+bXpPnlfgD2aDqaPK8Elvkj+Lfx5LnlfgY/Gv16nTyvBJz
G+8Y6+aR55XgaHvdjqokzyvR0SzOzyOHPK/EIXnyHmU+eV6JnisqHS+kkeeV
eDjJysA9gjyvxJuig2uHfyLPK3Gke47rr0/keSWa5pmKM6LJ80p4x4vNZ0eT
55W48bF8SseP5HkVc50il7Fx5HkVtnf2DhwYQ55XYdNarZD3YeR5Ffir+Pnj
3pLnVaj8kfp0eBB5XoXIn387dH9Nnlfhbt+agj6vyPMqVLetNkwMIs+r8O5x
q0rLAPK8CiF+JbrLnpHnVThfazbc7Tl5XoXZkwIMAt+S51Xw+qUcE/KePK/C
Ry0ep/l+NJ5XYctZyYjNEeR5Nf7av/vvdwR5Xo3CjeIEoyTyvBq/OD98dieS
59U47O7ZozqdPK/G+Hm/w1NSyfNqvLhv1P/9Z/K8GvPmXr9eE0yeV8PWp6mt
Sxh5Xo0dtl5zjkWQ59Uw0A/8ox1InjPnO/7fpvi35Hk1vobxVtl8IM+rkS0N
sv0QTJ5Xw2zJueC2/uR5NRbrG/3dE0KeV2Ow6YbN1aHkeQ0ud44b+jiKPK9B
1ariQ/YfyfMaBHTePyokhTyvAcSFO7tmkuc1GK1bZOCQQZ7X4ORZg9TxueR5
DcI9T099UkSe12Cz0LHTwVzyvAYzol7ufJ5Nntegs0vG2juJ5HkNntStKr6S
Qp7XwOXq5NZp2eR5DbKSg9vn5JLnNejwTjrrQhZ5XoNBL4aeScwkz2sx07CV
1YNsWu+1iLSpa7c2jXyvRZdnJ2Lyk2n91yLY1alodjx5X4tZVhaJ9zIoD2rh
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
/3JX
          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0.9869680759121567}, 
      PlotRange -> {{0, 1.}, {0.9946494230708154, 1.1482763662439894`}}, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, 
      AxesLabel -> {"Time(Years)", "Stock Price(\[Euro])"}, 
      AxesOrigin -> {0, 0.9869680759121567}, AxesStyle -> 
      Directive[FontSize -> 13], DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, 
      PlotRange -> {{0, 1.}, {0.9946494230708154, 1.1482763662439894`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.008]]}, {"Stock Price"}, 
       LegendMarkers -> {{False, Automatic}}, Joined -> {True}, 
       LabelStyle -> {}, LegendFunction -> (Framed[#, RoundingRadius -> 0]& ),
        LegendLayout -> "Column", LegendMargins -> 0]], {{0., 
      0.}, {-0.5, -5}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.721325849735869*^9, 3.7213258540199995`*^9}, {
   3.721325902157921*^9, 3.7213259118133435`*^9}, 3.721325963875015*^9, {
   3.72132609513562*^9, 3.7213261335831313`*^9}, {3.7213261827819552`*^9, 
   3.7213262637579274`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"False", ",", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Miguel\\\\Documents\\\\GitHub\\\\Thesis\\\\Images\\\\\
GBM.eps\>\"", ",", "img3", ",", "\"\<eps\>\""}], "]"}], ","}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.721331463448429*^9, 3.721331473333743*^9}}]
},
WindowSize->{1350, 676},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1093, 22, 72, "Input"],
Cell[1654, 44, 882, 20, 31, "Input"],
Cell[2539, 66, 411, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[2975, 78, 3506, 75, 112, "Input"],
Cell[6484, 155, 13434, 291, 238, "Output"]
}, Open  ]],
Cell[19933, 449, 429, 8, 31, "Input"],
Cell[20365, 459, 130, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[20520, 465, 126, 2, 31, "Input"],
Cell[20649, 469, 123, 2, 31, "Output"]
}, Open  ]],
Cell[20787, 474, 186, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[20998, 482, 2867, 71, 72, "Input"],
Cell[23868, 555, 22613, 464, 238, "Output"]
}, Open  ]],
Cell[46496, 1022, 283, 6, 31, "Input"],
Cell[46782, 1030, 94, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[46901, 1036, 5922, 155, 312, "Input"],
Cell[52826, 1193, 38033, 688, 238, "Output"]
}, Open  ]],
Cell[90874, 1884, 372, 9, 85, "Input"]
}
]
*)

(* End of internal cache information *)
